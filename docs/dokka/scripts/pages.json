[{"name":"AccountCreation()","description":"com.example.examer.auth.AuthenticationResult.FailureType.AccountCreation","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-account-creation/index.html","searchKeys":["AccountCreation","AccountCreation()","com.example.examer.auth.AuthenticationResult.FailureType.AccountCreation"]},{"name":"COMPLETED()","description":"com.example.examer.data.domain.Status.COMPLETED","location":"app/com.example.examer.data.domain/-status/-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["COMPLETED","COMPLETED()","com.example.examer.data.domain.Status.COMPLETED"]},{"name":"EMAIL()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.EMAIL","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-update-attribute/-e-m-a-i-l/index.html","searchKeys":["EMAIL","EMAIL()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.EMAIL"]},{"name":"FINISH_TEST()","description":"com.example.examer.ui.screens.ButtonTextValue.FINISH_TEST","location":"app/com.example.examer.ui.screens/-button-text-value/-f-i-n-i-s-h_-t-e-s-t/index.html","searchKeys":["FINISH_TEST","FINISH_TEST()","com.example.examer.ui.screens.ButtonTextValue.FINISH_TEST"]},{"name":"IDLE()","description":"com.example.examer.viewmodels.TestSessionViewModel.UiState.IDLE","location":"app/com.example.examer.viewmodels/-test-session-view-model/-ui-state/-i-d-l-e/index.html","searchKeys":["IDLE","IDLE()","com.example.examer.viewmodels.TestSessionViewModel.UiState.IDLE"]},{"name":"IDLE()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.IDLE","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-ui-state/-i-d-l-e/index.html","searchKeys":["IDLE","IDLE()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.IDLE"]},{"name":"INVALID_CREDENTIALS()","description":"com.example.examer.viewmodels.SignUpUiFailureType.INVALID_CREDENTIALS","location":"app/com.example.examer.viewmodels/-sign-up-ui-failure-type/-i-n-v-a-l-i-d_-c-r-e-d-e-n-t-i-a-l-s/index.html","searchKeys":["INVALID_CREDENTIALS","INVALID_CREDENTIALS()","com.example.examer.viewmodels.SignUpUiFailureType.INVALID_CREDENTIALS"]},{"name":"InvalidCredentials()","description":"com.example.examer.auth.AuthenticationResult.FailureType.InvalidCredentials","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-invalid-credentials/index.html","searchKeys":["InvalidCredentials","InvalidCredentials()","com.example.examer.auth.AuthenticationResult.FailureType.InvalidCredentials"]},{"name":"InvalidEmail()","description":"com.example.examer.auth.AuthenticationResult.FailureType.InvalidEmail","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-invalid-email/index.html","searchKeys":["InvalidEmail","InvalidEmail()","com.example.examer.auth.AuthenticationResult.FailureType.InvalidEmail"]},{"name":"InvalidPassword()","description":"com.example.examer.auth.AuthenticationResult.FailureType.InvalidPassword","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-invalid-password/index.html","searchKeys":["InvalidPassword","InvalidPassword()","com.example.examer.auth.AuthenticationResult.FailureType.InvalidPassword"]},{"name":"InvalidUser()","description":"com.example.examer.auth.AuthenticationResult.FailureType.InvalidUser","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-invalid-user/index.html","searchKeys":["InvalidUser","InvalidUser()","com.example.examer.auth.AuthenticationResult.FailureType.InvalidUser"]},{"name":"LOADING()","description":"com.example.examer.viewmodels.LoginUiState.LOADING","location":"app/com.example.examer.viewmodels/-login-ui-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING()","com.example.examer.viewmodels.LoginUiState.LOADING"]},{"name":"LOADING()","description":"com.example.examer.viewmodels.PreviousTestsViewModelUiState.LOADING","location":"app/com.example.examer.viewmodels/-previous-tests-view-model-ui-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING()","com.example.examer.viewmodels.PreviousTestsViewModelUiState.LOADING"]},{"name":"LOADING()","description":"com.example.examer.viewmodels.TestsViewModelUiState.LOADING","location":"app/com.example.examer.viewmodels/-tests-view-model-ui-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING()","com.example.examer.viewmodels.TestsViewModelUiState.LOADING"]},{"name":"LOADING()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.LOADING","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-ui-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.LOADING"]},{"name":"MISSED()","description":"com.example.examer.data.domain.Status.MISSED","location":"app/com.example.examer.data.domain/-status/-m-i-s-s-e-d/index.html","searchKeys":["MISSED","MISSED()","com.example.examer.data.domain.Status.MISSED"]},{"name":"NAME()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.NAME","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-update-attribute/-n-a-m-e/index.html","searchKeys":["NAME","NAME()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.NAME"]},{"name":"NETWORK_ERROR()","description":"com.example.examer.viewmodels.LoginUiState.NETWORK_ERROR","location":"app/com.example.examer.viewmodels/-login-ui-state/-n-e-t-w-o-r-k_-e-r-r-o-r/index.html","searchKeys":["NETWORK_ERROR","NETWORK_ERROR()","com.example.examer.viewmodels.LoginUiState.NETWORK_ERROR"]},{"name":"NETWORK_ERROR()","description":"com.example.examer.viewmodels.SignUpUiFailureType.NETWORK_ERROR","location":"app/com.example.examer.viewmodels/-sign-up-ui-failure-type/-n-e-t-w-o-r-k_-e-r-r-o-r/index.html","searchKeys":["NETWORK_ERROR","NETWORK_ERROR()","com.example.examer.viewmodels.SignUpUiFailureType.NETWORK_ERROR"]},{"name":"NEXT_WORKBOOK()","description":"com.example.examer.ui.screens.ButtonTextValue.NEXT_WORKBOOK","location":"app/com.example.examer.ui.screens/-button-text-value/-n-e-x-t_-w-o-r-k-b-o-o-k/index.html","searchKeys":["NEXT_WORKBOOK","NEXT_WORKBOOK()","com.example.examer.ui.screens.ButtonTextValue.NEXT_WORKBOOK"]},{"name":"NetworkFailure()","description":"com.example.examer.auth.AuthenticationResult.FailureType.NetworkFailure","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-network-failure/index.html","searchKeys":["NetworkFailure","NetworkFailure()","com.example.examer.auth.AuthenticationResult.FailureType.NetworkFailure"]},{"name":"OPEN()","description":"com.example.examer.data.domain.Status.OPEN","location":"app/com.example.examer.data.domain/-status/-o-p-e-n/index.html","searchKeys":["OPEN","OPEN()","com.example.examer.data.domain.Status.OPEN"]},{"name":"PASSWORD()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.PASSWORD","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-update-attribute/-p-a-s-s-w-o-r-d/index.html","searchKeys":["PASSWORD","PASSWORD()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute.PASSWORD"]},{"name":"PREVIOUS_TESTS()","description":"com.example.examer.viewmodels.TestDetailsListType.PREVIOUS_TESTS","location":"app/com.example.examer.viewmodels/-test-details-list-type/-p-r-e-v-i-o-u-s_-t-e-s-t-s/index.html","searchKeys":["PREVIOUS_TESTS","PREVIOUS_TESTS()","com.example.examer.viewmodels.TestDetailsListType.PREVIOUS_TESTS"]},{"name":"SCHEDULED()","description":"com.example.examer.data.domain.Status.SCHEDULED","location":"app/com.example.examer.data.domain/-status/-s-c-h-e-d-u-l-e-d/index.html","searchKeys":["SCHEDULED","SCHEDULED()","com.example.examer.data.domain.Status.SCHEDULED"]},{"name":"SCHEDULED_TESTS()","description":"com.example.examer.viewmodels.TestDetailsListType.SCHEDULED_TESTS","location":"app/com.example.examer.viewmodels/-test-details-list-type/-s-c-h-e-d-u-l-e-d_-t-e-s-t-s/index.html","searchKeys":["SCHEDULED_TESTS","SCHEDULED_TESTS()","com.example.examer.viewmodels.TestDetailsListType.SCHEDULED_TESTS"]},{"name":"SIGNED_OUT()","description":"com.example.examer.viewmodels.LoginUiState.SIGNED_OUT","location":"app/com.example.examer.viewmodels/-login-ui-state/-s-i-g-n-e-d_-o-u-t/index.html","searchKeys":["SIGNED_OUT","SIGNED_OUT()","com.example.examer.viewmodels.LoginUiState.SIGNED_OUT"]},{"name":"SUCCESSFULLY_LOADED()","description":"com.example.examer.viewmodels.PreviousTestsViewModelUiState.SUCCESSFULLY_LOADED","location":"app/com.example.examer.viewmodels/-previous-tests-view-model-ui-state/-s-u-c-c-e-s-s-f-u-l-l-y_-l-o-a-d-e-d/index.html","searchKeys":["SUCCESSFULLY_LOADED","SUCCESSFULLY_LOADED()","com.example.examer.viewmodels.PreviousTestsViewModelUiState.SUCCESSFULLY_LOADED"]},{"name":"SUCCESSFULLY_LOADED()","description":"com.example.examer.viewmodels.TestsViewModelUiState.SUCCESSFULLY_LOADED","location":"app/com.example.examer.viewmodels/-tests-view-model-ui-state/-s-u-c-c-e-s-s-f-u-l-l-y_-l-o-a-d-e-d/index.html","searchKeys":["SUCCESSFULLY_LOADED","SUCCESSFULLY_LOADED()","com.example.examer.viewmodels.TestsViewModelUiState.SUCCESSFULLY_LOADED"]},{"name":"TEST_TIMED_OUT()","description":"com.example.examer.viewmodels.TestSessionViewModel.UiState.TEST_TIMED_OUT","location":"app/com.example.examer.viewmodels/-test-session-view-model/-ui-state/-t-e-s-t_-t-i-m-e-d_-o-u-t/index.html","searchKeys":["TEST_TIMED_OUT","TEST_TIMED_OUT()","com.example.examer.viewmodels.TestSessionViewModel.UiState.TEST_TIMED_OUT"]},{"name":"UPDATE_FAILURE()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.UPDATE_FAILURE","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-ui-state/-u-p-d-a-t-e_-f-a-i-l-u-r-e/index.html","searchKeys":["UPDATE_FAILURE","UPDATE_FAILURE()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.UPDATE_FAILURE"]},{"name":"UPDATE_SUCCESS()","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.UPDATE_SUCCESS","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-ui-state/-u-p-d-a-t-e_-s-u-c-c-e-s-s/index.html","searchKeys":["UPDATE_SUCCESS","UPDATE_SUCCESS()","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState.UPDATE_SUCCESS"]},{"name":"USER_COLLISION()","description":"com.example.examer.viewmodels.SignUpUiFailureType.USER_COLLISION","location":"app/com.example.examer.viewmodels/-sign-up-ui-failure-type/-u-s-e-r_-c-o-l-l-i-s-i-o-n/index.html","searchKeys":["USER_COLLISION","USER_COLLISION()","com.example.examer.viewmodels.SignUpUiFailureType.USER_COLLISION"]},{"name":"UserCollision()","description":"com.example.examer.auth.AuthenticationResult.FailureType.UserCollision","location":"app/com.example.examer.auth/-authentication-result/-failure-type/-user-collision/index.html","searchKeys":["UserCollision","UserCollision()","com.example.examer.auth.AuthenticationResult.FailureType.UserCollision"]},{"name":"WRONG_CREDENTIALS()","description":"com.example.examer.viewmodels.LoginUiState.WRONG_CREDENTIALS","location":"app/com.example.examer.viewmodels/-login-ui-state/-w-r-o-n-g_-c-r-e-d-e-n-t-i-a-l-s/index.html","searchKeys":["WRONG_CREDENTIALS","WRONG_CREDENTIALS()","com.example.examer.viewmodels.LoginUiState.WRONG_CREDENTIALS"]},{"name":"abstract fun authenticate(emailAddress: String, password: String, onSuccess: () -> Unit)","description":"com.example.examer.viewmodels.LogInViewModel.authenticate","location":"app/com.example.examer.viewmodels/-log-in-view-model/authenticate.html","searchKeys":["authenticate","abstract fun authenticate(emailAddress: String, password: String, onSuccess: () -> Unit)","com.example.examer.viewmodels.LogInViewModel.authenticate"]},{"name":"abstract fun createNewAccount(name: String, email: String, password: String, onSuccess: () -> Unit, profilePhotoUri: Uri? = null)","description":"com.example.examer.viewmodels.SignUpViewModel.createNewAccount","location":"app/com.example.examer.viewmodels/-sign-up-view-model/create-new-account.html","searchKeys":["createNewAccount","abstract fun createNewAccount(name: String, email: String, password: String, onSuccess: () -> Unit, profilePhotoUri: Uri? = null)","com.example.examer.viewmodels.SignUpViewModel.createNewAccount"]},{"name":"abstract fun fetchWorkBookListForTestDetails(testDetails: TestDetails, onSuccess: (List<WorkBook>) -> Unit, onFailure: (Throwable) -> Unit? = null)","description":"com.example.examer.viewmodels.TestsViewModel.fetchWorkBookListForTestDetails","location":"app/com.example.examer.viewmodels/-tests-view-model/fetch-work-book-list-for-test-details.html","searchKeys":["fetchWorkBookListForTestDetails","abstract fun fetchWorkBookListForTestDetails(testDetails: TestDetails, onSuccess: (List<WorkBook>) -> Unit, onFailure: (Throwable) -> Unit? = null)","com.example.examer.viewmodels.TestsViewModel.fetchWorkBookListForTestDetails"]},{"name":"abstract fun getPasswordForUser(examerUser: ExamerUser): String","description":"com.example.examer.utils.PasswordManager.getPasswordForUser","location":"app/com.example.examer.utils/-password-manager/get-password-for-user.html","searchKeys":["getPasswordForUser","abstract fun getPasswordForUser(examerUser: ExamerUser): String","com.example.examer.utils.PasswordManager.getPasswordForUser"]},{"name":"abstract fun isValidEmail(email: String): Boolean","description":"com.example.examer.usecases.CredentialsValidationUseCase.isValidEmail","location":"app/com.example.examer.usecases/-credentials-validation-use-case/is-valid-email.html","searchKeys":["isValidEmail","abstract fun isValidEmail(email: String): Boolean","com.example.examer.usecases.CredentialsValidationUseCase.isValidEmail"]},{"name":"abstract fun isValidEmail(email: String): Boolean","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.isValidEmail","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/is-valid-email.html","searchKeys":["isValidEmail","abstract fun isValidEmail(email: String): Boolean","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.isValidEmail"]},{"name":"abstract fun isValidPassword(password: String): Boolean","description":"com.example.examer.usecases.CredentialsValidationUseCase.isValidPassword","location":"app/com.example.examer.usecases/-credentials-validation-use-case/is-valid-password.html","searchKeys":["isValidPassword","abstract fun isValidPassword(password: String): Boolean","com.example.examer.usecases.CredentialsValidationUseCase.isValidPassword"]},{"name":"abstract fun isValidPassword(password: String): Boolean","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.isValidPassword","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/is-valid-password.html","searchKeys":["isValidPassword","abstract fun isValidPassword(password: String): Boolean","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.isValidPassword"]},{"name":"abstract fun markCurrentTestAsComplete()","description":"com.example.examer.viewmodels.TestSessionViewModel.markCurrentTestAsComplete","location":"app/com.example.examer.viewmodels/-test-session-view-model/mark-current-test-as-complete.html","searchKeys":["markCurrentTestAsComplete","abstract fun markCurrentTestAsComplete()","com.example.examer.viewmodels.TestSessionViewModel.markCurrentTestAsComplete"]},{"name":"abstract fun markTestAsMissed(testDetails: TestDetails)","description":"com.example.examer.viewmodels.TestsViewModel.markTestAsMissed","location":"app/com.example.examer.viewmodels/-tests-view-model/mark-test-as-missed.html","searchKeys":["markTestAsMissed","abstract fun markTestAsMissed(testDetails: TestDetails)","com.example.examer.viewmodels.TestsViewModel.markTestAsMissed"]},{"name":"abstract fun moveToNextWorkBook()","description":"com.example.examer.viewmodels.TestSessionViewModel.moveToNextWorkBook","location":"app/com.example.examer.viewmodels/-test-session-view-model/move-to-next-work-book.html","searchKeys":["moveToNextWorkBook","abstract fun moveToNextWorkBook()","com.example.examer.viewmodels.TestSessionViewModel.moveToNextWorkBook"]},{"name":"abstract fun playAudioForCurrentWorkBook()","description":"com.example.examer.viewmodels.TestSessionViewModel.playAudioForCurrentWorkBook","location":"app/com.example.examer.viewmodels/-test-session-view-model/play-audio-for-current-work-book.html","searchKeys":["playAudioForCurrentWorkBook","abstract fun playAudioForCurrentWorkBook()","com.example.examer.viewmodels.TestSessionViewModel.playAudioForCurrentWorkBook"]},{"name":"abstract fun refreshPreviousTestsList()","description":"com.example.examer.viewmodels.PreviousTestsViewModel.refreshPreviousTestsList","location":"app/com.example.examer.viewmodels/-previous-tests-view-model/refresh-previous-tests-list.html","searchKeys":["refreshPreviousTestsList","abstract fun refreshPreviousTestsList()","com.example.examer.viewmodels.PreviousTestsViewModel.refreshPreviousTestsList"]},{"name":"abstract fun refreshTestDetailsList()","description":"com.example.examer.viewmodels.TestsViewModel.refreshTestDetailsList","location":"app/com.example.examer.viewmodels/-tests-view-model/refresh-test-details-list.html","searchKeys":["refreshTestDetailsList","abstract fun refreshTestDetailsList()","com.example.examer.viewmodels.TestsViewModel.refreshTestDetailsList"]},{"name":"abstract fun removeErrorMessage()","description":"com.example.examer.viewmodels.LogInViewModel.removeErrorMessage","location":"app/com.example.examer.viewmodels/-log-in-view-model/remove-error-message.html","searchKeys":["removeErrorMessage","abstract fun removeErrorMessage()","com.example.examer.viewmodels.LogInViewModel.removeErrorMessage"]},{"name":"abstract fun removeErrorMessage()","description":"com.example.examer.viewmodels.SignUpViewModel.removeErrorMessage","location":"app/com.example.examer.viewmodels/-sign-up-view-model/remove-error-message.html","searchKeys":["removeErrorMessage","abstract fun removeErrorMessage()","com.example.examer.viewmodels.SignUpViewModel.removeErrorMessage"]},{"name":"abstract fun savePasswordForUser(examerUser: ExamerUser, password: String)","description":"com.example.examer.utils.PasswordManager.savePasswordForUser","location":"app/com.example.examer.utils/-password-manager/save-password-for-user.html","searchKeys":["savePasswordForUser","abstract fun savePasswordForUser(examerUser: ExamerUser, password: String)","com.example.examer.utils.PasswordManager.savePasswordForUser"]},{"name":"abstract fun saveUserAnswersForTestId(questionsList: List<MultiChoiceQuestion>, answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>, testDetailsId: String, workBookId: String)","description":"com.example.examer.viewmodels.WorkBookViewModel.saveUserAnswersForTestId","location":"app/com.example.examer.viewmodels/-work-book-view-model/save-user-answers-for-test-id.html","searchKeys":["saveUserAnswersForTestId","abstract fun saveUserAnswersForTestId(questionsList: List<MultiChoiceQuestion>, answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>, testDetailsId: String, workBookId: String)","com.example.examer.viewmodels.WorkBookViewModel.saveUserAnswersForTestId"]},{"name":"abstract fun signOut()","description":"com.example.examer.auth.AuthenticationService.signOut","location":"app/com.example.examer.auth/-authentication-service/sign-out.html","searchKeys":["signOut","abstract fun signOut()","com.example.examer.auth.AuthenticationService.signOut"]},{"name":"abstract fun stopAudioPlayback()","description":"com.example.examer.viewmodels.TestSessionViewModel.stopAudioPlayback","location":"app/com.example.examer.viewmodels/-test-session-view-model/stop-audio-playback.html","searchKeys":["stopAudioPlayback","abstract fun stopAudioPlayback()","com.example.examer.viewmodels.TestSessionViewModel.stopAudioPlayback"]},{"name":"abstract fun updateAttributeForCurrentUser(updateAttribute: ProfileScreenViewModel.UpdateAttribute, newValue: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.updateAttributeForCurrentUser","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/update-attribute-for-current-user.html","searchKeys":["updateAttributeForCurrentUser","abstract fun updateAttributeForCurrentUser(updateAttribute: ProfileScreenViewModel.UpdateAttribute, newValue: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.updateAttributeForCurrentUser"]},{"name":"abstract fun updateProfilePicture(imageBitmap: ImageBitmap, resetStateTimeOut: Long = defaultResetStateTimeOut)","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.updateProfilePicture","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/update-profile-picture.html","searchKeys":["updateProfilePicture","abstract fun updateProfilePicture(imageBitmap: ImageBitmap, resetStateTimeOut: Long = defaultResetStateTimeOut)","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.updateProfilePicture"]},{"name":"abstract suspend fun createAccount(username: String, email: String, password: String, profilePhotoUri: Uri? = null): AuthenticationResult","description":"com.example.examer.auth.AuthenticationService.createAccount","location":"app/com.example.examer.auth/-authentication-service/create-account.html","searchKeys":["createAccount","abstract suspend fun createAccount(username: String, email: String, password: String, profilePhotoUri: Uri? = null): AuthenticationResult","com.example.examer.auth.AuthenticationService.createAccount"]},{"name":"abstract suspend fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.Repository.fetchActiveTestListForUser","location":"app/com.example.examer.data/-repository/fetch-active-test-list-for-user.html","searchKeys":["fetchActiveTestListForUser","abstract suspend fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.Repository.fetchActiveTestListForUser"]},{"name":"abstract suspend fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.remote.RemoteDatabase.fetchActiveTestListForUser","location":"app/com.example.examer.data.remote/-remote-database/fetch-active-test-list-for-user.html","searchKeys":["fetchActiveTestListForUser","abstract suspend fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.remote.RemoteDatabase.fetchActiveTestListForUser"]},{"name":"abstract suspend fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.Repository.fetchPreviousTestListForUser","location":"app/com.example.examer.data/-repository/fetch-previous-test-list-for-user.html","searchKeys":["fetchPreviousTestListForUser","abstract suspend fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.Repository.fetchPreviousTestListForUser"]},{"name":"abstract suspend fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.remote.RemoteDatabase.fetchPreviousTestListForUser","location":"app/com.example.examer.data.remote/-remote-database/fetch-previous-test-list-for-user.html","searchKeys":["fetchPreviousTestListForUser","abstract suspend fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.remote.RemoteDatabase.fetchPreviousTestListForUser"]},{"name":"abstract suspend fun fetchResultsForTest(user: ExamerUser, testDetailsId: String): TestResult","description":"com.example.examer.data.remote.RemoteDatabase.fetchResultsForTest","location":"app/com.example.examer.data.remote/-remote-database/fetch-results-for-test.html","searchKeys":["fetchResultsForTest","abstract suspend fun fetchResultsForTest(user: ExamerUser, testDetailsId: String): TestResult","com.example.examer.data.remote.RemoteDatabase.fetchResultsForTest"]},{"name":"abstract suspend fun fetchTestResults(user: ExamerUser, testDetailsId: String): TestResult","description":"com.example.examer.data.Repository.fetchTestResults","location":"app/com.example.examer.data/-repository/fetch-test-results.html","searchKeys":["fetchTestResults","abstract suspend fun fetchTestResults(user: ExamerUser, testDetailsId: String): TestResult","com.example.examer.data.Repository.fetchTestResults"]},{"name":"abstract suspend fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBook>>","description":"com.example.examer.data.Repository.fetchWorkBookList","location":"app/com.example.examer.data/-repository/fetch-work-book-list.html","searchKeys":["fetchWorkBookList","abstract suspend fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBook>>","com.example.examer.data.Repository.fetchWorkBookList"]},{"name":"abstract suspend fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBookDTO>>","description":"com.example.examer.data.remote.RemoteDatabase.fetchWorkBookList","location":"app/com.example.examer.data.remote/-remote-database/fetch-work-book-list.html","searchKeys":["fetchWorkBookList","abstract suspend fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBookDTO>>","com.example.examer.data.remote.RemoteDatabase.fetchWorkBookList"]},{"name":"abstract suspend fun invoke(testDetailsId: String)","description":"com.example.examer.usecases.MarkTestAsCompletedUseCase.invoke","location":"app/com.example.examer.usecases/-mark-test-as-completed-use-case/invoke.html","searchKeys":["invoke","abstract suspend fun invoke(testDetailsId: String)","com.example.examer.usecases.MarkTestAsCompletedUseCase.invoke"]},{"name":"abstract suspend fun markTestAsCompleted(user: ExamerUser, testDetailId: String)","description":"com.example.examer.data.Repository.markTestAsCompleted","location":"app/com.example.examer.data/-repository/mark-test-as-completed.html","searchKeys":["markTestAsCompleted","abstract suspend fun markTestAsCompleted(user: ExamerUser, testDetailId: String)","com.example.examer.data.Repository.markTestAsCompleted"]},{"name":"abstract suspend fun markTestAsCompleted(user: ExamerUser, testDetailsId: String)","description":"com.example.examer.data.remote.RemoteDatabase.markTestAsCompleted","location":"app/com.example.examer.data.remote/-remote-database/mark-test-as-completed.html","searchKeys":["markTestAsCompleted","abstract suspend fun markTestAsCompleted(user: ExamerUser, testDetailsId: String)","com.example.examer.data.remote.RemoteDatabase.markTestAsCompleted"]},{"name":"abstract suspend fun markTestAsMissed(user: ExamerUser, testDetailId: String)","description":"com.example.examer.data.Repository.markTestAsMissed","location":"app/com.example.examer.data/-repository/mark-test-as-missed.html","searchKeys":["markTestAsMissed","abstract suspend fun markTestAsMissed(user: ExamerUser, testDetailId: String)","com.example.examer.data.Repository.markTestAsMissed"]},{"name":"abstract suspend fun markTestAsMissed(user: ExamerUser, testDetailsId: String)","description":"com.example.examer.data.remote.RemoteDatabase.markTestAsMissed","location":"app/com.example.examer.data.remote/-remote-database/mark-test-as-missed.html","searchKeys":["markTestAsMissed","abstract suspend fun markTestAsMissed(user: ExamerUser, testDetailsId: String)","com.example.examer.data.remote.RemoteDatabase.markTestAsMissed"]},{"name":"abstract suspend fun saveBitmap(bitmap: Bitmap, fileName: String): Result<Uri>","description":"com.example.examer.data.remote.RemoteDatabase.saveBitmap","location":"app/com.example.examer.data.remote/-remote-database/save-bitmap.html","searchKeys":["saveBitmap","abstract suspend fun saveBitmap(bitmap: Bitmap, fileName: String): Result<Uri>","com.example.examer.data.remote.RemoteDatabase.saveBitmap"]},{"name":"abstract suspend fun saveProfilePictureForUser(user: ExamerUser, bitmap: Bitmap)","description":"com.example.examer.data.Repository.saveProfilePictureForUser","location":"app/com.example.examer.data/-repository/save-profile-picture-for-user.html","searchKeys":["saveProfilePictureForUser","abstract suspend fun saveProfilePictureForUser(user: ExamerUser, bitmap: Bitmap)","com.example.examer.data.Repository.saveProfilePictureForUser"]},{"name":"abstract suspend fun saveUserAnswers(user: ExamerUser, userAnswers: UserAnswers, testDetailsId: String)","description":"com.example.examer.data.remote.RemoteDatabase.saveUserAnswers","location":"app/com.example.examer.data.remote/-remote-database/save-user-answers.html","searchKeys":["saveUserAnswers","abstract suspend fun saveUserAnswers(user: ExamerUser, userAnswers: UserAnswers, testDetailsId: String)","com.example.examer.data.remote.RemoteDatabase.saveUserAnswers"]},{"name":"abstract suspend fun saveUserAnswersForUser(user: ExamerUser, userAnswers: UserAnswers, testDetailId: String)","description":"com.example.examer.data.Repository.saveUserAnswersForUser","location":"app/com.example.examer.data/-repository/save-user-answers-for-user.html","searchKeys":["saveUserAnswersForUser","abstract suspend fun saveUserAnswersForUser(user: ExamerUser, userAnswers: UserAnswers, testDetailId: String)","com.example.examer.data.Repository.saveUserAnswersForUser"]},{"name":"abstract suspend fun signIn(email: String, password: String): AuthenticationResult","description":"com.example.examer.auth.AuthenticationService.signIn","location":"app/com.example.examer.auth/-authentication-service/sign-in.html","searchKeys":["signIn","abstract suspend fun signIn(email: String, password: String): AuthenticationResult","com.example.examer.auth.AuthenticationService.signIn"]},{"name":"abstract suspend fun update(uri: Uri)","description":"com.example.examer.delegates.UpdateProfileUriDelegate.update","location":"app/com.example.examer.delegates/-update-profile-uri-delegate/update.html","searchKeys":["update","abstract suspend fun update(uri: Uri)","com.example.examer.delegates.UpdateProfileUriDelegate.update"]},{"name":"abstract suspend fun updateAttributeForUser(user: ExamerUser, updateAttribute: AuthenticationService.UpdateAttribute): AuthenticationResult","description":"com.example.examer.auth.AuthenticationService.updateAttributeForUser","location":"app/com.example.examer.auth/-authentication-service/update-attribute-for-user.html","searchKeys":["updateAttributeForUser","abstract suspend fun updateAttributeForUser(user: ExamerUser, updateAttribute: AuthenticationService.UpdateAttribute): AuthenticationResult","com.example.examer.auth.AuthenticationService.updateAttributeForUser"]},{"name":"abstract val currentUser: LiveData<ExamerUser?>","description":"com.example.examer.auth.AuthenticationService.currentUser","location":"app/com.example.examer.auth/-authentication-service/current-user.html","searchKeys":["currentUser","abstract val currentUser: LiveData<ExamerUser?>","com.example.examer.auth.AuthenticationService.currentUser"]},{"name":"abstract val currentWorkBook: State<WorkBook>","description":"com.example.examer.viewmodels.TestSessionViewModel.currentWorkBook","location":"app/com.example.examer.viewmodels/-test-session-view-model/current-work-book.html","searchKeys":["currentWorkBook","abstract val currentWorkBook: State<WorkBook>","com.example.examer.viewmodels.TestSessionViewModel.currentWorkBook"]},{"name":"abstract val currentWorkBookNumber: State<Int>","description":"com.example.examer.viewmodels.TestSessionViewModel.currentWorkBookNumber","location":"app/com.example.examer.viewmodels/-test-session-view-model/current-work-book-number.html","searchKeys":["currentWorkBookNumber","abstract val currentWorkBookNumber: State<Int>","com.example.examer.viewmodels.TestSessionViewModel.currentWorkBookNumber"]},{"name":"abstract val default: CoroutineDispatcher","description":"com.example.examer.di.DispatcherProvider.default","location":"app/com.example.examer.di/-dispatcher-provider/default.html","searchKeys":["default","abstract val default: CoroutineDispatcher","com.example.examer.di.DispatcherProvider.default"]},{"name":"abstract val hoursRemaining: State<String>","description":"com.example.examer.viewmodels.TestSessionViewModel.hoursRemaining","location":"app/com.example.examer.viewmodels/-test-session-view-model/hours-remaining.html","searchKeys":["hoursRemaining","abstract val hoursRemaining: State<String>","com.example.examer.viewmodels.TestSessionViewModel.hoursRemaining"]},{"name":"abstract val io: CoroutineDispatcher","description":"com.example.examer.di.DispatcherProvider.io","location":"app/com.example.examer.di/-dispatcher-provider/io.html","searchKeys":["io","abstract val io: CoroutineDispatcher","com.example.examer.di.DispatcherProvider.io"]},{"name":"abstract val isAudioFilePlaying: State<Boolean>","description":"com.example.examer.viewmodels.TestSessionViewModel.isAudioFilePlaying","location":"app/com.example.examer.viewmodels/-test-session-view-model/is-audio-file-playing.html","searchKeys":["isAudioFilePlaying","abstract val isAudioFilePlaying: State<Boolean>","com.example.examer.viewmodels.TestSessionViewModel.isAudioFilePlaying"]},{"name":"abstract val main: CoroutineDispatcher","description":"com.example.examer.di.DispatcherProvider.main","location":"app/com.example.examer.di/-dispatcher-provider/main.html","searchKeys":["main","abstract val main: CoroutineDispatcher","com.example.examer.di.DispatcherProvider.main"]},{"name":"abstract val minutesRemaining: State<String>","description":"com.example.examer.viewmodels.TestSessionViewModel.minutesRemaining","location":"app/com.example.examer.viewmodels/-test-session-view-model/minutes-remaining.html","searchKeys":["minutesRemaining","abstract val minutesRemaining: State<String>","com.example.examer.viewmodels.TestSessionViewModel.minutesRemaining"]},{"name":"abstract val numberOfRepeatsLeftForAudioFile: State<Int>","description":"com.example.examer.viewmodels.TestSessionViewModel.numberOfRepeatsLeftForAudioFile","location":"app/com.example.examer.viewmodels/-test-session-view-model/number-of-repeats-left-for-audio-file.html","searchKeys":["numberOfRepeatsLeftForAudioFile","abstract val numberOfRepeatsLeftForAudioFile: State<Int>","com.example.examer.viewmodels.TestSessionViewModel.numberOfRepeatsLeftForAudioFile"]},{"name":"abstract val playbackState: State<PlaybackState>","description":"com.example.examer.viewmodels.TestSessionViewModel.playbackState","location":"app/com.example.examer.viewmodels/-test-session-view-model/playback-state.html","searchKeys":["playbackState","abstract val playbackState: State<PlaybackState>","com.example.examer.viewmodels.TestSessionViewModel.playbackState"]},{"name":"abstract val secondsRemaining: State<String>","description":"com.example.examer.viewmodels.TestSessionViewModel.secondsRemaining","location":"app/com.example.examer.viewmodels/-test-session-view-model/seconds-remaining.html","searchKeys":["secondsRemaining","abstract val secondsRemaining: State<String>","com.example.examer.viewmodels.TestSessionViewModel.secondsRemaining"]},{"name":"abstract val testDetailsList: State<List<TestDetails>>","description":"com.example.examer.viewmodels.TestsViewModel.testDetailsList","location":"app/com.example.examer.viewmodels/-tests-view-model/test-details-list.html","searchKeys":["testDetailsList","abstract val testDetailsList: State<List<TestDetails>>","com.example.examer.viewmodels.TestsViewModel.testDetailsList"]},{"name":"abstract val testResultsMap: State<Map<TestDetails, TestResult>>","description":"com.example.examer.viewmodels.PreviousTestsViewModel.testResultsMap","location":"app/com.example.examer.viewmodels/-previous-tests-view-model/test-results-map.html","searchKeys":["testResultsMap","abstract val testResultsMap: State<Map<TestDetails, TestResult>>","com.example.examer.viewmodels.PreviousTestsViewModel.testResultsMap"]},{"name":"abstract val testsViewModelUiState: State<TestsViewModelUiState>","description":"com.example.examer.viewmodels.TestsViewModel.testsViewModelUiState","location":"app/com.example.examer.viewmodels/-tests-view-model/tests-view-model-ui-state.html","searchKeys":["testsViewModelUiState","abstract val testsViewModelUiState: State<TestsViewModelUiState>","com.example.examer.viewmodels.TestsViewModel.testsViewModelUiState"]},{"name":"abstract val uiState: State<LoginUiState>","description":"com.example.examer.viewmodels.LogInViewModel.uiState","location":"app/com.example.examer.viewmodels/-log-in-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: State<LoginUiState>","com.example.examer.viewmodels.LogInViewModel.uiState"]},{"name":"abstract val uiState: State<PreviousTestsViewModelUiState>","description":"com.example.examer.viewmodels.PreviousTestsViewModel.uiState","location":"app/com.example.examer.viewmodels/-previous-tests-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: State<PreviousTestsViewModelUiState>","com.example.examer.viewmodels.PreviousTestsViewModel.uiState"]},{"name":"abstract val uiState: State<ProfileScreenViewModel.UiState>","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.uiState","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: State<ProfileScreenViewModel.UiState>","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.uiState"]},{"name":"abstract val uiState: State<SignUpUiState>","description":"com.example.examer.viewmodels.SignUpViewModel.uiState","location":"app/com.example.examer.viewmodels/-sign-up-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: State<SignUpUiState>","com.example.examer.viewmodels.SignUpViewModel.uiState"]},{"name":"abstract val uiState: State<TestSessionViewModel.UiState>","description":"com.example.examer.viewmodels.TestSessionViewModel.uiState","location":"app/com.example.examer.viewmodels/-test-session-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: State<TestSessionViewModel.UiState>","com.example.examer.viewmodels.TestSessionViewModel.uiState"]},{"name":"abstract val unconfined: CoroutineDispatcher","description":"com.example.examer.di.DispatcherProvider.unconfined","location":"app/com.example.examer.di/-dispatcher-provider/unconfined.html","searchKeys":["unconfined","abstract val unconfined: CoroutineDispatcher","com.example.examer.di.DispatcherProvider.unconfined"]},{"name":"class AppContainer(application: Application)","description":"com.example.examer.di.AppContainer","location":"app/com.example.examer.di/-app-container/index.html","searchKeys":["AppContainer","class AppContainer(application: Application)","com.example.examer.di.AppContainer"]},{"name":"class ExamerApplication : Application","description":"com.example.examer.di.ExamerApplication","location":"app/com.example.examer.di/-examer-application/index.html","searchKeys":["ExamerApplication","class ExamerApplication : Application","com.example.examer.di.ExamerApplication"]},{"name":"class ExamerCredentialsValidationUseCase : CredentialsValidationUseCase","description":"com.example.examer.usecases.ExamerCredentialsValidationUseCase","location":"app/com.example.examer.usecases/-examer-credentials-validation-use-case/index.html","searchKeys":["ExamerCredentialsValidationUseCase","class ExamerCredentialsValidationUseCase : CredentialsValidationUseCase","com.example.examer.usecases.ExamerCredentialsValidationUseCase"]},{"name":"class ExamerFirebaseMessagingService : FirebaseMessagingService","description":"com.example.examer.notifications.ExamerFirebaseMessagingService","location":"app/com.example.examer.notifications/-examer-firebase-messaging-service/index.html","searchKeys":["ExamerFirebaseMessagingService","class ExamerFirebaseMessagingService : FirebaseMessagingService","com.example.examer.notifications.ExamerFirebaseMessagingService"]},{"name":"class ExamerLogInViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModel, LogInViewModel","description":"com.example.examer.viewmodels.ExamerLogInViewModel","location":"app/com.example.examer.viewmodels/-examer-log-in-view-model/index.html","searchKeys":["ExamerLogInViewModel","class ExamerLogInViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModel, LogInViewModel","com.example.examer.viewmodels.ExamerLogInViewModel"]},{"name":"class ExamerMarkTestAsCompletedUseCase(authenticationService: AuthenticationService, repository: Repository) : MarkTestAsCompletedUseCase","description":"com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase","location":"app/com.example.examer.usecases/-examer-mark-test-as-completed-use-case/index.html","searchKeys":["ExamerMarkTestAsCompletedUseCase","class ExamerMarkTestAsCompletedUseCase(authenticationService: AuthenticationService, repository: Repository) : MarkTestAsCompletedUseCase","com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase"]},{"name":"class ExamerPasswordManager(application: Application) : PasswordManager","description":"com.example.examer.utils.ExamerPasswordManager","location":"app/com.example.examer.utils/-examer-password-manager/index.html","searchKeys":["ExamerPasswordManager","class ExamerPasswordManager(application: Application) : PasswordManager","com.example.examer.utils.ExamerPasswordManager"]},{"name":"class ExamerPreviousTestsViewModel(authenticationService: AuthenticationService, repository: Repository) : ViewModel, PreviousTestsViewModel","description":"com.example.examer.viewmodels.ExamerPreviousTestsViewModel","location":"app/com.example.examer.viewmodels/-examer-previous-tests-view-model/index.html","searchKeys":["ExamerPreviousTestsViewModel","class ExamerPreviousTestsViewModel(authenticationService: AuthenticationService, repository: Repository) : ViewModel, PreviousTestsViewModel","com.example.examer.viewmodels.ExamerPreviousTestsViewModel"]},{"name":"class ExamerProfileScreenViewModel(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase) : AndroidViewModel, ProfileScreenViewModel, CredentialsValidationUseCase","description":"com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-examer-profile-screen-view-model/index.html","searchKeys":["ExamerProfileScreenViewModel","class ExamerProfileScreenViewModel(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase) : AndroidViewModel, ProfileScreenViewModel, CredentialsValidationUseCase","com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel"]},{"name":"class ExamerRepository(context: Context, remoteDatabase: RemoteDatabase, updateProfileUriDelegate: UpdateProfileUriDelegate) : Repository","description":"com.example.examer.data.ExamerRepository","location":"app/com.example.examer.data/-examer-repository/index.html","searchKeys":["ExamerRepository","class ExamerRepository(context: Context, remoteDatabase: RemoteDatabase, updateProfileUriDelegate: UpdateProfileUriDelegate) : Repository","com.example.examer.data.ExamerRepository"]},{"name":"class ExamerSignUpViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModel, SignUpViewModel, CredentialsValidationUseCase","description":"com.example.examer.viewmodels.ExamerSignUpViewModel","location":"app/com.example.examer.viewmodels/-examer-sign-up-view-model/index.html","searchKeys":["ExamerSignUpViewModel","class ExamerSignUpViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModel, SignUpViewModel, CredentialsValidationUseCase","com.example.examer.viewmodels.ExamerSignUpViewModel"]},{"name":"class ExamerTestSessionViewModel(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModel, TestSessionViewModel","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/index.html","searchKeys":["ExamerTestSessionViewModel","class ExamerTestSessionViewModel(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModel, TestSessionViewModel","com.example.examer.viewmodels.ExamerTestSessionViewModel"]},{"name":"class ExamerTestsViewModel(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType) : ViewModel, TestsViewModel","description":"com.example.examer.viewmodels.ExamerTestsViewModel","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/index.html","searchKeys":["ExamerTestsViewModel","class ExamerTestsViewModel(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType) : ViewModel, TestsViewModel","com.example.examer.viewmodels.ExamerTestsViewModel"]},{"name":"class ExamerUpdateProfileUriDelegate(authenticationService: AuthenticationService) : UpdateProfileUriDelegate","description":"com.example.examer.delegates.ExamerUpdateProfileUriDelegate","location":"app/com.example.examer.delegates/-examer-update-profile-uri-delegate/index.html","searchKeys":["ExamerUpdateProfileUriDelegate","class ExamerUpdateProfileUriDelegate(authenticationService: AuthenticationService) : UpdateProfileUriDelegate","com.example.examer.delegates.ExamerUpdateProfileUriDelegate"]},{"name":"class ExamerWorkBookViewModel(application: Application) : AndroidViewModel, WorkBookViewModel","description":"com.example.examer.viewmodels.ExamerWorkBookViewModel","location":"app/com.example.examer.viewmodels/-examer-work-book-view-model/index.html","searchKeys":["ExamerWorkBookViewModel","class ExamerWorkBookViewModel(application: Application) : AndroidViewModel, WorkBookViewModel","com.example.examer.viewmodels.ExamerWorkBookViewModel"]},{"name":"class FirebaseAuthenticationService(defaultDispatcher: CoroutineDispatcher = Dispatchers.IO) : AuthenticationService","description":"com.example.examer.auth.FirebaseAuthenticationService","location":"app/com.example.examer.auth/-firebase-authentication-service/index.html","searchKeys":["FirebaseAuthenticationService","class FirebaseAuthenticationService(defaultDispatcher: CoroutineDispatcher = Dispatchers.IO) : AuthenticationService","com.example.examer.auth.FirebaseAuthenticationService"]},{"name":"class FirebaseRemoteDatabase(dispatcherProvider: DispatcherProvider) : RemoteDatabase","description":"com.example.examer.data.remote.FirebaseRemoteDatabase","location":"app/com.example.examer.data.remote/-firebase-remote-database/index.html","searchKeys":["FirebaseRemoteDatabase","class FirebaseRemoteDatabase(dispatcherProvider: DispatcherProvider) : RemoteDatabase","com.example.examer.data.remote.FirebaseRemoteDatabase"]},{"name":"class LocalDateTimeSerializer : KSerializer<LocalDateTime> ","description":"com.example.examer.data.domain.serializers.LocalDateTimeSerializer","location":"app/com.example.examer.data.domain.serializers/-local-date-time-serializer/index.html","searchKeys":["LocalDateTimeSerializer","class LocalDateTimeSerializer : KSerializer<LocalDateTime> ","com.example.examer.data.domain.serializers.LocalDateTimeSerializer"]},{"name":"class LogInViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModelProvider.Factory","description":"com.example.examer.utils.LogInViewModelFactory","location":"app/com.example.examer.utils/-log-in-view-model-factory/index.html","searchKeys":["LogInViewModelFactory","class LogInViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModelProvider.Factory","com.example.examer.utils.LogInViewModelFactory"]},{"name":"class MainActivity : ComponentActivity","description":"com.example.examer.ui.activities.MainActivity","location":"app/com.example.examer.ui.activities/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : ComponentActivity","com.example.examer.ui.activities.MainActivity"]},{"name":"class PlaybackState(isPlaybackEnabled: Boolean = true, startProgress: Float = 0.0f)","description":"com.example.examer.ui.screens.listenToAudioScreen.PlaybackState","location":"app/com.example.examer.ui.screens.listenToAudioScreen/-playback-state/index.html","searchKeys":["PlaybackState","class PlaybackState(isPlaybackEnabled: Boolean = true, startProgress: Float = 0.0f)","com.example.examer.ui.screens.listenToAudioScreen.PlaybackState"]},{"name":"class Previos(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModelProvider.Factory","description":"com.example.examer.utils.Previos","location":"app/com.example.examer.utils/-previos/index.html","searchKeys":["Previos","class Previos(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModelProvider.Factory","com.example.examer.utils.Previos"]},{"name":"class PreviousTestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository) : ViewModelProvider.Factory","description":"com.example.examer.utils.PreviousTestsViewModelFactory","location":"app/com.example.examer.utils/-previous-tests-view-model-factory/index.html","searchKeys":["PreviousTestsViewModelFactory","class PreviousTestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository) : ViewModelProvider.Factory","com.example.examer.utils.PreviousTestsViewModelFactory"]},{"name":"class ProfileScreenViewModelFactory(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase) : ViewModelProvider.Factory","description":"com.example.examer.utils.ProfileScreenViewModelFactory","location":"app/com.example.examer.utils/-profile-screen-view-model-factory/index.html","searchKeys":["ProfileScreenViewModelFactory","class ProfileScreenViewModelFactory(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase) : ViewModelProvider.Factory","com.example.examer.utils.ProfileScreenViewModelFactory"]},{"name":"class SaveUserAnswersWorker(appContext: Context, workerParameters: WorkerParameters) : CoroutineWorker","description":"com.example.examer.data.workers.SaveUserAnswersWorker","location":"app/com.example.examer.data.workers/-save-user-answers-worker/index.html","searchKeys":["SaveUserAnswersWorker","class SaveUserAnswersWorker(appContext: Context, workerParameters: WorkerParameters) : CoroutineWorker","com.example.examer.data.workers.SaveUserAnswersWorker"]},{"name":"class SignUpViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModelProvider.Factory","description":"com.example.examer.utils.SignUpViewModelFactory","location":"app/com.example.examer.utils/-sign-up-view-model-factory/index.html","searchKeys":["SignUpViewModelFactory","class SignUpViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main)) : ViewModelProvider.Factory","com.example.examer.utils.SignUpViewModelFactory"]},{"name":"class TestSessionViewModelFactory(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModelProvider.Factory","description":"com.example.examer.utils.TestSessionViewModelFactory","location":"app/com.example.examer.utils/-test-session-view-model-factory/index.html","searchKeys":["TestSessionViewModelFactory","class TestSessionViewModelFactory(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase) : ViewModelProvider.Factory","com.example.examer.utils.TestSessionViewModelFactory"]},{"name":"class TestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType) : ViewModelProvider.Factory","description":"com.example.examer.utils.TestsViewModelFactory","location":"app/com.example.examer.utils/-tests-view-model-factory/index.html","searchKeys":["TestsViewModelFactory","class TestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType) : ViewModelProvider.Factory","com.example.examer.utils.TestsViewModelFactory"]},{"name":"class UriSerializer : KSerializer<Uri> ","description":"com.example.examer.data.domain.serializers.UriSerializer","location":"app/com.example.examer.data.domain.serializers/-uri-serializer/index.html","searchKeys":["UriSerializer","class UriSerializer : KSerializer<Uri> ","com.example.examer.data.domain.serializers.UriSerializer"]},{"name":"class WorkBookViewModelFactory(application: Application) : ViewModelProvider.Factory","description":"com.example.examer.utils.WorkBookViewModelFactory","location":"app/com.example.examer.utils/-work-book-view-model-factory/index.html","searchKeys":["WorkBookViewModelFactory","class WorkBookViewModelFactory(application: Application) : ViewModelProvider.Factory","com.example.examer.utils.WorkBookViewModelFactory"]},{"name":"const val IS_LAST_WORKBOOK_ARG: String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.IS_LAST_WORKBOOK_ARG","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/-i-s_-l-a-s-t_-w-o-r-k-b-o-o-k_-a-r-g.html","searchKeys":["IS_LAST_WORKBOOK_ARG","const val IS_LAST_WORKBOOK_ARG: String","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.IS_LAST_WORKBOOK_ARG"]},{"name":"const val KEY_TEST_DETAILS_ID_ARG: String","description":"com.example.examer.data.workers.SaveUserAnswersWorker.Companion.KEY_TEST_DETAILS_ID_ARG","location":"app/com.example.examer.data.workers/-save-user-answers-worker/-companion/-k-e-y_-t-e-s-t_-d-e-t-a-i-l-s_-i-d_-a-r-g.html","searchKeys":["KEY_TEST_DETAILS_ID_ARG","const val KEY_TEST_DETAILS_ID_ARG: String","com.example.examer.data.workers.SaveUserAnswersWorker.Companion.KEY_TEST_DETAILS_ID_ARG"]},{"name":"const val KEY_USER_ANSWERS_JSON_STRING_ARG: String","description":"com.example.examer.data.workers.SaveUserAnswersWorker.Companion.KEY_USER_ANSWERS_JSON_STRING_ARG","location":"app/com.example.examer.data.workers/-save-user-answers-worker/-companion/-k-e-y_-u-s-e-r_-a-n-s-w-e-r-s_-j-s-o-n_-s-t-r-i-n-g_-a-r-g.html","searchKeys":["KEY_USER_ANSWERS_JSON_STRING_ARG","const val KEY_USER_ANSWERS_JSON_STRING_ARG: String","com.example.examer.data.workers.SaveUserAnswersWorker.Companion.KEY_USER_ANSWERS_JSON_STRING_ARG"]},{"name":"const val QUESTIONS_LIST_ARG: String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.QUESTIONS_LIST_ARG","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/-q-u-e-s-t-i-o-n-s_-l-i-s-t_-a-r-g.html","searchKeys":["QUESTIONS_LIST_ARG","const val QUESTIONS_LIST_ARG: String","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.QUESTIONS_LIST_ARG"]},{"name":"const val TEST_DETAILS_ARG: String","description":"com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.TEST_DETAILS_ARG","location":"app/com.example.examer.ui.navigation/-examer-destinations/-take-test-screen/-t-e-s-t_-d-e-t-a-i-l-s_-a-r-g.html","searchKeys":["TEST_DETAILS_ARG","const val TEST_DETAILS_ARG: String","com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.TEST_DETAILS_ARG"]},{"name":"const val TEST_DETAILS_ID_ARG: String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.TEST_DETAILS_ID_ARG","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/-t-e-s-t_-d-e-t-a-i-l-s_-i-d_-a-r-g.html","searchKeys":["TEST_DETAILS_ID_ARG","const val TEST_DETAILS_ID_ARG: String","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.TEST_DETAILS_ID_ARG"]},{"name":"const val WORKBOOK_ID_ARG: String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.WORKBOOK_ID_ARG","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/-w-o-r-k-b-o-o-k_-i-d_-a-r-g.html","searchKeys":["WORKBOOK_ID_ARG","const val WORKBOOK_ID_ARG: String","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.WORKBOOK_ID_ARG"]},{"name":"const val WORKBOOK_LIST_ARG: String","description":"com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.WORKBOOK_LIST_ARG","location":"app/com.example.examer.ui.navigation/-examer-destinations/-take-test-screen/-w-o-r-k-b-o-o-k_-l-i-s-t_-a-r-g.html","searchKeys":["WORKBOOK_LIST_ARG","const val WORKBOOK_LIST_ARG: String","com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.WORKBOOK_LIST_ARG"]},{"name":"const val defaultResetStateTimeOut: Long","description":"com.example.examer.viewmodels.profileScreenViewModel.defaultResetStateTimeOut","location":"app/com.example.examer.viewmodels.profileScreenViewModel/default-reset-state-time-out.html","searchKeys":["defaultResetStateTimeOut","const val defaultResetStateTimeOut: Long","com.example.examer.viewmodels.profileScreenViewModel.defaultResetStateTimeOut"]},{"name":"data class AudioFileDTO(val audioFileUrl: URL, val numberOfRepeatsAllowedForAudioFile: Int)","description":"com.example.examer.data.dto.AudioFileDTO","location":"app/com.example.examer.data.dto/-audio-file-d-t-o/index.html","searchKeys":["AudioFileDTO","data class AudioFileDTO(val audioFileUrl: URL, val numberOfRepeatsAllowedForAudioFile: Int)","com.example.examer.data.dto.AudioFileDTO"]},{"name":"data class Email(val newEmail: String, val password: String) : AuthenticationService.UpdateAttribute","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Email","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-email/index.html","searchKeys":["Email","data class Email(val newEmail: String, val password: String) : AuthenticationService.UpdateAttribute","com.example.examer.auth.AuthenticationService.UpdateAttribute.Email"]},{"name":"data class ExamerAudioFile(val localAudioFileUri: Uri, val numberOfRepeatsAllowedForAudioFile: Int) : Serializable","description":"com.example.examer.data.domain.ExamerAudioFile","location":"app/com.example.examer.data.domain/-examer-audio-file/index.html","searchKeys":["ExamerAudioFile","data class ExamerAudioFile(val localAudioFileUri: Uri, val numberOfRepeatsAllowedForAudioFile: Int) : Serializable","com.example.examer.data.domain.ExamerAudioFile"]},{"name":"data class ExamerTestCardColors(val takeTestButtonColor: Color, val statusColors: StatusColors)","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/index.html","searchKeys":["ExamerTestCardColors","data class ExamerTestCardColors(val takeTestButtonColor: Color, val statusColors: StatusColors)","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors"]},{"name":"data class ExamerUser(val id: String, val name: String, val email: String, val phoneNumber: String?, val photoUrl: Uri? = null)","description":"com.example.examer.data.domain.ExamerUser","location":"app/com.example.examer.data.domain/-examer-user/index.html","searchKeys":["ExamerUser","data class ExamerUser(val id: String, val name: String, val email: String, val phoneNumber: String?, val photoUrl: Uri? = null)","com.example.examer.data.domain.ExamerUser"]},{"name":"data class Failed(val cause: SignUpUiFailureType) : SignUpUiState","description":"com.example.examer.viewmodels.SignUpUiState.Failed","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/-failed/index.html","searchKeys":["Failed","data class Failed(val cause: SignUpUiFailureType) : SignUpUiState","com.example.examer.viewmodels.SignUpUiState.Failed"]},{"name":"data class Failure(val failureType: AuthenticationResult.FailureType) : AuthenticationResult","description":"com.example.examer.auth.AuthenticationResult.Failure","location":"app/com.example.examer.auth/-authentication-result/-failure/index.html","searchKeys":["Failure","data class Failure(val failureType: AuthenticationResult.FailureType) : AuthenticationResult","com.example.examer.auth.AuthenticationResult.Failure"]},{"name":"data class MultiChoiceQuestion(val id: String, val question: String, val options: Array<String>, val indexOfCorrectOption: Int, val mark: Int) : Serializable","description":"com.example.examer.data.domain.MultiChoiceQuestion","location":"app/com.example.examer.data.domain/-multi-choice-question/index.html","searchKeys":["MultiChoiceQuestion","data class MultiChoiceQuestion(val id: String, val question: String, val options: Array<String>, val indexOfCorrectOption: Int, val mark: Int) : Serializable","com.example.examer.data.domain.MultiChoiceQuestion"]},{"name":"data class MultiChoiceQuestionDTO(val questionNumber: Int, val question: String, val options: Array<String>, val indexOfCorrectOption: Int, val markForQuestion: Int)","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/index.html","searchKeys":["MultiChoiceQuestionDTO","data class MultiChoiceQuestionDTO(val questionNumber: Int, val question: String, val options: Array<String>, val indexOfCorrectOption: Int, val markForQuestion: Int)","com.example.examer.data.dto.MultiChoiceQuestionDTO"]},{"name":"data class Name(val newName: String) : AuthenticationService.UpdateAttribute","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Name","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-name/index.html","searchKeys":["Name","data class Name(val newName: String) : AuthenticationService.UpdateAttribute","com.example.examer.auth.AuthenticationService.UpdateAttribute.Name"]},{"name":"data class NavigationDrawerDestination(val icon: ImageVector, val name: String, val onClick: () -> Unit)","description":"com.example.examer.ui.components.NavigationDrawerDestination","location":"app/com.example.examer.ui.components/-navigation-drawer-destination/index.html","searchKeys":["NavigationDrawerDestination","data class NavigationDrawerDestination(val icon: ImageVector, val name: String, val onClick: () -> Unit)","com.example.examer.ui.components.NavigationDrawerDestination"]},{"name":"data class NavigationDrawerItemColors(val backgroundColor: Color, val contentColor: Color)","description":"com.example.examer.ui.components.NavigationDrawerItemColors","location":"app/com.example.examer.ui.components/-navigation-drawer-item-colors/index.html","searchKeys":["NavigationDrawerItemColors","data class NavigationDrawerItemColors(val backgroundColor: Color, val contentColor: Color)","com.example.examer.ui.components.NavigationDrawerItemColors"]},{"name":"data class Password(val newPassword: String, val oldPassword: String) : AuthenticationService.UpdateAttribute","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Password","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-password/index.html","searchKeys":["Password","data class Password(val newPassword: String, val oldPassword: String) : AuthenticationService.UpdateAttribute","com.example.examer.auth.AuthenticationService.UpdateAttribute.Password"]},{"name":"data class ProfilePhotoUri(val newPhotoUri: Uri) : AuthenticationService.UpdateAttribute","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-profile-photo-uri/index.html","searchKeys":["ProfilePhotoUri","data class ProfilePhotoUri(val newPhotoUri: Uri) : AuthenticationService.UpdateAttribute","com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri"]},{"name":"data class StandardDispatchersProvider(val main: MainCoroutineDispatcher = Dispatchers.Main, val io: CoroutineDispatcher = Dispatchers.IO, val default: CoroutineDispatcher = Dispatchers.Default, val unconfined: CoroutineDispatcher = Dispatchers.Unconfined) : DispatcherProvider","description":"com.example.examer.di.StandardDispatchersProvider","location":"app/com.example.examer.di/-standard-dispatchers-provider/index.html","searchKeys":["StandardDispatchersProvider","data class StandardDispatchersProvider(val main: MainCoroutineDispatcher = Dispatchers.Main, val io: CoroutineDispatcher = Dispatchers.IO, val default: CoroutineDispatcher = Dispatchers.Default, val unconfined: CoroutineDispatcher = Dispatchers.Unconfined) : DispatcherProvider","com.example.examer.di.StandardDispatchersProvider"]},{"name":"data class StatusColors(val open: Color, val scheduled: Color, val missed: Color, val completed: Color)","description":"com.example.examer.ui.components.examerTestCard.StatusColors","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/index.html","searchKeys":["StatusColors","data class StatusColors(val open: Color, val scheduled: Color, val missed: Color, val completed: Color)","com.example.examer.ui.components.examerTestCard.StatusColors"]},{"name":"data class Success(val user: ExamerUser) : AuthenticationResult","description":"com.example.examer.auth.AuthenticationResult.Success","location":"app/com.example.examer.auth/-authentication-result/-success/index.html","searchKeys":["Success","data class Success(val user: ExamerUser) : AuthenticationResult","com.example.examer.auth.AuthenticationResult.Success"]},{"name":"data class TestDetails(val id: String, val title: String, val description: String, val language: String, val localDateTime: LocalDateTime, val totalNumberOfWorkBooks: Int, val testDurationInMinutes: Int, val testStatus: Status) : Serializable","description":"com.example.examer.data.domain.TestDetails","location":"app/com.example.examer.data.domain/-test-details/index.html","searchKeys":["TestDetails","data class TestDetails(val id: String, val title: String, val description: String, val language: String, val localDateTime: LocalDateTime, val totalNumberOfWorkBooks: Int, val testDurationInMinutes: Int, val testStatus: Status) : Serializable","com.example.examer.data.domain.TestDetails"]},{"name":"data class TestDetailsDTO(val id: String, val title: String, val description: String, val language: String, val timeStamp: String, val totalNumberOfWorkBooks: String, val testDurationInMinutes: String, val testStatus: String, val maximumMarks: String)","description":"com.example.examer.data.dto.TestDetailsDTO","location":"app/com.example.examer.data.dto/-test-details-d-t-o/index.html","searchKeys":["TestDetailsDTO","data class TestDetailsDTO(val id: String, val title: String, val description: String, val language: String, val timeStamp: String, val totalNumberOfWorkBooks: String, val testDurationInMinutes: String, val testStatus: String, val maximumMarks: String)","com.example.examer.data.dto.TestDetailsDTO"]},{"name":"data class TestResult(val testDetailsId: String, val marksObtained: Int, val maximumMarks: Int)","description":"com.example.examer.data.domain.TestResult","location":"app/com.example.examer.data.domain/-test-result/index.html","searchKeys":["TestResult","data class TestResult(val testDetailsId: String, val marksObtained: Int, val maximumMarks: Int)","com.example.examer.data.domain.TestResult"]},{"name":"data class UserAnswers(val associatedWorkBookId: String, val answers: Map<MultiChoiceQuestion, IndexOfChosenOption>, val marksObtainedForWorkBook: Int)","description":"com.example.examer.data.domain.UserAnswers","location":"app/com.example.examer.data.domain/-user-answers/index.html","searchKeys":["UserAnswers","data class UserAnswers(val associatedWorkBookId: String, val answers: Map<MultiChoiceQuestion, IndexOfChosenOption>, val marksObtainedForWorkBook: Int)","com.example.examer.data.domain.UserAnswers"]},{"name":"data class UserAnswersDTO(val associatedWorkBookId: String, val answersDetailsMap: List<Map<String, String>>, val marksObtainedForWorkBook: String)","description":"com.example.examer.data.dto.UserAnswersDTO","location":"app/com.example.examer.data.dto/-user-answers-d-t-o/index.html","searchKeys":["UserAnswersDTO","data class UserAnswersDTO(val associatedWorkBookId: String, val answersDetailsMap: List<Map<String, String>>, val marksObtainedForWorkBook: String)","com.example.examer.data.dto.UserAnswersDTO"]},{"name":"data class UserAttribute(val label: String, val value: String, val onClick: () -> Unit)","description":"com.example.examer.ui.screens.UserAttribute","location":"app/com.example.examer.ui.screens/-user-attribute/index.html","searchKeys":["UserAttribute","data class UserAttribute(val label: String, val value: String, val onClick: () -> Unit)","com.example.examer.ui.screens.UserAttribute"]},{"name":"data class VectorArtCard(val id: Int, val title: String, val description: String, val imageDescription: String)","description":"com.example.examer.ui.screens.onboarding.VectorArtCard","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/index.html","searchKeys":["VectorArtCard","data class VectorArtCard(val id: Int, val title: String, val description: String, val imageDescription: String)","com.example.examer.ui.screens.onboarding.VectorArtCard"]},{"name":"data class WorkBook(val id: String, val audioFile: ExamerAudioFile, val questions: List<MultiChoiceQuestion>) : Serializable","description":"com.example.examer.data.domain.WorkBook","location":"app/com.example.examer.data.domain/-work-book/index.html","searchKeys":["WorkBook","data class WorkBook(val id: String, val audioFile: ExamerAudioFile, val questions: List<MultiChoiceQuestion>) : Serializable","com.example.examer.data.domain.WorkBook"]},{"name":"data class WorkBookDTO(val id: String, val audioFile: AudioFileDTO, val questions: List<MultiChoiceQuestionDTO>)","description":"com.example.examer.data.dto.WorkBookDTO","location":"app/com.example.examer.data.dto/-work-book-d-t-o/index.html","searchKeys":["WorkBookDTO","data class WorkBookDTO(val id: String, val audioFile: AudioFileDTO, val questions: List<MultiChoiceQuestionDTO>)","com.example.examer.data.dto.WorkBookDTO"]},{"name":"enum ButtonTextValue : Enum<ButtonTextValue> ","description":"com.example.examer.ui.screens.ButtonTextValue","location":"app/com.example.examer.ui.screens/-button-text-value/index.html","searchKeys":["ButtonTextValue","enum ButtonTextValue : Enum<ButtonTextValue> ","com.example.examer.ui.screens.ButtonTextValue"]},{"name":"enum FailureType : Enum<AuthenticationResult.FailureType> ","description":"com.example.examer.auth.AuthenticationResult.FailureType","location":"app/com.example.examer.auth/-authentication-result/-failure-type/index.html","searchKeys":["FailureType","enum FailureType : Enum<AuthenticationResult.FailureType> ","com.example.examer.auth.AuthenticationResult.FailureType"]},{"name":"enum LoginUiState : Enum<LoginUiState> ","description":"com.example.examer.viewmodels.LoginUiState","location":"app/com.example.examer.viewmodels/-login-ui-state/index.html","searchKeys":["LoginUiState","enum LoginUiState : Enum<LoginUiState> ","com.example.examer.viewmodels.LoginUiState"]},{"name":"enum PreviousTestsViewModelUiState : Enum<PreviousTestsViewModelUiState> ","description":"com.example.examer.viewmodels.PreviousTestsViewModelUiState","location":"app/com.example.examer.viewmodels/-previous-tests-view-model-ui-state/index.html","searchKeys":["PreviousTestsViewModelUiState","enum PreviousTestsViewModelUiState : Enum<PreviousTestsViewModelUiState> ","com.example.examer.viewmodels.PreviousTestsViewModelUiState"]},{"name":"enum SignUpUiFailureType : Enum<SignUpUiFailureType> ","description":"com.example.examer.viewmodels.SignUpUiFailureType","location":"app/com.example.examer.viewmodels/-sign-up-ui-failure-type/index.html","searchKeys":["SignUpUiFailureType","enum SignUpUiFailureType : Enum<SignUpUiFailureType> ","com.example.examer.viewmodels.SignUpUiFailureType"]},{"name":"enum Status : Enum<Status> ","description":"com.example.examer.data.domain.Status","location":"app/com.example.examer.data.domain/-status/index.html","searchKeys":["Status","enum Status : Enum<Status> ","com.example.examer.data.domain.Status"]},{"name":"enum TestDetailsListType : Enum<TestDetailsListType> ","description":"com.example.examer.viewmodels.TestDetailsListType","location":"app/com.example.examer.viewmodels/-test-details-list-type/index.html","searchKeys":["TestDetailsListType","enum TestDetailsListType : Enum<TestDetailsListType> ","com.example.examer.viewmodels.TestDetailsListType"]},{"name":"enum TestsViewModelUiState : Enum<TestsViewModelUiState> ","description":"com.example.examer.viewmodels.TestsViewModelUiState","location":"app/com.example.examer.viewmodels/-tests-view-model-ui-state/index.html","searchKeys":["TestsViewModelUiState","enum TestsViewModelUiState : Enum<TestsViewModelUiState> ","com.example.examer.viewmodels.TestsViewModelUiState"]},{"name":"enum UiState : Enum<ProfileScreenViewModel.UiState> ","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-ui-state/index.html","searchKeys":["UiState","enum UiState : Enum<ProfileScreenViewModel.UiState> ","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UiState"]},{"name":"enum UiState : Enum<TestSessionViewModel.UiState> ","description":"com.example.examer.viewmodels.TestSessionViewModel.UiState","location":"app/com.example.examer.viewmodels/-test-session-view-model/-ui-state/index.html","searchKeys":["UiState","enum UiState : Enum<TestSessionViewModel.UiState> ","com.example.examer.viewmodels.TestSessionViewModel.UiState"]},{"name":"enum UpdateAttribute : Enum<ProfileScreenViewModel.UpdateAttribute> ","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/-update-attribute/index.html","searchKeys":["UpdateAttribute","enum UpdateAttribute : Enum<ProfileScreenViewModel.UpdateAttribute> ","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel.UpdateAttribute"]},{"name":"fun AlertDialog(title: String, message: String, confirmText: String, onConfirmButtonClick: () -> Unit, dismissButtonText: String, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","description":"com.example.examer.ui.components.AlertDialog","location":"app/com.example.examer.ui.components/-alert-dialog.html","searchKeys":["AlertDialog","fun AlertDialog(title: String, message: String, confirmText: String, onConfirmButtonClick: () -> Unit, dismissButtonText: String, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","com.example.examer.ui.components.AlertDialog"]},{"name":"fun AlertDialog(title: String, message: String, confirmText: String, onConfirmButtonClick: () -> Unit, onDismissRequest: () -> Unit)","description":"com.example.examer.ui.components.AlertDialog","location":"app/com.example.examer.ui.components/-alert-dialog.html","searchKeys":["AlertDialog","fun AlertDialog(title: String, message: String, confirmText: String, onConfirmButtonClick: () -> Unit, onDismissRequest: () -> Unit)","com.example.examer.ui.components.AlertDialog"]},{"name":"fun AppContainer(application: Application)","description":"com.example.examer.di.AppContainer.AppContainer","location":"app/com.example.examer.di/-app-container/-app-container.html","searchKeys":["AppContainer","fun AppContainer(application: Application)","com.example.examer.di.AppContainer.AppContainer"]},{"name":"fun AudioFileDTO(audioFileUrl: URL, numberOfRepeatsAllowedForAudioFile: Int)","description":"com.example.examer.data.dto.AudioFileDTO.AudioFileDTO","location":"app/com.example.examer.data.dto/-audio-file-d-t-o/-audio-file-d-t-o.html","searchKeys":["AudioFileDTO","fun AudioFileDTO(audioFileUrl: URL, numberOfRepeatsAllowedForAudioFile: Int)","com.example.examer.data.dto.AudioFileDTO.AudioFileDTO"]},{"name":"fun CircularLoadingProgressOverlay(modifier: Modifier = Modifier, overlayColor: Color = Color.Black, isOverlayVisible: Boolean, content: () -> Unit)","description":"com.example.examer.ui.components.CircularLoadingProgressOverlay","location":"app/com.example.examer.ui.components/-circular-loading-progress-overlay.html","searchKeys":["CircularLoadingProgressOverlay","fun CircularLoadingProgressOverlay(modifier: Modifier = Modifier, overlayColor: Color = Color.Black, isOverlayVisible: Boolean, content: () -> Unit)","com.example.examer.ui.components.CircularLoadingProgressOverlay"]},{"name":"fun Context.isDeviceAutomaticDateTimeEnabled(): Boolean","description":"com.example.examer.utils.isDeviceAutomaticDateTimeEnabled","location":"app/com.example.examer.utils/is-device-automatic-date-time-enabled.html","searchKeys":["isDeviceAutomaticDateTimeEnabled","fun Context.isDeviceAutomaticDateTimeEnabled(): Boolean","com.example.examer.utils.isDeviceAutomaticDateTimeEnabled"]},{"name":"fun Context.isDeviceAutomaticTimeZoneEnabled(): Boolean","description":"com.example.examer.utils.isDeviceAutomaticTimeZoneEnabled","location":"app/com.example.examer.utils/is-device-automatic-time-zone-enabled.html","searchKeys":["isDeviceAutomaticTimeZoneEnabled","fun Context.isDeviceAutomaticTimeZoneEnabled(): Boolean","com.example.examer.utils.isDeviceAutomaticTimeZoneEnabled"]},{"name":"fun DefaultExamerExpandableTestCard(test: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, onTakeTestButtonClick: () -> Unit, modifier: Modifier = Modifier, onClick: () -> Unit = {}, is24HourTimeFormat: Boolean = false)","description":"com.example.examer.ui.components.examerTestCard.DefaultExamerExpandableTestCard","location":"app/com.example.examer.ui.components.examerTestCard/-default-examer-expandable-test-card.html","searchKeys":["DefaultExamerExpandableTestCard","fun DefaultExamerExpandableTestCard(test: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, onTakeTestButtonClick: () -> Unit, modifier: Modifier = Modifier, onClick: () -> Unit = {}, is24HourTimeFormat: Boolean = false)","com.example.examer.ui.components.examerTestCard.DefaultExamerExpandableTestCard"]},{"name":"fun DefaultExamerProfileScreen(currentlyLoggedInUser: ExamerUser, isLoadingOverlayVisible: Boolean, onNavigateToEditScreen: () -> Unit? = null, onNavigateFromEditScreen: () -> Unit? = null, updateProfilePicture: (image: ImageBitmap) -> Unit, updateName: (newName: String) -> Unit, updateEmail: (newEmail: String) -> Unit, updatePassword: (newPassword: String) -> Unit, isValidEmail: (String) -> Boolean, isValidPassword: (String) -> Boolean)","description":"com.example.examer.ui.screens.DefaultExamerProfileScreen","location":"app/com.example.examer.ui.screens/-default-examer-profile-screen.html","searchKeys":["DefaultExamerProfileScreen","fun DefaultExamerProfileScreen(currentlyLoggedInUser: ExamerUser, isLoadingOverlayVisible: Boolean, onNavigateToEditScreen: () -> Unit? = null, onNavigateFromEditScreen: () -> Unit? = null, updateProfilePicture: (image: ImageBitmap) -> Unit, updateName: (newName: String) -> Unit, updateEmail: (newEmail: String) -> Unit, updatePassword: (newPassword: String) -> Unit, isValidEmail: (String) -> Boolean, isValidPassword: (String) -> Boolean)","com.example.examer.ui.screens.DefaultExamerProfileScreen"]},{"name":"fun DocumentSnapshot.toUserAnswersDTO(): UserAnswersDTO","description":"com.example.examer.data.dto.toUserAnswersDTO","location":"app/com.example.examer.data.dto/to-user-answers-d-t-o.html","searchKeys":["toUserAnswersDTO","fun DocumentSnapshot.toUserAnswersDTO(): UserAnswersDTO","com.example.examer.data.dto.toUserAnswersDTO"]},{"name":"fun Email(newEmail: String, password: String)","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.Email","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-email/-email.html","searchKeys":["Email","fun Email(newEmail: String, password: String)","com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.Email"]},{"name":"fun ExamerApp(appContainer: AppContainer)","description":"com.example.examer.ui.screens.ExamerApp","location":"app/com.example.examer.ui.screens/-examer-app.html","searchKeys":["ExamerApp","fun ExamerApp(appContainer: AppContainer)","com.example.examer.ui.screens.ExamerApp"]},{"name":"fun ExamerApplication()","description":"com.example.examer.di.ExamerApplication.ExamerApplication","location":"app/com.example.examer.di/-examer-application/-examer-application.html","searchKeys":["ExamerApplication","fun ExamerApplication()","com.example.examer.di.ExamerApplication.ExamerApplication"]},{"name":"fun ExamerAudioFile(localAudioFileUri: Uri, numberOfRepeatsAllowedForAudioFile: Int)","description":"com.example.examer.data.domain.ExamerAudioFile.ExamerAudioFile","location":"app/com.example.examer.data.domain/-examer-audio-file/-examer-audio-file.html","searchKeys":["ExamerAudioFile","fun ExamerAudioFile(localAudioFileUri: Uri, numberOfRepeatsAllowedForAudioFile: Int)","com.example.examer.data.domain.ExamerAudioFile.ExamerAudioFile"]},{"name":"fun ExamerCardMetadataRow(dateString: String, timeString: String, testDurationInMinutes: String)","description":"com.example.examer.ui.components.examerTestCard.ExamerCardMetadataRow","location":"app/com.example.examer.ui.components.examerTestCard/-examer-card-metadata-row.html","searchKeys":["ExamerCardMetadataRow","fun ExamerCardMetadataRow(dateString: String, timeString: String, testDurationInMinutes: String)","com.example.examer.ui.components.examerTestCard.ExamerCardMetadataRow"]},{"name":"fun ExamerCredentialsValidationUseCase()","description":"com.example.examer.usecases.ExamerCredentialsValidationUseCase.ExamerCredentialsValidationUseCase","location":"app/com.example.examer.usecases/-examer-credentials-validation-use-case/-examer-credentials-validation-use-case.html","searchKeys":["ExamerCredentialsValidationUseCase","fun ExamerCredentialsValidationUseCase()","com.example.examer.usecases.ExamerCredentialsValidationUseCase.ExamerCredentialsValidationUseCase"]},{"name":"fun ExamerExpandableTestCard(test: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, modifier: Modifier = Modifier, onClick: () -> Unit = {}, is24HourTimeFormat: Boolean = false, expandedContent: () -> Unit)","description":"com.example.examer.ui.components.examerTestCard.ExamerExpandableTestCard","location":"app/com.example.examer.ui.components.examerTestCard/-examer-expandable-test-card.html","searchKeys":["ExamerExpandableTestCard","fun ExamerExpandableTestCard(test: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, modifier: Modifier = Modifier, onClick: () -> Unit = {}, is24HourTimeFormat: Boolean = false, expandedContent: () -> Unit)","com.example.examer.ui.components.examerTestCard.ExamerExpandableTestCard"]},{"name":"fun ExamerFirebaseMessagingService()","description":"com.example.examer.notifications.ExamerFirebaseMessagingService.ExamerFirebaseMessagingService","location":"app/com.example.examer.notifications/-examer-firebase-messaging-service/-examer-firebase-messaging-service.html","searchKeys":["ExamerFirebaseMessagingService","fun ExamerFirebaseMessagingService()","com.example.examer.notifications.ExamerFirebaseMessagingService.ExamerFirebaseMessagingService"]},{"name":"fun ExamerLogInViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","description":"com.example.examer.viewmodels.ExamerLogInViewModel.ExamerLogInViewModel","location":"app/com.example.examer.viewmodels/-examer-log-in-view-model/-examer-log-in-view-model.html","searchKeys":["ExamerLogInViewModel","fun ExamerLogInViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","com.example.examer.viewmodels.ExamerLogInViewModel.ExamerLogInViewModel"]},{"name":"fun ExamerMarkTestAsCompletedUseCase(authenticationService: AuthenticationService, repository: Repository)","description":"com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase.ExamerMarkTestAsCompletedUseCase","location":"app/com.example.examer.usecases/-examer-mark-test-as-completed-use-case/-examer-mark-test-as-completed-use-case.html","searchKeys":["ExamerMarkTestAsCompletedUseCase","fun ExamerMarkTestAsCompletedUseCase(authenticationService: AuthenticationService, repository: Repository)","com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase.ExamerMarkTestAsCompletedUseCase"]},{"name":"fun ExamerNavigationScaffold(currentlyLoggedInUser: ExamerUser, imagePainter: ImagePainter, modifier: Modifier = Modifier, scaffoldState: ScaffoldState = rememberScaffoldState(), isTopAppBarVisible: Boolean = true, navigationIconImageVector: ImageVector = Icons.Filled.Menu, onNavigationIconClick: () -> Unit? = null, isDrawerGesturesEnabled: Boolean = true, isNavigationDrawerDestinationSelected: (NavigationDrawerDestination) -> Boolean? = null, navigationDrawerDestinations: List<NavigationDrawerDestination>, onSignOutButtonClick: () -> Unit? = null, content: (PaddingValues) -> Unit)","description":"com.example.examer.ui.components.ExamerNavigationScaffold","location":"app/com.example.examer.ui.components/-examer-navigation-scaffold.html","searchKeys":["ExamerNavigationScaffold","fun ExamerNavigationScaffold(currentlyLoggedInUser: ExamerUser, imagePainter: ImagePainter, modifier: Modifier = Modifier, scaffoldState: ScaffoldState = rememberScaffoldState(), isTopAppBarVisible: Boolean = true, navigationIconImageVector: ImageVector = Icons.Filled.Menu, onNavigationIconClick: () -> Unit? = null, isDrawerGesturesEnabled: Boolean = true, isNavigationDrawerDestinationSelected: (NavigationDrawerDestination) -> Boolean? = null, navigationDrawerDestinations: List<NavigationDrawerDestination>, onSignOutButtonClick: () -> Unit? = null, content: (PaddingValues) -> Unit)","com.example.examer.ui.components.ExamerNavigationScaffold"]},{"name":"fun ExamerPasswordManager(application: Application)","description":"com.example.examer.utils.ExamerPasswordManager.ExamerPasswordManager","location":"app/com.example.examer.utils/-examer-password-manager/-examer-password-manager.html","searchKeys":["ExamerPasswordManager","fun ExamerPasswordManager(application: Application)","com.example.examer.utils.ExamerPasswordManager.ExamerPasswordManager"]},{"name":"fun ExamerPreviousTestsViewModel(authenticationService: AuthenticationService, repository: Repository)","description":"com.example.examer.viewmodels.ExamerPreviousTestsViewModel.ExamerPreviousTestsViewModel","location":"app/com.example.examer.viewmodels/-examer-previous-tests-view-model/-examer-previous-tests-view-model.html","searchKeys":["ExamerPreviousTestsViewModel","fun ExamerPreviousTestsViewModel(authenticationService: AuthenticationService, repository: Repository)","com.example.examer.viewmodels.ExamerPreviousTestsViewModel.ExamerPreviousTestsViewModel"]},{"name":"fun ExamerProfileScreenViewModel(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase)","description":"com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.ExamerProfileScreenViewModel","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-examer-profile-screen-view-model/-examer-profile-screen-view-model.html","searchKeys":["ExamerProfileScreenViewModel","fun ExamerProfileScreenViewModel(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase)","com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.ExamerProfileScreenViewModel"]},{"name":"fun ExamerRepository(context: Context, remoteDatabase: RemoteDatabase, updateProfileUriDelegate: UpdateProfileUriDelegate)","description":"com.example.examer.data.ExamerRepository.ExamerRepository","location":"app/com.example.examer.data/-examer-repository/-examer-repository.html","searchKeys":["ExamerRepository","fun ExamerRepository(context: Context, remoteDatabase: RemoteDatabase, updateProfileUriDelegate: UpdateProfileUriDelegate)","com.example.examer.data.ExamerRepository.ExamerRepository"]},{"name":"fun ExamerSignUpViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","description":"com.example.examer.viewmodels.ExamerSignUpViewModel.ExamerSignUpViewModel","location":"app/com.example.examer.viewmodels/-examer-sign-up-view-model/-examer-sign-up-view-model.html","searchKeys":["ExamerSignUpViewModel","fun ExamerSignUpViewModel(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","com.example.examer.viewmodels.ExamerSignUpViewModel.ExamerSignUpViewModel"]},{"name":"fun ExamerSingleLineTextField(modifier: Modifier = Modifier, value: String, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, keyboardActions: KeyboardActions = KeyboardActions.Default, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, label: () -> Unit? = null, onValueChange: (String) -> Unit)","description":"com.example.examer.ui.components.ExamerSingleLineTextField","location":"app/com.example.examer.ui.components/-examer-single-line-text-field.html","searchKeys":["ExamerSingleLineTextField","fun ExamerSingleLineTextField(modifier: Modifier = Modifier, value: String, placeholder: () -> Unit? = null, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, keyboardActions: KeyboardActions = KeyboardActions.Default, isError: Boolean = false, visualTransformation: VisualTransformation = VisualTransformation.None, label: () -> Unit? = null, onValueChange: (String) -> Unit)","com.example.examer.ui.components.ExamerSingleLineTextField"]},{"name":"fun ExamerTestCardColors(takeTestButtonColor: Color, statusColors: StatusColors)","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.ExamerTestCardColors","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/-examer-test-card-colors.html","searchKeys":["ExamerTestCardColors","fun ExamerTestCardColors(takeTestButtonColor: Color, statusColors: StatusColors)","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.ExamerTestCardColors"]},{"name":"fun ExamerTestSessionViewModel(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.ExamerTestSessionViewModel","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/-examer-test-session-view-model.html","searchKeys":["ExamerTestSessionViewModel","fun ExamerTestSessionViewModel(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","com.example.examer.viewmodels.ExamerTestSessionViewModel.ExamerTestSessionViewModel"]},{"name":"fun ExamerTestsViewModel(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType)","description":"com.example.examer.viewmodels.ExamerTestsViewModel.ExamerTestsViewModel","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/-examer-tests-view-model.html","searchKeys":["ExamerTestsViewModel","fun ExamerTestsViewModel(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType)","com.example.examer.viewmodels.ExamerTestsViewModel.ExamerTestsViewModel"]},{"name":"fun ExamerTheme(darkTheme: Boolean = isSystemInDarkTheme(), content: () -> Unit)","description":"com.example.examer.ui.theme.ExamerTheme","location":"app/com.example.examer.ui.theme/-examer-theme.html","searchKeys":["ExamerTheme","fun ExamerTheme(darkTheme: Boolean = isSystemInDarkTheme(), content: () -> Unit)","com.example.examer.ui.theme.ExamerTheme"]},{"name":"fun ExamerUpdateProfileUriDelegate(authenticationService: AuthenticationService)","description":"com.example.examer.delegates.ExamerUpdateProfileUriDelegate.ExamerUpdateProfileUriDelegate","location":"app/com.example.examer.delegates/-examer-update-profile-uri-delegate/-examer-update-profile-uri-delegate.html","searchKeys":["ExamerUpdateProfileUriDelegate","fun ExamerUpdateProfileUriDelegate(authenticationService: AuthenticationService)","com.example.examer.delegates.ExamerUpdateProfileUriDelegate.ExamerUpdateProfileUriDelegate"]},{"name":"fun ExamerUser(id: String, name: String, email: String, phoneNumber: String?, photoUrl: Uri? = null)","description":"com.example.examer.data.domain.ExamerUser.ExamerUser","location":"app/com.example.examer.data.domain/-examer-user/-examer-user.html","searchKeys":["ExamerUser","fun ExamerUser(id: String, name: String, email: String, phoneNumber: String?, photoUrl: Uri? = null)","com.example.examer.data.domain.ExamerUser.ExamerUser"]},{"name":"fun ExamerWorkBookViewModel(application: Application)","description":"com.example.examer.viewmodels.ExamerWorkBookViewModel.ExamerWorkBookViewModel","location":"app/com.example.examer.viewmodels/-examer-work-book-view-model/-examer-work-book-view-model.html","searchKeys":["ExamerWorkBookViewModel","fun ExamerWorkBookViewModel(application: Application)","com.example.examer.viewmodels.ExamerWorkBookViewModel.ExamerWorkBookViewModel"]},{"name":"fun ExitAlertDialog(onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","description":"com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.ExitAlertDialog","location":"app/com.example.examer.ui.screens/-take-test-screen-composable-alert-dialog-boxes/-exit-alert-dialog.html","searchKeys":["ExitAlertDialog","fun ExitAlertDialog(onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.ExitAlertDialog"]},{"name":"fun Failed(cause: SignUpUiFailureType)","description":"com.example.examer.viewmodels.SignUpUiState.Failed.Failed","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/-failed/-failed.html","searchKeys":["Failed","fun Failed(cause: SignUpUiFailureType)","com.example.examer.viewmodels.SignUpUiState.Failed.Failed"]},{"name":"fun Failure(failureType: AuthenticationResult.FailureType)","description":"com.example.examer.auth.AuthenticationResult.Failure.Failure","location":"app/com.example.examer.auth/-authentication-result/-failure/-failure.html","searchKeys":["Failure","fun Failure(failureType: AuthenticationResult.FailureType)","com.example.examer.auth.AuthenticationResult.Failure.Failure"]},{"name":"fun FinishTestAlertDialog(onDismissRequest: () -> Unit, onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit)","description":"com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.FinishTestAlertDialog","location":"app/com.example.examer.ui.screens/-take-test-screen-composable-alert-dialog-boxes/-finish-test-alert-dialog.html","searchKeys":["FinishTestAlertDialog","fun FinishTestAlertDialog(onDismissRequest: () -> Unit, onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit)","com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.FinishTestAlertDialog"]},{"name":"fun FirebaseAuthenticationService(defaultDispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.example.examer.auth.FirebaseAuthenticationService.FirebaseAuthenticationService","location":"app/com.example.examer.auth/-firebase-authentication-service/-firebase-authentication-service.html","searchKeys":["FirebaseAuthenticationService","fun FirebaseAuthenticationService(defaultDispatcher: CoroutineDispatcher = Dispatchers.IO)","com.example.examer.auth.FirebaseAuthenticationService.FirebaseAuthenticationService"]},{"name":"fun FirebaseRemoteDatabase(dispatcherProvider: DispatcherProvider)","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.FirebaseRemoteDatabase","location":"app/com.example.examer.data.remote/-firebase-remote-database/-firebase-remote-database.html","searchKeys":["FirebaseRemoteDatabase","fun FirebaseRemoteDatabase(dispatcherProvider: DispatcherProvider)","com.example.examer.data.remote.FirebaseRemoteDatabase.FirebaseRemoteDatabase"]},{"name":"fun IndexOfChosenOption(value: Int)","description":"com.example.examer.data.domain.IndexOfChosenOption.IndexOfChosenOption","location":"app/com.example.examer.data.domain/-index-of-chosen-option/-index-of-chosen-option.html","searchKeys":["IndexOfChosenOption","fun IndexOfChosenOption(value: Int)","com.example.examer.data.domain.IndexOfChosenOption.IndexOfChosenOption"]},{"name":"fun Int.isSingleDigit(): Boolean","description":"com.example.examer.utils.isSingleDigit","location":"app/com.example.examer.utils/is-single-digit.html","searchKeys":["isSingleDigit","fun Int.isSingleDigit(): Boolean","com.example.examer.utils.isSingleDigit"]},{"name":"fun Int.toString(appendZeroIfSingleDigit: Boolean): String","description":"com.example.examer.utils.toString","location":"app/com.example.examer.utils/to-string.html","searchKeys":["toString","fun Int.toString(appendZeroIfSingleDigit: Boolean): String","com.example.examer.utils.toString"]},{"name":"fun ListenToAudioScreen(playbackState: PlaybackState, numberOfRepeatsLeftForCurrentAudioFile: Int, onNavigateToWorkBook: () -> Unit, onAudioIconClick: () -> Unit = {})","description":"com.example.examer.ui.screens.listenToAudioScreen.ListenToAudioScreen","location":"app/com.example.examer.ui.screens.listenToAudioScreen/-listen-to-audio-screen.html","searchKeys":["ListenToAudioScreen","fun ListenToAudioScreen(playbackState: PlaybackState, numberOfRepeatsLeftForCurrentAudioFile: Int, onNavigateToWorkBook: () -> Unit, onAudioIconClick: () -> Unit = {})","com.example.examer.ui.screens.listenToAudioScreen.ListenToAudioScreen"]},{"name":"fun LocalDateTimeSerializer()","description":"com.example.examer.data.domain.serializers.LocalDateTimeSerializer.LocalDateTimeSerializer","location":"app/com.example.examer.data.domain.serializers/-local-date-time-serializer/-local-date-time-serializer.html","searchKeys":["LocalDateTimeSerializer","fun LocalDateTimeSerializer()","com.example.examer.data.domain.serializers.LocalDateTimeSerializer.LocalDateTimeSerializer"]},{"name":"fun LogInViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","description":"com.example.examer.utils.LogInViewModelFactory.LogInViewModelFactory","location":"app/com.example.examer.utils/-log-in-view-model-factory/-log-in-view-model-factory.html","searchKeys":["LogInViewModelFactory","fun LogInViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","com.example.examer.utils.LogInViewModelFactory.LogInViewModelFactory"]},{"name":"fun LoggedInScreen(onSignOut: () -> Unit, appContainer: AppContainer, currentlyLoggedInUser: ExamerUser)","description":"com.example.examer.ui.screens.LoggedInScreen","location":"app/com.example.examer.ui.screens/-logged-in-screen.html","searchKeys":["LoggedInScreen","fun LoggedInScreen(onSignOut: () -> Unit, appContainer: AppContainer, currentlyLoggedInUser: ExamerUser)","com.example.examer.ui.screens.LoggedInScreen"]},{"name":"fun LoginScreen(emailAddressText: String, onEmailAddressTextChange: (String) -> Unit, passwordText: String, onPasswordTextChange: (String) -> Unit, onLoginButtonClick: () -> Unit, modifier: Modifier = Modifier, isLoginButtonEnabled: Boolean = true, isLoadingOverlayVisible: Boolean = false, isErrorMessageVisible: Boolean = false, errorMessage: () -> Unit = {}, isPasswordVisible: Boolean = false, onPasswordVisibilityIconClick: () -> Unit = {}, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.example.examer.ui.screens.onboarding.LoginScreen","location":"app/com.example.examer.ui.screens.onboarding/-login-screen.html","searchKeys":["LoginScreen","fun LoginScreen(emailAddressText: String, onEmailAddressTextChange: (String) -> Unit, passwordText: String, onPasswordTextChange: (String) -> Unit, onLoginButtonClick: () -> Unit, modifier: Modifier = Modifier, isLoginButtonEnabled: Boolean = true, isLoadingOverlayVisible: Boolean = false, isErrorMessageVisible: Boolean = false, errorMessage: () -> Unit = {}, isPasswordVisible: Boolean = false, onPasswordVisibilityIconClick: () -> Unit = {}, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.example.examer.ui.screens.onboarding.LoginScreen"]},{"name":"fun LoginScreen(viewModel: LogInViewModel, onSuccessfulAuthentication: () -> Unit)","description":"com.example.examer.ui.screens.onboarding.LoginScreen","location":"app/com.example.examer.ui.screens.onboarding/-login-screen.html","searchKeys":["LoginScreen","fun LoginScreen(viewModel: LogInViewModel, onSuccessfulAuthentication: () -> Unit)","com.example.examer.ui.screens.onboarding.LoginScreen"]},{"name":"fun MainActivity()","description":"com.example.examer.ui.activities.MainActivity.MainActivity","location":"app/com.example.examer.ui.activities/-main-activity/-main-activity.html","searchKeys":["MainActivity","fun MainActivity()","com.example.examer.ui.activities.MainActivity.MainActivity"]},{"name":"fun Modifier.conditional(condition: Boolean, modifierScope: Modifier.() -> Modifier): Modifier","description":"com.example.examer.utils.conditional","location":"app/com.example.examer.utils/conditional.html","searchKeys":["conditional","fun Modifier.conditional(condition: Boolean, modifierScope: Modifier.() -> Modifier): Modifier","com.example.examer.utils.conditional"]},{"name":"fun MultiChoiceQuestion(id: String, question: String, options: Array<String>, indexOfCorrectOption: Int, mark: Int)","description":"com.example.examer.data.domain.MultiChoiceQuestion.MultiChoiceQuestion","location":"app/com.example.examer.data.domain/-multi-choice-question/-multi-choice-question.html","searchKeys":["MultiChoiceQuestion","fun MultiChoiceQuestion(id: String, question: String, options: Array<String>, indexOfCorrectOption: Int, mark: Int)","com.example.examer.data.domain.MultiChoiceQuestion.MultiChoiceQuestion"]},{"name":"fun MultiChoiceQuestionCard(questionNumber: Int, question: String, options: Array<String>, mark: Int, currentlySelectedIndex: Int, onOptionClick: (index: Int, questionNumber: Int, string: String) -> Unit, modifier: Modifier = Modifier)","description":"com.example.examer.ui.components.MultiChoiceQuestionCard","location":"app/com.example.examer.ui.components/-multi-choice-question-card.html","searchKeys":["MultiChoiceQuestionCard","fun MultiChoiceQuestionCard(questionNumber: Int, question: String, options: Array<String>, mark: Int, currentlySelectedIndex: Int, onOptionClick: (index: Int, questionNumber: Int, string: String) -> Unit, modifier: Modifier = Modifier)","com.example.examer.ui.components.MultiChoiceQuestionCard"]},{"name":"fun MultiChoiceQuestionDTO(questionNumber: Int, question: String, options: Array<String>, indexOfCorrectOption: Int, markForQuestion: Int)","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.MultiChoiceQuestionDTO","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/-multi-choice-question-d-t-o.html","searchKeys":["MultiChoiceQuestionDTO","fun MultiChoiceQuestionDTO(questionNumber: Int, question: String, options: Array<String>, indexOfCorrectOption: Int, markForQuestion: Int)","com.example.examer.data.dto.MultiChoiceQuestionDTO.MultiChoiceQuestionDTO"]},{"name":"fun MultiChoiceQuestionDTO.toMultiChoiceQuestion(): MultiChoiceQuestion","description":"com.example.examer.data.dto.toMultiChoiceQuestion","location":"app/com.example.examer.data.dto/to-multi-choice-question.html","searchKeys":["toMultiChoiceQuestion","fun MultiChoiceQuestionDTO.toMultiChoiceQuestion(): MultiChoiceQuestion","com.example.examer.data.dto.toMultiChoiceQuestion"]},{"name":"fun MultiChoiceQuestionListDTO(questions: List<MultiChoiceQuestionDTO>)","description":"com.example.examer.data.dto.MultiChoiceQuestionListDTO.MultiChoiceQuestionListDTO","location":"app/com.example.examer.data.dto/-multi-choice-question-list-d-t-o/-multi-choice-question-list-d-t-o.html","searchKeys":["MultiChoiceQuestionListDTO","fun MultiChoiceQuestionListDTO(questions: List<MultiChoiceQuestionDTO>)","com.example.examer.data.dto.MultiChoiceQuestionListDTO.MultiChoiceQuestionListDTO"]},{"name":"fun Name(newName: String)","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Name.Name","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-name/-name.html","searchKeys":["Name","fun Name(newName: String)","com.example.examer.auth.AuthenticationService.UpdateAttribute.Name.Name"]},{"name":"fun NavigationDrawerDestination(icon: ImageVector, name: String, onClick: () -> Unit)","description":"com.example.examer.ui.components.NavigationDrawerDestination.NavigationDrawerDestination","location":"app/com.example.examer.ui.components/-navigation-drawer-destination/-navigation-drawer-destination.html","searchKeys":["NavigationDrawerDestination","fun NavigationDrawerDestination(icon: ImageVector, name: String, onClick: () -> Unit)","com.example.examer.ui.components.NavigationDrawerDestination.NavigationDrawerDestination"]},{"name":"fun NavigationDrawerItem(icon: ImageVector, label: String, isSelected: Boolean = false, onClick: () -> Unit? = null, activeColors: NavigationDrawerItemColors = NavigationDrawerItemDefaults.activeColors, inactiveColors: NavigationDrawerItemColors = NavigationDrawerItemDefaults.inactiveColors, shape: RoundedCornerShape = NavigationDrawerItemDefaults.shape)","description":"com.example.examer.ui.components.NavigationDrawerItem","location":"app/com.example.examer.ui.components/-navigation-drawer-item.html","searchKeys":["NavigationDrawerItem","fun NavigationDrawerItem(icon: ImageVector, label: String, isSelected: Boolean = false, onClick: () -> Unit? = null, activeColors: NavigationDrawerItemColors = NavigationDrawerItemDefaults.activeColors, inactiveColors: NavigationDrawerItemColors = NavigationDrawerItemDefaults.inactiveColors, shape: RoundedCornerShape = NavigationDrawerItemDefaults.shape)","com.example.examer.ui.components.NavigationDrawerItem"]},{"name":"fun NavigationDrawerItemColors(backgroundColor: Color, contentColor: Color)","description":"com.example.examer.ui.components.NavigationDrawerItemColors.NavigationDrawerItemColors","location":"app/com.example.examer.ui.components/-navigation-drawer-item-colors/-navigation-drawer-item-colors.html","searchKeys":["NavigationDrawerItemColors","fun NavigationDrawerItemColors(backgroundColor: Color, contentColor: Color)","com.example.examer.ui.components.NavigationDrawerItemColors.NavigationDrawerItemColors"]},{"name":"fun Password(newPassword: String, oldPassword: String)","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.Password","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-password/-password.html","searchKeys":["Password","fun Password(newPassword: String, oldPassword: String)","com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.Password"]},{"name":"fun PlaybackState(isPlaybackEnabled: Boolean = true, startProgress: Float = 0.0f)","description":"com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.PlaybackState","location":"app/com.example.examer.ui.screens.listenToAudioScreen/-playback-state/-playback-state.html","searchKeys":["PlaybackState","fun PlaybackState(isPlaybackEnabled: Boolean = true, startProgress: Float = 0.0f)","com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.PlaybackState"]},{"name":"fun Previos(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","description":"com.example.examer.utils.Previos.Previos","location":"app/com.example.examer.utils/-previos/-previos.html","searchKeys":["Previos","fun Previos(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","com.example.examer.utils.Previos.Previos"]},{"name":"fun PreviousTestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository)","description":"com.example.examer.utils.PreviousTestsViewModelFactory.PreviousTestsViewModelFactory","location":"app/com.example.examer.utils/-previous-tests-view-model-factory/-previous-tests-view-model-factory.html","searchKeys":["PreviousTestsViewModelFactory","fun PreviousTestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository)","com.example.examer.utils.PreviousTestsViewModelFactory.PreviousTestsViewModelFactory"]},{"name":"fun ProfilePhotoUri(newPhotoUri: Uri)","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri.ProfilePhotoUri","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-profile-photo-uri/-profile-photo-uri.html","searchKeys":["ProfilePhotoUri","fun ProfilePhotoUri(newPhotoUri: Uri)","com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri.ProfilePhotoUri"]},{"name":"fun ProfileScreen(imagePainter: ImagePainter, onEditProfilePictureButtonClick: () -> Unit, userAttributes: List<UserAttribute>, scrollState: ScrollState)","description":"com.example.examer.ui.screens.ProfileScreen","location":"app/com.example.examer.ui.screens/-profile-screen.html","searchKeys":["ProfileScreen","fun ProfileScreen(imagePainter: ImagePainter, onEditProfilePictureButtonClick: () -> Unit, userAttributes: List<UserAttribute>, scrollState: ScrollState)","com.example.examer.ui.screens.ProfileScreen"]},{"name":"fun ProfileScreenViewModel.updateEmail(newEmail: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","description":"com.example.examer.viewmodels.profileScreenViewModel.updateEmail","location":"app/com.example.examer.viewmodels.profileScreenViewModel/update-email.html","searchKeys":["updateEmail","fun ProfileScreenViewModel.updateEmail(newEmail: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","com.example.examer.viewmodels.profileScreenViewModel.updateEmail"]},{"name":"fun ProfileScreenViewModel.updateName(newName: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","description":"com.example.examer.viewmodels.profileScreenViewModel.updateName","location":"app/com.example.examer.viewmodels.profileScreenViewModel/update-name.html","searchKeys":["updateName","fun ProfileScreenViewModel.updateName(newName: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","com.example.examer.viewmodels.profileScreenViewModel.updateName"]},{"name":"fun ProfileScreenViewModel.updatePassword(newPassword: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","description":"com.example.examer.viewmodels.profileScreenViewModel.updatePassword","location":"app/com.example.examer.viewmodels.profileScreenViewModel/update-password.html","searchKeys":["updatePassword","fun ProfileScreenViewModel.updatePassword(newPassword: String, resetStateTimeOut: Long = defaultResetStateTimeOut)","com.example.examer.viewmodels.profileScreenViewModel.updatePassword"]},{"name":"fun ProfileScreenViewModelFactory(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase)","description":"com.example.examer.utils.ProfileScreenViewModelFactory.ProfileScreenViewModelFactory","location":"app/com.example.examer.utils/-profile-screen-view-model-factory/-profile-screen-view-model-factory.html","searchKeys":["ProfileScreenViewModelFactory","fun ProfileScreenViewModelFactory(application: Application, repository: Repository, authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase)","com.example.examer.utils.ProfileScreenViewModelFactory.ProfileScreenViewModelFactory"]},{"name":"fun QuitTestAlertDialog(onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","description":"com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.QuitTestAlertDialog","location":"app/com.example.examer.ui.screens/-take-test-screen-composable-alert-dialog-boxes/-quit-test-alert-dialog.html","searchKeys":["QuitTestAlertDialog","fun QuitTestAlertDialog(onConfirmButtonClick: () -> Unit, onDismissButtonClick: () -> Unit, onDismissRequest: () -> Unit)","com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.QuitTestAlertDialog"]},{"name":"fun SaveUserAnswersWorker(appContext: Context, workerParameters: WorkerParameters)","description":"com.example.examer.data.workers.SaveUserAnswersWorker.SaveUserAnswersWorker","location":"app/com.example.examer.data.workers/-save-user-answers-worker/-save-user-answers-worker.html","searchKeys":["SaveUserAnswersWorker","fun SaveUserAnswersWorker(appContext: Context, workerParameters: WorkerParameters)","com.example.examer.data.workers.SaveUserAnswersWorker.SaveUserAnswersWorker"]},{"name":"fun ScheduledTestsScreen(tests: List<TestDetails>, swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, onStartTest: (TestDetails) -> Unit, onTestExpired: (TestDetails) -> Unit)","description":"com.example.examer.ui.screens.ScheduledTestsScreen","location":"app/com.example.examer.ui.screens/-scheduled-tests-screen.html","searchKeys":["ScheduledTestsScreen","fun ScheduledTestsScreen(tests: List<TestDetails>, swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, onStartTest: (TestDetails) -> Unit, onTestExpired: (TestDetails) -> Unit)","com.example.examer.ui.screens.ScheduledTestsScreen"]},{"name":"fun SignUpScreen(firstNameText: String, onFirstNameTextChange: (String) -> Unit, lastNameText: String, onLastNameTextChange: (String) -> Unit, emailAddressText: String, onEmailAddressTextChange: (String) -> Unit, passwordText: String, onPasswordTextChange: (String) -> Unit, modifier: Modifier = Modifier, errorMessageText: String = \"\", isErrorMessageVisible: Boolean = false, isPasswordVisible: Boolean = false, onPasswordVisibilityIconClick: () -> Unit = {}, isLoading: Boolean = false, isSignUpButtonEnabled: Boolean = true, onSignUpButtonClick: () -> Unit = {}, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.example.examer.ui.screens.onboarding.SignUpScreen","location":"app/com.example.examer.ui.screens.onboarding/-sign-up-screen.html","searchKeys":["SignUpScreen","fun SignUpScreen(firstNameText: String, onFirstNameTextChange: (String) -> Unit, lastNameText: String, onLastNameTextChange: (String) -> Unit, emailAddressText: String, onEmailAddressTextChange: (String) -> Unit, passwordText: String, onPasswordTextChange: (String) -> Unit, modifier: Modifier = Modifier, errorMessageText: String = \"\", isErrorMessageVisible: Boolean = false, isPasswordVisible: Boolean = false, onPasswordVisibilityIconClick: () -> Unit = {}, isLoading: Boolean = false, isSignUpButtonEnabled: Boolean = true, onSignUpButtonClick: () -> Unit = {}, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.example.examer.ui.screens.onboarding.SignUpScreen"]},{"name":"fun SignUpScreen(viewModel: SignUpViewModel, onAccountCreatedSuccessfully: () -> Unit)","description":"com.example.examer.ui.screens.onboarding.SignUpScreen","location":"app/com.example.examer.ui.screens.onboarding/-sign-up-screen.html","searchKeys":["SignUpScreen","fun SignUpScreen(viewModel: SignUpViewModel, onAccountCreatedSuccessfully: () -> Unit)","com.example.examer.ui.screens.onboarding.SignUpScreen"]},{"name":"fun SignUpViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","description":"com.example.examer.utils.SignUpViewModelFactory.SignUpViewModelFactory","location":"app/com.example.examer.utils/-sign-up-view-model-factory/-sign-up-view-model-factory.html","searchKeys":["SignUpViewModelFactory","fun SignUpViewModelFactory(authenticationService: AuthenticationService, passwordManager: PasswordManager, credentialsValidationUseCase: CredentialsValidationUseCase, dispatcherProvider: DispatcherProvider = StandardDispatchersProvider(io = Dispatchers.Main))","com.example.examer.utils.SignUpViewModelFactory.SignUpViewModelFactory"]},{"name":"fun StandardDispatchersProvider(main: MainCoroutineDispatcher = Dispatchers.Main, io: CoroutineDispatcher = Dispatchers.IO, default: CoroutineDispatcher = Dispatchers.Default, unconfined: CoroutineDispatcher = Dispatchers.Unconfined)","description":"com.example.examer.di.StandardDispatchersProvider.StandardDispatchersProvider","location":"app/com.example.examer.di/-standard-dispatchers-provider/-standard-dispatchers-provider.html","searchKeys":["StandardDispatchersProvider","fun StandardDispatchersProvider(main: MainCoroutineDispatcher = Dispatchers.Main, io: CoroutineDispatcher = Dispatchers.IO, default: CoroutineDispatcher = Dispatchers.Default, unconfined: CoroutineDispatcher = Dispatchers.Unconfined)","com.example.examer.di.StandardDispatchersProvider.StandardDispatchersProvider"]},{"name":"fun StatusColors(open: Color, scheduled: Color, missed: Color, completed: Color)","description":"com.example.examer.ui.components.examerTestCard.StatusColors.StatusColors","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/-status-colors.html","searchKeys":["StatusColors","fun StatusColors(open: Color, scheduled: Color, missed: Color, completed: Color)","com.example.examer.ui.components.examerTestCard.StatusColors.StatusColors"]},{"name":"fun StatusRow(testStatus: Status, modifier: Modifier = Modifier, isDarkModeEnabled: Boolean = !MaterialTheme.colors.isLight)","description":"com.example.examer.ui.components.examerTestCard.StatusRow","location":"app/com.example.examer.ui.components.examerTestCard/-status-row.html","searchKeys":["StatusRow","fun StatusRow(testStatus: Status, modifier: Modifier = Modifier, isDarkModeEnabled: Boolean = !MaterialTheme.colors.isLight)","com.example.examer.ui.components.examerTestCard.StatusRow"]},{"name":"fun String.containsDigit(): Boolean","description":"com.example.examer.utils.containsDigit","location":"app/com.example.examer.utils/contains-digit.html","searchKeys":["containsDigit","fun String.containsDigit(): Boolean","com.example.examer.utils.containsDigit"]},{"name":"fun String.containsLowercase(): Boolean","description":"com.example.examer.utils.containsLowercase","location":"app/com.example.examer.utils/contains-lowercase.html","searchKeys":["containsLowercase","fun String.containsLowercase(): Boolean","com.example.examer.utils.containsLowercase"]},{"name":"fun String.containsUppercase(): Boolean","description":"com.example.examer.utils.containsUppercase","location":"app/com.example.examer.utils/contains-uppercase.html","searchKeys":["containsUppercase","fun String.containsUppercase(): Boolean","com.example.examer.utils.containsUppercase"]},{"name":"fun Success(user: ExamerUser)","description":"com.example.examer.auth.AuthenticationResult.Success.Success","location":"app/com.example.examer.auth/-authentication-result/-success/-success.html","searchKeys":["Success","fun Success(user: ExamerUser)","com.example.examer.auth.AuthenticationResult.Success.Success"]},{"name":"fun TakeTestScreen(appContainer: AppContainer, testSessionViewModel: TestSessionViewModel, onExitTestButtonClick: () -> Unit, onFinishTestButtonClick: () -> Unit, testDetails: TestDetails)","description":"com.example.examer.ui.screens.TakeTestScreen","location":"app/com.example.examer.ui.screens/-take-test-screen.html","searchKeys":["TakeTestScreen","fun TakeTestScreen(appContainer: AppContainer, testSessionViewModel: TestSessionViewModel, onExitTestButtonClick: () -> Unit, onFinishTestButtonClick: () -> Unit, testDetails: TestDetails)","com.example.examer.ui.screens.TakeTestScreen"]},{"name":"fun TestDetails(id: String, title: String, description: String, language: String, localDateTime: LocalDateTime, totalNumberOfWorkBooks: Int, testDurationInMinutes: Int, testStatus: Status)","description":"com.example.examer.data.domain.TestDetails.TestDetails","location":"app/com.example.examer.data.domain/-test-details/-test-details.html","searchKeys":["TestDetails","fun TestDetails(id: String, title: String, description: String, language: String, localDateTime: LocalDateTime, totalNumberOfWorkBooks: Int, testDurationInMinutes: Int, testStatus: Status)","com.example.examer.data.domain.TestDetails.TestDetails"]},{"name":"fun TestDetails.getDateStringAndTimeString(is24hourFormat: Boolean = false): Pair<String, String>","description":"com.example.examer.data.domain.getDateStringAndTimeString","location":"app/com.example.examer.data.domain/get-date-string-and-time-string.html","searchKeys":["getDateStringAndTimeString","fun TestDetails.getDateStringAndTimeString(is24hourFormat: Boolean = false): Pair<String, String>","com.example.examer.data.domain.getDateStringAndTimeString"]},{"name":"fun TestDetails.isScheduledNotOpen(): Boolean","description":"com.example.examer.data.domain.isScheduledNotOpen","location":"app/com.example.examer.data.domain/is-scheduled-not-open.html","searchKeys":["isScheduledNotOpen","fun TestDetails.isScheduledNotOpen(): Boolean","com.example.examer.data.domain.isScheduledNotOpen"]},{"name":"fun TestDetails.isTestExpired(): Boolean","description":"com.example.examer.data.domain.isTestExpired","location":"app/com.example.examer.data.domain/is-test-expired.html","searchKeys":["isTestExpired","fun TestDetails.isTestExpired(): Boolean","com.example.examer.data.domain.isTestExpired"]},{"name":"fun TestDetails.isTestOpen(): Boolean","description":"com.example.examer.data.domain.isTestOpen","location":"app/com.example.examer.data.domain/is-test-open.html","searchKeys":["isTestOpen","fun TestDetails.isTestOpen(): Boolean","com.example.examer.data.domain.isTestOpen"]},{"name":"fun TestDetailsDTO(id: String, title: String, description: String, language: String, timeStamp: String, totalNumberOfWorkBooks: String, testDurationInMinutes: String, testStatus: String, maximumMarks: String)","description":"com.example.examer.data.dto.TestDetailsDTO.TestDetailsDTO","location":"app/com.example.examer.data.dto/-test-details-d-t-o/-test-details-d-t-o.html","searchKeys":["TestDetailsDTO","fun TestDetailsDTO(id: String, title: String, description: String, language: String, timeStamp: String, totalNumberOfWorkBooks: String, testDurationInMinutes: String, testStatus: String, maximumMarks: String)","com.example.examer.data.dto.TestDetailsDTO.TestDetailsDTO"]},{"name":"fun TestDetailsDTO.toTestDetails(): TestDetails","description":"com.example.examer.data.dto.toTestDetails","location":"app/com.example.examer.data.dto/to-test-details.html","searchKeys":["toTestDetails","fun TestDetailsDTO.toTestDetails(): TestDetails","com.example.examer.data.dto.toTestDetails"]},{"name":"fun TestHistoryScreen(swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, testResultsMap: Map<TestDetails, TestResult>)","description":"com.example.examer.ui.screens.TestHistoryScreen","location":"app/com.example.examer.ui.screens/-test-history-screen.html","searchKeys":["TestHistoryScreen","fun TestHistoryScreen(swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, testResultsMap: Map<TestDetails, TestResult>)","com.example.examer.ui.screens.TestHistoryScreen"]},{"name":"fun TestListScreen(listHeader: String, testList: List<TestDetails>, swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, listItem: (testDetailsItem: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, onClick: () -> Unit, is24hourFormat: Boolean) -> Unit)","description":"com.example.examer.ui.screens.TestListScreen","location":"app/com.example.examer.ui.screens/-test-list-screen.html","searchKeys":["TestListScreen","fun TestListScreen(listHeader: String, testList: List<TestDetails>, swipeRefreshState: SwipeRefreshState, onRefresh: () -> Unit, listItem: (testDetailsItem: TestDetails, isExpanded: Boolean, onExpandButtonClick: () -> Unit, onClick: () -> Unit, is24hourFormat: Boolean) -> Unit)","com.example.examer.ui.screens.TestListScreen"]},{"name":"fun TestResult(testDetailsId: String, marksObtained: Int, maximumMarks: Int)","description":"com.example.examer.data.domain.TestResult.TestResult","location":"app/com.example.examer.data.domain/-test-result/-test-result.html","searchKeys":["TestResult","fun TestResult(testDetailsId: String, marksObtained: Int, maximumMarks: Int)","com.example.examer.data.domain.TestResult.TestResult"]},{"name":"fun TestSessionTimedOutAlertDialog(onConfirmButtonClick: () -> Unit)","description":"com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.TestSessionTimedOutAlertDialog","location":"app/com.example.examer.ui.screens/-take-test-screen-composable-alert-dialog-boxes/-test-session-timed-out-alert-dialog.html","searchKeys":["TestSessionTimedOutAlertDialog","fun TestSessionTimedOutAlertDialog(onConfirmButtonClick: () -> Unit)","com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes.TestSessionTimedOutAlertDialog"]},{"name":"fun TestSessionViewModelFactory(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","description":"com.example.examer.utils.TestSessionViewModelFactory.TestSessionViewModelFactory","location":"app/com.example.examer.utils/-test-session-view-model-factory/-test-session-view-model-factory.html","searchKeys":["TestSessionViewModelFactory","fun TestSessionViewModelFactory(mediaPlayer: MediaPlayer, testDetails: TestDetails, workBookList: List<WorkBook>, markTestAsCompletedUseCase: MarkTestAsCompletedUseCase)","com.example.examer.utils.TestSessionViewModelFactory.TestSessionViewModelFactory"]},{"name":"fun TestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType)","description":"com.example.examer.utils.TestsViewModelFactory.TestsViewModelFactory","location":"app/com.example.examer.utils/-tests-view-model-factory/-tests-view-model-factory.html","searchKeys":["TestsViewModelFactory","fun TestsViewModelFactory(authenticationService: AuthenticationService, repository: Repository, testDetailsListType: TestDetailsListType)","com.example.examer.utils.TestsViewModelFactory.TestsViewModelFactory"]},{"name":"fun UriSerializer()","description":"com.example.examer.data.domain.serializers.UriSerializer.UriSerializer","location":"app/com.example.examer.data.domain.serializers/-uri-serializer/-uri-serializer.html","searchKeys":["UriSerializer","fun UriSerializer()","com.example.examer.data.domain.serializers.UriSerializer.UriSerializer"]},{"name":"fun UserAnswers(associatedWorkBookId: String, answers: Map<MultiChoiceQuestion, IndexOfChosenOption>, marksObtainedForWorkBook: Int)","description":"com.example.examer.data.domain.UserAnswers.UserAnswers","location":"app/com.example.examer.data.domain/-user-answers/-user-answers.html","searchKeys":["UserAnswers","fun UserAnswers(associatedWorkBookId: String, answers: Map<MultiChoiceQuestion, IndexOfChosenOption>, marksObtainedForWorkBook: Int)","com.example.examer.data.domain.UserAnswers.UserAnswers"]},{"name":"fun UserAnswers.toUserAnswersDTO(): UserAnswersDTO","description":"com.example.examer.data.domain.toUserAnswersDTO","location":"app/com.example.examer.data.domain/to-user-answers-d-t-o.html","searchKeys":["toUserAnswersDTO","fun UserAnswers.toUserAnswersDTO(): UserAnswersDTO","com.example.examer.data.domain.toUserAnswersDTO"]},{"name":"fun UserAnswersDTO(associatedWorkBookId: String, answersDetailsMap: List<Map<String, String>>, marksObtainedForWorkBook: String)","description":"com.example.examer.data.dto.UserAnswersDTO.UserAnswersDTO","location":"app/com.example.examer.data.dto/-user-answers-d-t-o/-user-answers-d-t-o.html","searchKeys":["UserAnswersDTO","fun UserAnswersDTO(associatedWorkBookId: String, answersDetailsMap: List<Map<String, String>>, marksObtainedForWorkBook: String)","com.example.examer.data.dto.UserAnswersDTO.UserAnswersDTO"]},{"name":"fun UserAttribute(label: String, value: String, onClick: () -> Unit)","description":"com.example.examer.ui.screens.UserAttribute.UserAttribute","location":"app/com.example.examer.ui.screens/-user-attribute/-user-attribute.html","searchKeys":["UserAttribute","fun UserAttribute(label: String, value: String, onClick: () -> Unit)","com.example.examer.ui.screens.UserAttribute.UserAttribute"]},{"name":"fun VectorArtCard(id: Int, title: String, description: String, imageDescription: String)","description":"com.example.examer.ui.screens.onboarding.VectorArtCard.VectorArtCard","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/-vector-art-card.html","searchKeys":["VectorArtCard","fun VectorArtCard(id: Int, title: String, description: String, imageDescription: String)","com.example.examer.ui.screens.onboarding.VectorArtCard.VectorArtCard"]},{"name":"fun WelcomeScreen(onCreateAccountButtonClick: () -> Unit, onLoginButtonClick: () -> Unit, vectorArtCards: List<VectorArtCard> = defaultExamerVectorArtCards)","description":"com.example.examer.ui.screens.onboarding.WelcomeScreen","location":"app/com.example.examer.ui.screens.onboarding/-welcome-screen.html","searchKeys":["WelcomeScreen","fun WelcomeScreen(onCreateAccountButtonClick: () -> Unit, onLoginButtonClick: () -> Unit, vectorArtCards: List<VectorArtCard> = defaultExamerVectorArtCards)","com.example.examer.ui.screens.onboarding.WelcomeScreen"]},{"name":"fun WorkBook(id: String, audioFile: ExamerAudioFile, questions: List<MultiChoiceQuestion>)","description":"com.example.examer.data.domain.WorkBook.WorkBook","location":"app/com.example.examer.data.domain/-work-book/-work-book.html","searchKeys":["WorkBook","fun WorkBook(id: String, audioFile: ExamerAudioFile, questions: List<MultiChoiceQuestion>)","com.example.examer.data.domain.WorkBook.WorkBook"]},{"name":"fun WorkBookDTO(id: String, audioFile: AudioFileDTO, questions: List<MultiChoiceQuestionDTO>)","description":"com.example.examer.data.dto.WorkBookDTO.WorkBookDTO","location":"app/com.example.examer.data.dto/-work-book-d-t-o/-work-book-d-t-o.html","searchKeys":["WorkBookDTO","fun WorkBookDTO(id: String, audioFile: AudioFileDTO, questions: List<MultiChoiceQuestionDTO>)","com.example.examer.data.dto.WorkBookDTO.WorkBookDTO"]},{"name":"fun WorkBookScreen(questionList: List<MultiChoiceQuestion>, onFooterButtonClick: (answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>) -> Unit, buttonTextValue: ButtonTextValue = ButtonTextValue.NEXT_WORKBOOK)","description":"com.example.examer.ui.screens.WorkBookScreen","location":"app/com.example.examer.ui.screens/-work-book-screen.html","searchKeys":["WorkBookScreen","fun WorkBookScreen(questionList: List<MultiChoiceQuestion>, onFooterButtonClick: (answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>) -> Unit, buttonTextValue: ButtonTextValue = ButtonTextValue.NEXT_WORKBOOK)","com.example.examer.ui.screens.WorkBookScreen"]},{"name":"fun WorkBookViewModelFactory(application: Application)","description":"com.example.examer.utils.WorkBookViewModelFactory.WorkBookViewModelFactory","location":"app/com.example.examer.utils/-work-book-view-model-factory/-work-book-view-model-factory.html","searchKeys":["WorkBookViewModelFactory","fun WorkBookViewModelFactory(application: Application)","com.example.examer.utils.WorkBookViewModelFactory.WorkBookViewModelFactory"]},{"name":"fun buildCountDownTimer(millisInFuture: Long, countDownInterval: Long, onTimerTick: (millisUntilFinished: Long) -> Unit, onTimerFinished: () -> Unit = {}): CountDownTimer","description":"com.example.examer.utils.buildCountDownTimer","location":"app/com.example.examer.utils/build-count-down-timer.html","searchKeys":["buildCountDownTimer","fun buildCountDownTimer(millisInFuture: Long, countDownInterval: Long, onTimerTick: (millisUntilFinished: Long) -> Unit, onTimerFinished: () -> Unit = {}): CountDownTimer","com.example.examer.utils.buildCountDownTimer"]},{"name":"fun buildRoute(testDetails: TestDetails, workBookList: List<WorkBook>): String","description":"com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.buildRoute","location":"app/com.example.examer.ui.navigation/-examer-destinations/-take-test-screen/build-route.html","searchKeys":["buildRoute","fun buildRoute(testDetails: TestDetails, workBookList: List<WorkBook>): String","com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen.buildRoute"]},{"name":"fun buildRoute(testDetailsId: String, workBookId: String, multiChoiceQuestionList: List<MultiChoiceQuestion>, isLastWorkBook: Boolean = false): String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.buildRoute","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/build-route.html","searchKeys":["buildRoute","fun buildRoute(testDetailsId: String, workBookId: String, multiChoiceQuestionList: List<MultiChoiceQuestion>, isLastWorkBook: Boolean = false): String","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen.buildRoute"]},{"name":"fun getLocalDateTimeForMillis(epochMillis: Long): LocalDateTime","description":"com.example.examer.data.domain.TestDetails.Companion.getLocalDateTimeForMillis","location":"app/com.example.examer.data.domain/-test-details/-companion/get-local-date-time-for-millis.html","searchKeys":["getLocalDateTimeForMillis","fun getLocalDateTimeForMillis(epochMillis: Long): LocalDateTime","com.example.examer.data.domain.TestDetails.Companion.getLocalDateTimeForMillis"]},{"name":"fun getTestSessionViewModelFactory(testDetails: TestDetails, workBookList: List<WorkBook>): TestSessionViewModelFactory","description":"com.example.examer.di.AppContainer.getTestSessionViewModelFactory","location":"app/com.example.examer.di/-app-container/get-test-session-view-model-factory.html","searchKeys":["getTestSessionViewModelFactory","fun getTestSessionViewModelFactory(testDetails: TestDetails, workBookList: List<WorkBook>): TestSessionViewModelFactory","com.example.examer.di.AppContainer.getTestSessionViewModelFactory"]},{"name":"inline fun buildProfileChangeRequest(builderAction: UserProfileChangeRequest.Builder.() -> Unit): UserProfileChangeRequest","description":"com.example.examer.auth.buildProfileChangeRequest","location":"app/com.example.examer.auth/build-profile-change-request.html","searchKeys":["buildProfileChangeRequest","inline fun buildProfileChangeRequest(builderAction: UserProfileChangeRequest.Builder.() -> Unit): UserProfileChangeRequest","com.example.examer.auth.buildProfileChangeRequest"]},{"name":"interface AuthenticationService","description":"com.example.examer.auth.AuthenticationService","location":"app/com.example.examer.auth/-authentication-service/index.html","searchKeys":["AuthenticationService","interface AuthenticationService","com.example.examer.auth.AuthenticationService"]},{"name":"interface CredentialsValidationUseCase","description":"com.example.examer.usecases.CredentialsValidationUseCase","location":"app/com.example.examer.usecases/-credentials-validation-use-case/index.html","searchKeys":["CredentialsValidationUseCase","interface CredentialsValidationUseCase","com.example.examer.usecases.CredentialsValidationUseCase"]},{"name":"interface DispatcherProvider","description":"com.example.examer.di.DispatcherProvider","location":"app/com.example.examer.di/-dispatcher-provider/index.html","searchKeys":["DispatcherProvider","interface DispatcherProvider","com.example.examer.di.DispatcherProvider"]},{"name":"interface LogInViewModel","description":"com.example.examer.viewmodels.LogInViewModel","location":"app/com.example.examer.viewmodels/-log-in-view-model/index.html","searchKeys":["LogInViewModel","interface LogInViewModel","com.example.examer.viewmodels.LogInViewModel"]},{"name":"interface MarkTestAsCompletedUseCase","description":"com.example.examer.usecases.MarkTestAsCompletedUseCase","location":"app/com.example.examer.usecases/-mark-test-as-completed-use-case/index.html","searchKeys":["MarkTestAsCompletedUseCase","interface MarkTestAsCompletedUseCase","com.example.examer.usecases.MarkTestAsCompletedUseCase"]},{"name":"interface PasswordManager","description":"com.example.examer.utils.PasswordManager","location":"app/com.example.examer.utils/-password-manager/index.html","searchKeys":["PasswordManager","interface PasswordManager","com.example.examer.utils.PasswordManager"]},{"name":"interface PreviousTestsViewModel","description":"com.example.examer.viewmodels.PreviousTestsViewModel","location":"app/com.example.examer.viewmodels/-previous-tests-view-model/index.html","searchKeys":["PreviousTestsViewModel","interface PreviousTestsViewModel","com.example.examer.viewmodels.PreviousTestsViewModel"]},{"name":"interface ProfileScreenViewModel","description":"com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-profile-screen-view-model/index.html","searchKeys":["ProfileScreenViewModel","interface ProfileScreenViewModel","com.example.examer.viewmodels.profileScreenViewModel.ProfileScreenViewModel"]},{"name":"interface RemoteDatabase","description":"com.example.examer.data.remote.RemoteDatabase","location":"app/com.example.examer.data.remote/-remote-database/index.html","searchKeys":["RemoteDatabase","interface RemoteDatabase","com.example.examer.data.remote.RemoteDatabase"]},{"name":"interface Repository","description":"com.example.examer.data.Repository","location":"app/com.example.examer.data/-repository/index.html","searchKeys":["Repository","interface Repository","com.example.examer.data.Repository"]},{"name":"interface SignUpViewModel","description":"com.example.examer.viewmodels.SignUpViewModel","location":"app/com.example.examer.viewmodels/-sign-up-view-model/index.html","searchKeys":["SignUpViewModel","interface SignUpViewModel","com.example.examer.viewmodels.SignUpViewModel"]},{"name":"interface TestSessionViewModel","description":"com.example.examer.viewmodels.TestSessionViewModel","location":"app/com.example.examer.viewmodels/-test-session-view-model/index.html","searchKeys":["TestSessionViewModel","interface TestSessionViewModel","com.example.examer.viewmodels.TestSessionViewModel"]},{"name":"interface TestsViewModel","description":"com.example.examer.viewmodels.TestsViewModel","location":"app/com.example.examer.viewmodels/-tests-view-model/index.html","searchKeys":["TestsViewModel","interface TestsViewModel","com.example.examer.viewmodels.TestsViewModel"]},{"name":"interface UpdateProfileUriDelegate","description":"com.example.examer.delegates.UpdateProfileUriDelegate","location":"app/com.example.examer.delegates/-update-profile-uri-delegate/index.html","searchKeys":["UpdateProfileUriDelegate","interface UpdateProfileUriDelegate","com.example.examer.delegates.UpdateProfileUriDelegate"]},{"name":"interface WorkBookViewModel","description":"com.example.examer.viewmodels.WorkBookViewModel","location":"app/com.example.examer.viewmodels/-work-book-view-model/index.html","searchKeys":["WorkBookViewModel","interface WorkBookViewModel","com.example.examer.viewmodels.WorkBookViewModel"]},{"name":"lateinit var appContainer: AppContainer","description":"com.example.examer.di.ExamerApplication.appContainer","location":"app/com.example.examer.di/-examer-application/app-container.html","searchKeys":["appContainer","lateinit var appContainer: AppContainer","com.example.examer.di.ExamerApplication.appContainer"]},{"name":"object Companion","description":"com.example.examer.data.domain.TestDetails.Companion","location":"app/com.example.examer.data.domain/-test-details/-companion/index.html","searchKeys":["Companion","object Companion","com.example.examer.data.domain.TestDetails.Companion"]},{"name":"object Companion","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.Companion","location":"app/com.example.examer.data.remote/-firebase-remote-database/-companion/index.html","searchKeys":["Companion","object Companion","com.example.examer.data.remote.FirebaseRemoteDatabase.Companion"]},{"name":"object Companion","description":"com.example.examer.data.workers.SaveUserAnswersWorker.Companion","location":"app/com.example.examer.data.workers/-save-user-answers-worker/-companion/index.html","searchKeys":["Companion","object Companion","com.example.examer.data.workers.SaveUserAnswersWorker.Companion"]},{"name":"object Companion","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/-companion/index.html","searchKeys":["Companion","object Companion","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion"]},{"name":"object ListenToAudioScreen : TakeTestScreenDestinations","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.ListenToAudioScreen","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-listen-to-audio-screen/index.html","searchKeys":["ListenToAudioScreen","object ListenToAudioScreen : TakeTestScreenDestinations","com.example.examer.ui.navigation.TakeTestScreenDestinations.ListenToAudioScreen"]},{"name":"object Loading : SignUpUiState","description":"com.example.examer.viewmodels.SignUpUiState.Loading","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/-loading/index.html","searchKeys":["Loading","object Loading : SignUpUiState","com.example.examer.viewmodels.SignUpUiState.Loading"]},{"name":"object LoggedInScreen : ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations.LoggedInScreen","location":"app/com.example.examer.ui.navigation/-examer-destinations/-logged-in-screen/index.html","searchKeys":["LoggedInScreen","object LoggedInScreen : ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations.LoggedInScreen"]},{"name":"object LoginScreen : OnBoardingDestinations","description":"com.example.examer.ui.navigation.OnBoardingDestinations.LoginScreen","location":"app/com.example.examer.ui.navigation/-on-boarding-destinations/-login-screen/index.html","searchKeys":["LoginScreen","object LoginScreen : OnBoardingDestinations","com.example.examer.ui.navigation.OnBoardingDestinations.LoginScreen"]},{"name":"object NavigationDrawerItemDefaults","description":"com.example.examer.ui.components.NavigationDrawerItemDefaults","location":"app/com.example.examer.ui.components/-navigation-drawer-item-defaults/index.html","searchKeys":["NavigationDrawerItemDefaults","object NavigationDrawerItemDefaults","com.example.examer.ui.components.NavigationDrawerItemDefaults"]},{"name":"object ProfileScreen : ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations.ProfileScreen","location":"app/com.example.examer.ui.navigation/-examer-destinations/-profile-screen/index.html","searchKeys":["ProfileScreen","object ProfileScreen : ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations.ProfileScreen"]},{"name":"object ScheduledTestsScreen : ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations.ScheduledTestsScreen","location":"app/com.example.examer.ui.navigation/-examer-destinations/-scheduled-tests-screen/index.html","searchKeys":["ScheduledTestsScreen","object ScheduledTestsScreen : ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations.ScheduledTestsScreen"]},{"name":"object SignUpScreen : OnBoardingDestinations","description":"com.example.examer.ui.navigation.OnBoardingDestinations.SignUpScreen","location":"app/com.example.examer.ui.navigation/-on-boarding-destinations/-sign-up-screen/index.html","searchKeys":["SignUpScreen","object SignUpScreen : OnBoardingDestinations","com.example.examer.ui.navigation.OnBoardingDestinations.SignUpScreen"]},{"name":"object SignedOut : SignUpUiState","description":"com.example.examer.viewmodels.SignUpUiState.SignedOut","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/-signed-out/index.html","searchKeys":["SignedOut","object SignedOut : SignUpUiState","com.example.examer.viewmodels.SignUpUiState.SignedOut"]},{"name":"object TakeTestScreen : ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen","location":"app/com.example.examer.ui.navigation/-examer-destinations/-take-test-screen/index.html","searchKeys":["TakeTestScreen","object TakeTestScreen : ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations.TakeTestScreen"]},{"name":"object TakeTestScreenComposableAlertDialogBoxes","description":"com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes","location":"app/com.example.examer.ui.screens/-take-test-screen-composable-alert-dialog-boxes/index.html","searchKeys":["TakeTestScreenComposableAlertDialogBoxes","object TakeTestScreenComposableAlertDialogBoxes","com.example.examer.ui.screens.TakeTestScreenComposableAlertDialogBoxes"]},{"name":"object TestHistoryScreen : ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations.TestHistoryScreen","location":"app/com.example.examer.ui.navigation/-examer-destinations/-test-history-screen/index.html","searchKeys":["TestHistoryScreen","object TestHistoryScreen : ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations.TestHistoryScreen"]},{"name":"object WelcomeScreen : OnBoardingDestinations","description":"com.example.examer.ui.navigation.OnBoardingDestinations.WelcomeScreen","location":"app/com.example.examer.ui.navigation/-on-boarding-destinations/-welcome-screen/index.html","searchKeys":["WelcomeScreen","object WelcomeScreen : OnBoardingDestinations","com.example.examer.ui.navigation.OnBoardingDestinations.WelcomeScreen"]},{"name":"object WorkBookScreen : TakeTestScreenDestinations","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/-work-book-screen/index.html","searchKeys":["WorkBookScreen","object WorkBookScreen : TakeTestScreenDestinations","com.example.examer.ui.navigation.TakeTestScreenDestinations.WorkBookScreen"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.examer.data.domain.MultiChoiceQuestion.equals","location":"app/com.example.examer.data.domain/-multi-choice-question/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.examer.data.domain.MultiChoiceQuestion.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.equals","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.examer.data.dto.MultiChoiceQuestionDTO.equals"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.LogInViewModelFactory.create","location":"app/com.example.examer.utils/-log-in-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.LogInViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.Previos.create","location":"app/com.example.examer.utils/-previos/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.Previos.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.PreviousTestsViewModelFactory.create","location":"app/com.example.examer.utils/-previous-tests-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.PreviousTestsViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.ProfileScreenViewModelFactory.create","location":"app/com.example.examer.utils/-profile-screen-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.ProfileScreenViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.SignUpViewModelFactory.create","location":"app/com.example.examer.utils/-sign-up-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.SignUpViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.TestSessionViewModelFactory.create","location":"app/com.example.examer.utils/-test-session-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.TestSessionViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.TestsViewModelFactory.create","location":"app/com.example.examer.utils/-tests-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.TestsViewModelFactory.create"]},{"name":"open override fun <T : ViewModel?> create(modelClass: Class<T>): T","description":"com.example.examer.utils.WorkBookViewModelFactory.create","location":"app/com.example.examer.utils/-work-book-view-model-factory/create.html","searchKeys":["create","open override fun <T : ViewModel?> create(modelClass: Class<T>): T","com.example.examer.utils.WorkBookViewModelFactory.create"]},{"name":"open override fun authenticate(emailAddress: String, password: String, onSuccess: () -> Unit)","description":"com.example.examer.viewmodels.ExamerLogInViewModel.authenticate","location":"app/com.example.examer.viewmodels/-examer-log-in-view-model/authenticate.html","searchKeys":["authenticate","open override fun authenticate(emailAddress: String, password: String, onSuccess: () -> Unit)","com.example.examer.viewmodels.ExamerLogInViewModel.authenticate"]},{"name":"open override fun createNewAccount(name: String, email: String, password: String, onSuccess: () -> Unit, profilePhotoUri: Uri?)","description":"com.example.examer.viewmodels.ExamerSignUpViewModel.createNewAccount","location":"app/com.example.examer.viewmodels/-examer-sign-up-view-model/create-new-account.html","searchKeys":["createNewAccount","open override fun createNewAccount(name: String, email: String, password: String, onSuccess: () -> Unit, profilePhotoUri: Uri?)","com.example.examer.viewmodels.ExamerSignUpViewModel.createNewAccount"]},{"name":"open override fun deserialize(decoder: Decoder): LocalDateTime","description":"com.example.examer.data.domain.serializers.LocalDateTimeSerializer.deserialize","location":"app/com.example.examer.data.domain.serializers/-local-date-time-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): LocalDateTime","com.example.examer.data.domain.serializers.LocalDateTimeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Uri","description":"com.example.examer.data.domain.serializers.UriSerializer.deserialize","location":"app/com.example.examer.data.domain.serializers/-uri-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Uri","com.example.examer.data.domain.serializers.UriSerializer.deserialize"]},{"name":"open override fun fetchWorkBookListForTestDetails(testDetails: TestDetails, onSuccess: (List<WorkBook>) -> Unit, onFailure: (Throwable) -> Unit?)","description":"com.example.examer.viewmodels.ExamerTestsViewModel.fetchWorkBookListForTestDetails","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/fetch-work-book-list-for-test-details.html","searchKeys":["fetchWorkBookListForTestDetails","open override fun fetchWorkBookListForTestDetails(testDetails: TestDetails, onSuccess: (List<WorkBook>) -> Unit, onFailure: (Throwable) -> Unit?)","com.example.examer.viewmodels.ExamerTestsViewModel.fetchWorkBookListForTestDetails"]},{"name":"open override fun getPasswordForUser(examerUser: ExamerUser): String","description":"com.example.examer.utils.ExamerPasswordManager.getPasswordForUser","location":"app/com.example.examer.utils/-examer-password-manager/get-password-for-user.html","searchKeys":["getPasswordForUser","open override fun getPasswordForUser(examerUser: ExamerUser): String","com.example.examer.utils.ExamerPasswordManager.getPasswordForUser"]},{"name":"open override fun hashCode(): Int","description":"com.example.examer.data.domain.MultiChoiceQuestion.hashCode","location":"app/com.example.examer.data.domain/-multi-choice-question/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.examer.data.domain.MultiChoiceQuestion.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.hashCode","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.examer.data.dto.MultiChoiceQuestionDTO.hashCode"]},{"name":"open override fun isValidEmail(email: String): Boolean","description":"com.example.examer.usecases.ExamerCredentialsValidationUseCase.isValidEmail","location":"app/com.example.examer.usecases/-examer-credentials-validation-use-case/is-valid-email.html","searchKeys":["isValidEmail","open override fun isValidEmail(email: String): Boolean","com.example.examer.usecases.ExamerCredentialsValidationUseCase.isValidEmail"]},{"name":"open override fun isValidPassword(password: String): Boolean","description":"com.example.examer.usecases.ExamerCredentialsValidationUseCase.isValidPassword","location":"app/com.example.examer.usecases/-examer-credentials-validation-use-case/is-valid-password.html","searchKeys":["isValidPassword","open override fun isValidPassword(password: String): Boolean","com.example.examer.usecases.ExamerCredentialsValidationUseCase.isValidPassword"]},{"name":"open override fun markCurrentTestAsComplete()","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.markCurrentTestAsComplete","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/mark-current-test-as-complete.html","searchKeys":["markCurrentTestAsComplete","open override fun markCurrentTestAsComplete()","com.example.examer.viewmodels.ExamerTestSessionViewModel.markCurrentTestAsComplete"]},{"name":"open override fun markTestAsMissed(testDetails: TestDetails)","description":"com.example.examer.viewmodels.ExamerTestsViewModel.markTestAsMissed","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/mark-test-as-missed.html","searchKeys":["markTestAsMissed","open override fun markTestAsMissed(testDetails: TestDetails)","com.example.examer.viewmodels.ExamerTestsViewModel.markTestAsMissed"]},{"name":"open override fun moveToNextWorkBook()","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.moveToNextWorkBook","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/move-to-next-work-book.html","searchKeys":["moveToNextWorkBook","open override fun moveToNextWorkBook()","com.example.examer.viewmodels.ExamerTestSessionViewModel.moveToNextWorkBook"]},{"name":"open override fun onCreate()","description":"com.example.examer.di.ExamerApplication.onCreate","location":"app/com.example.examer.di/-examer-application/on-create.html","searchKeys":["onCreate","open override fun onCreate()","com.example.examer.di.ExamerApplication.onCreate"]},{"name":"open override fun onNewToken(p0: String)","description":"com.example.examer.notifications.ExamerFirebaseMessagingService.onNewToken","location":"app/com.example.examer.notifications/-examer-firebase-messaging-service/on-new-token.html","searchKeys":["onNewToken","open override fun onNewToken(p0: String)","com.example.examer.notifications.ExamerFirebaseMessagingService.onNewToken"]},{"name":"open override fun playAudioForCurrentWorkBook()","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.playAudioForCurrentWorkBook","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/play-audio-for-current-work-book.html","searchKeys":["playAudioForCurrentWorkBook","open override fun playAudioForCurrentWorkBook()","com.example.examer.viewmodels.ExamerTestSessionViewModel.playAudioForCurrentWorkBook"]},{"name":"open override fun refreshPreviousTestsList()","description":"com.example.examer.viewmodels.ExamerPreviousTestsViewModel.refreshPreviousTestsList","location":"app/com.example.examer.viewmodels/-examer-previous-tests-view-model/refresh-previous-tests-list.html","searchKeys":["refreshPreviousTestsList","open override fun refreshPreviousTestsList()","com.example.examer.viewmodels.ExamerPreviousTestsViewModel.refreshPreviousTestsList"]},{"name":"open override fun refreshTestDetailsList()","description":"com.example.examer.viewmodels.ExamerTestsViewModel.refreshTestDetailsList","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/refresh-test-details-list.html","searchKeys":["refreshTestDetailsList","open override fun refreshTestDetailsList()","com.example.examer.viewmodels.ExamerTestsViewModel.refreshTestDetailsList"]},{"name":"open override fun removeErrorMessage()","description":"com.example.examer.viewmodels.ExamerLogInViewModel.removeErrorMessage","location":"app/com.example.examer.viewmodels/-examer-log-in-view-model/remove-error-message.html","searchKeys":["removeErrorMessage","open override fun removeErrorMessage()","com.example.examer.viewmodels.ExamerLogInViewModel.removeErrorMessage"]},{"name":"open override fun removeErrorMessage()","description":"com.example.examer.viewmodels.ExamerSignUpViewModel.removeErrorMessage","location":"app/com.example.examer.viewmodels/-examer-sign-up-view-model/remove-error-message.html","searchKeys":["removeErrorMessage","open override fun removeErrorMessage()","com.example.examer.viewmodels.ExamerSignUpViewModel.removeErrorMessage"]},{"name":"open override fun savePasswordForUser(examerUser: ExamerUser, password: String)","description":"com.example.examer.utils.ExamerPasswordManager.savePasswordForUser","location":"app/com.example.examer.utils/-examer-password-manager/save-password-for-user.html","searchKeys":["savePasswordForUser","open override fun savePasswordForUser(examerUser: ExamerUser, password: String)","com.example.examer.utils.ExamerPasswordManager.savePasswordForUser"]},{"name":"open override fun saveUserAnswersForTestId(questionsList: List<MultiChoiceQuestion>, answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>, testDetailsId: String, workBookId: String)","description":"com.example.examer.viewmodels.ExamerWorkBookViewModel.saveUserAnswersForTestId","location":"app/com.example.examer.viewmodels/-examer-work-book-view-model/save-user-answers-for-test-id.html","searchKeys":["saveUserAnswersForTestId","open override fun saveUserAnswersForTestId(questionsList: List<MultiChoiceQuestion>, answersMap: Map<MultiChoiceQuestion, IndexOfChosenOption>, testDetailsId: String, workBookId: String)","com.example.examer.viewmodels.ExamerWorkBookViewModel.saveUserAnswersForTestId"]},{"name":"open override fun serialize(encoder: Encoder, value: LocalDateTime)","description":"com.example.examer.data.domain.serializers.LocalDateTimeSerializer.serialize","location":"app/com.example.examer.data.domain.serializers/-local-date-time-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: LocalDateTime)","com.example.examer.data.domain.serializers.LocalDateTimeSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Uri)","description":"com.example.examer.data.domain.serializers.UriSerializer.serialize","location":"app/com.example.examer.data.domain.serializers/-uri-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Uri)","com.example.examer.data.domain.serializers.UriSerializer.serialize"]},{"name":"open override fun signOut()","description":"com.example.examer.auth.FirebaseAuthenticationService.signOut","location":"app/com.example.examer.auth/-firebase-authentication-service/sign-out.html","searchKeys":["signOut","open override fun signOut()","com.example.examer.auth.FirebaseAuthenticationService.signOut"]},{"name":"open override fun stopAudioPlayback()","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.stopAudioPlayback","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/stop-audio-playback.html","searchKeys":["stopAudioPlayback","open override fun stopAudioPlayback()","com.example.examer.viewmodels.ExamerTestSessionViewModel.stopAudioPlayback"]},{"name":"open override fun toString(): String","description":"com.example.examer.data.domain.IndexOfChosenOption.toString","location":"app/com.example.examer.data.domain/-index-of-chosen-option/to-string.html","searchKeys":["toString","open override fun toString(): String","com.example.examer.data.domain.IndexOfChosenOption.toString"]},{"name":"open override fun updateAttributeForCurrentUser(updateAttribute: ProfileScreenViewModel.UpdateAttribute, newValue: String, resetStateTimeOut: Long)","description":"com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.updateAttributeForCurrentUser","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-examer-profile-screen-view-model/update-attribute-for-current-user.html","searchKeys":["updateAttributeForCurrentUser","open override fun updateAttributeForCurrentUser(updateAttribute: ProfileScreenViewModel.UpdateAttribute, newValue: String, resetStateTimeOut: Long)","com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.updateAttributeForCurrentUser"]},{"name":"open override fun updateProfilePicture(imageBitmap: ImageBitmap, resetStateTimeOut: Long)","description":"com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.updateProfilePicture","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-examer-profile-screen-view-model/update-profile-picture.html","searchKeys":["updateProfilePicture","open override fun updateProfilePicture(imageBitmap: ImageBitmap, resetStateTimeOut: Long)","com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.updateProfilePicture"]},{"name":"open override val currentUser: LiveData<ExamerUser?>","description":"com.example.examer.auth.FirebaseAuthenticationService.currentUser","location":"app/com.example.examer.auth/-firebase-authentication-service/current-user.html","searchKeys":["currentUser","open override val currentUser: LiveData<ExamerUser?>","com.example.examer.auth.FirebaseAuthenticationService.currentUser"]},{"name":"open override val currentWorkBook: State<WorkBook>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.currentWorkBook","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/current-work-book.html","searchKeys":["currentWorkBook","open override val currentWorkBook: State<WorkBook>","com.example.examer.viewmodels.ExamerTestSessionViewModel.currentWorkBook"]},{"name":"open override val currentWorkBookNumber: State<Int>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.currentWorkBookNumber","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/current-work-book-number.html","searchKeys":["currentWorkBookNumber","open override val currentWorkBookNumber: State<Int>","com.example.examer.viewmodels.ExamerTestSessionViewModel.currentWorkBookNumber"]},{"name":"open override val default: CoroutineDispatcher","description":"com.example.examer.di.StandardDispatchersProvider.default","location":"app/com.example.examer.di/-standard-dispatchers-provider/default.html","searchKeys":["default","open override val default: CoroutineDispatcher","com.example.examer.di.StandardDispatchersProvider.default"]},{"name":"open override val hoursRemaining: State<String>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.hoursRemaining","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/hours-remaining.html","searchKeys":["hoursRemaining","open override val hoursRemaining: State<String>","com.example.examer.viewmodels.ExamerTestSessionViewModel.hoursRemaining"]},{"name":"open override val io: CoroutineDispatcher","description":"com.example.examer.di.StandardDispatchersProvider.io","location":"app/com.example.examer.di/-standard-dispatchers-provider/io.html","searchKeys":["io","open override val io: CoroutineDispatcher","com.example.examer.di.StandardDispatchersProvider.io"]},{"name":"open override val isAudioFilePlaying: State<Boolean>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.isAudioFilePlaying","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/is-audio-file-playing.html","searchKeys":["isAudioFilePlaying","open override val isAudioFilePlaying: State<Boolean>","com.example.examer.viewmodels.ExamerTestSessionViewModel.isAudioFilePlaying"]},{"name":"open override val main: MainCoroutineDispatcher","description":"com.example.examer.di.StandardDispatchersProvider.main","location":"app/com.example.examer.di/-standard-dispatchers-provider/main.html","searchKeys":["main","open override val main: MainCoroutineDispatcher","com.example.examer.di.StandardDispatchersProvider.main"]},{"name":"open override val minutesRemaining: State<String>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.minutesRemaining","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/minutes-remaining.html","searchKeys":["minutesRemaining","open override val minutesRemaining: State<String>","com.example.examer.viewmodels.ExamerTestSessionViewModel.minutesRemaining"]},{"name":"open override val numberOfRepeatsLeftForAudioFile: State<Int>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.numberOfRepeatsLeftForAudioFile","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/number-of-repeats-left-for-audio-file.html","searchKeys":["numberOfRepeatsLeftForAudioFile","open override val numberOfRepeatsLeftForAudioFile: State<Int>","com.example.examer.viewmodels.ExamerTestSessionViewModel.numberOfRepeatsLeftForAudioFile"]},{"name":"open override val playbackState: State<PlaybackState>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.playbackState","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/playback-state.html","searchKeys":["playbackState","open override val playbackState: State<PlaybackState>","com.example.examer.viewmodels.ExamerTestSessionViewModel.playbackState"]},{"name":"open override val secondsRemaining: State<String>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.secondsRemaining","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/seconds-remaining.html","searchKeys":["secondsRemaining","open override val secondsRemaining: State<String>","com.example.examer.viewmodels.ExamerTestSessionViewModel.secondsRemaining"]},{"name":"open override val testDetailsList: State<List<TestDetails>>","description":"com.example.examer.viewmodels.ExamerTestsViewModel.testDetailsList","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/test-details-list.html","searchKeys":["testDetailsList","open override val testDetailsList: State<List<TestDetails>>","com.example.examer.viewmodels.ExamerTestsViewModel.testDetailsList"]},{"name":"open override val testResultsMap: State<Map<TestDetails, TestResult>>","description":"com.example.examer.viewmodels.ExamerPreviousTestsViewModel.testResultsMap","location":"app/com.example.examer.viewmodels/-examer-previous-tests-view-model/test-results-map.html","searchKeys":["testResultsMap","open override val testResultsMap: State<Map<TestDetails, TestResult>>","com.example.examer.viewmodels.ExamerPreviousTestsViewModel.testResultsMap"]},{"name":"open override val testsViewModelUiState: State<TestsViewModelUiState>","description":"com.example.examer.viewmodels.ExamerTestsViewModel.testsViewModelUiState","location":"app/com.example.examer.viewmodels/-examer-tests-view-model/tests-view-model-ui-state.html","searchKeys":["testsViewModelUiState","open override val testsViewModelUiState: State<TestsViewModelUiState>","com.example.examer.viewmodels.ExamerTestsViewModel.testsViewModelUiState"]},{"name":"open override val uiState: State<LoginUiState>","description":"com.example.examer.viewmodels.ExamerLogInViewModel.uiState","location":"app/com.example.examer.viewmodels/-examer-log-in-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: State<LoginUiState>","com.example.examer.viewmodels.ExamerLogInViewModel.uiState"]},{"name":"open override val uiState: State<PreviousTestsViewModelUiState>","description":"com.example.examer.viewmodels.ExamerPreviousTestsViewModel.uiState","location":"app/com.example.examer.viewmodels/-examer-previous-tests-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: State<PreviousTestsViewModelUiState>","com.example.examer.viewmodels.ExamerPreviousTestsViewModel.uiState"]},{"name":"open override val uiState: State<ProfileScreenViewModel.UiState>","description":"com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.uiState","location":"app/com.example.examer.viewmodels.profileScreenViewModel/-examer-profile-screen-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: State<ProfileScreenViewModel.UiState>","com.example.examer.viewmodels.profileScreenViewModel.ExamerProfileScreenViewModel.uiState"]},{"name":"open override val uiState: State<SignUpUiState>","description":"com.example.examer.viewmodels.ExamerSignUpViewModel.uiState","location":"app/com.example.examer.viewmodels/-examer-sign-up-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: State<SignUpUiState>","com.example.examer.viewmodels.ExamerSignUpViewModel.uiState"]},{"name":"open override val uiState: State<TestSessionViewModel.UiState>","description":"com.example.examer.viewmodels.ExamerTestSessionViewModel.uiState","location":"app/com.example.examer.viewmodels/-examer-test-session-view-model/ui-state.html","searchKeys":["uiState","open override val uiState: State<TestSessionViewModel.UiState>","com.example.examer.viewmodels.ExamerTestSessionViewModel.uiState"]},{"name":"open override val unconfined: CoroutineDispatcher","description":"com.example.examer.di.StandardDispatchersProvider.unconfined","location":"app/com.example.examer.di/-standard-dispatchers-provider/unconfined.html","searchKeys":["unconfined","open override val unconfined: CoroutineDispatcher","com.example.examer.di.StandardDispatchersProvider.unconfined"]},{"name":"open suspend override fun createAccount(username: String, email: String, password: String, profilePhotoUri: Uri?): AuthenticationResult","description":"com.example.examer.auth.FirebaseAuthenticationService.createAccount","location":"app/com.example.examer.auth/-firebase-authentication-service/create-account.html","searchKeys":["createAccount","open suspend override fun createAccount(username: String, email: String, password: String, profilePhotoUri: Uri?): AuthenticationResult","com.example.examer.auth.FirebaseAuthenticationService.createAccount"]},{"name":"open suspend override fun doWork(): ListenableWorker.Result","description":"com.example.examer.data.workers.SaveUserAnswersWorker.doWork","location":"app/com.example.examer.data.workers/-save-user-answers-worker/do-work.html","searchKeys":["doWork","open suspend override fun doWork(): ListenableWorker.Result","com.example.examer.data.workers.SaveUserAnswersWorker.doWork"]},{"name":"open suspend override fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.ExamerRepository.fetchActiveTestListForUser","location":"app/com.example.examer.data/-examer-repository/fetch-active-test-list-for-user.html","searchKeys":["fetchActiveTestListForUser","open suspend override fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.ExamerRepository.fetchActiveTestListForUser"]},{"name":"open suspend override fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.fetchActiveTestListForUser","location":"app/com.example.examer.data.remote/-firebase-remote-database/fetch-active-test-list-for-user.html","searchKeys":["fetchActiveTestListForUser","open suspend override fun fetchActiveTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.remote.FirebaseRemoteDatabase.fetchActiveTestListForUser"]},{"name":"open suspend override fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.ExamerRepository.fetchPreviousTestListForUser","location":"app/com.example.examer.data/-examer-repository/fetch-previous-test-list-for-user.html","searchKeys":["fetchPreviousTestListForUser","open suspend override fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.ExamerRepository.fetchPreviousTestListForUser"]},{"name":"open suspend override fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.fetchPreviousTestListForUser","location":"app/com.example.examer.data.remote/-firebase-remote-database/fetch-previous-test-list-for-user.html","searchKeys":["fetchPreviousTestListForUser","open suspend override fun fetchPreviousTestListForUser(user: ExamerUser): List<TestDetails>","com.example.examer.data.remote.FirebaseRemoteDatabase.fetchPreviousTestListForUser"]},{"name":"open suspend override fun fetchResultsForTest(user: ExamerUser, testDetailsId: String): TestResult","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.fetchResultsForTest","location":"app/com.example.examer.data.remote/-firebase-remote-database/fetch-results-for-test.html","searchKeys":["fetchResultsForTest","open suspend override fun fetchResultsForTest(user: ExamerUser, testDetailsId: String): TestResult","com.example.examer.data.remote.FirebaseRemoteDatabase.fetchResultsForTest"]},{"name":"open suspend override fun fetchTestResults(user: ExamerUser, testDetailsId: String): TestResult","description":"com.example.examer.data.ExamerRepository.fetchTestResults","location":"app/com.example.examer.data/-examer-repository/fetch-test-results.html","searchKeys":["fetchTestResults","open suspend override fun fetchTestResults(user: ExamerUser, testDetailsId: String): TestResult","com.example.examer.data.ExamerRepository.fetchTestResults"]},{"name":"open suspend override fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBook>>","description":"com.example.examer.data.ExamerRepository.fetchWorkBookList","location":"app/com.example.examer.data/-examer-repository/fetch-work-book-list.html","searchKeys":["fetchWorkBookList","open suspend override fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBook>>","com.example.examer.data.ExamerRepository.fetchWorkBookList"]},{"name":"open suspend override fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBookDTO>>","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.fetchWorkBookList","location":"app/com.example.examer.data.remote/-firebase-remote-database/fetch-work-book-list.html","searchKeys":["fetchWorkBookList","open suspend override fun fetchWorkBookList(user: ExamerUser, testDetails: TestDetails): Result<List<WorkBookDTO>>","com.example.examer.data.remote.FirebaseRemoteDatabase.fetchWorkBookList"]},{"name":"open suspend override fun invoke(testDetailsId: String)","description":"com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase.invoke","location":"app/com.example.examer.usecases/-examer-mark-test-as-completed-use-case/invoke.html","searchKeys":["invoke","open suspend override fun invoke(testDetailsId: String)","com.example.examer.usecases.ExamerMarkTestAsCompletedUseCase.invoke"]},{"name":"open suspend override fun markTestAsCompleted(user: ExamerUser, testDetailId: String)","description":"com.example.examer.data.ExamerRepository.markTestAsCompleted","location":"app/com.example.examer.data/-examer-repository/mark-test-as-completed.html","searchKeys":["markTestAsCompleted","open suspend override fun markTestAsCompleted(user: ExamerUser, testDetailId: String)","com.example.examer.data.ExamerRepository.markTestAsCompleted"]},{"name":"open suspend override fun markTestAsCompleted(user: ExamerUser, testDetailsId: String)","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.markTestAsCompleted","location":"app/com.example.examer.data.remote/-firebase-remote-database/mark-test-as-completed.html","searchKeys":["markTestAsCompleted","open suspend override fun markTestAsCompleted(user: ExamerUser, testDetailsId: String)","com.example.examer.data.remote.FirebaseRemoteDatabase.markTestAsCompleted"]},{"name":"open suspend override fun markTestAsMissed(user: ExamerUser, testDetailId: String)","description":"com.example.examer.data.ExamerRepository.markTestAsMissed","location":"app/com.example.examer.data/-examer-repository/mark-test-as-missed.html","searchKeys":["markTestAsMissed","open suspend override fun markTestAsMissed(user: ExamerUser, testDetailId: String)","com.example.examer.data.ExamerRepository.markTestAsMissed"]},{"name":"open suspend override fun markTestAsMissed(user: ExamerUser, testDetailsId: String)","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.markTestAsMissed","location":"app/com.example.examer.data.remote/-firebase-remote-database/mark-test-as-missed.html","searchKeys":["markTestAsMissed","open suspend override fun markTestAsMissed(user: ExamerUser, testDetailsId: String)","com.example.examer.data.remote.FirebaseRemoteDatabase.markTestAsMissed"]},{"name":"open suspend override fun saveBitmap(bitmap: Bitmap, fileName: String): Result<Uri>","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.saveBitmap","location":"app/com.example.examer.data.remote/-firebase-remote-database/save-bitmap.html","searchKeys":["saveBitmap","open suspend override fun saveBitmap(bitmap: Bitmap, fileName: String): Result<Uri>","com.example.examer.data.remote.FirebaseRemoteDatabase.saveBitmap"]},{"name":"open suspend override fun saveProfilePictureForUser(user: ExamerUser, bitmap: Bitmap)","description":"com.example.examer.data.ExamerRepository.saveProfilePictureForUser","location":"app/com.example.examer.data/-examer-repository/save-profile-picture-for-user.html","searchKeys":["saveProfilePictureForUser","open suspend override fun saveProfilePictureForUser(user: ExamerUser, bitmap: Bitmap)","com.example.examer.data.ExamerRepository.saveProfilePictureForUser"]},{"name":"open suspend override fun saveUserAnswers(user: ExamerUser, userAnswers: UserAnswers, testDetailsId: String)","description":"com.example.examer.data.remote.FirebaseRemoteDatabase.saveUserAnswers","location":"app/com.example.examer.data.remote/-firebase-remote-database/save-user-answers.html","searchKeys":["saveUserAnswers","open suspend override fun saveUserAnswers(user: ExamerUser, userAnswers: UserAnswers, testDetailsId: String)","com.example.examer.data.remote.FirebaseRemoteDatabase.saveUserAnswers"]},{"name":"open suspend override fun saveUserAnswersForUser(user: ExamerUser, userAnswers: UserAnswers, testDetailId: String)","description":"com.example.examer.data.ExamerRepository.saveUserAnswersForUser","location":"app/com.example.examer.data/-examer-repository/save-user-answers-for-user.html","searchKeys":["saveUserAnswersForUser","open suspend override fun saveUserAnswersForUser(user: ExamerUser, userAnswers: UserAnswers, testDetailId: String)","com.example.examer.data.ExamerRepository.saveUserAnswersForUser"]},{"name":"open suspend override fun signIn(email: String, password: String): AuthenticationResult","description":"com.example.examer.auth.FirebaseAuthenticationService.signIn","location":"app/com.example.examer.auth/-firebase-authentication-service/sign-in.html","searchKeys":["signIn","open suspend override fun signIn(email: String, password: String): AuthenticationResult","com.example.examer.auth.FirebaseAuthenticationService.signIn"]},{"name":"open suspend override fun update(uri: Uri)","description":"com.example.examer.delegates.ExamerUpdateProfileUriDelegate.update","location":"app/com.example.examer.delegates/-examer-update-profile-uri-delegate/update.html","searchKeys":["update","open suspend override fun update(uri: Uri)","com.example.examer.delegates.ExamerUpdateProfileUriDelegate.update"]},{"name":"open suspend override fun updateAttributeForUser(user: ExamerUser, updateAttribute: AuthenticationService.UpdateAttribute): AuthenticationResult","description":"com.example.examer.auth.FirebaseAuthenticationService.updateAttributeForUser","location":"app/com.example.examer.auth/-firebase-authentication-service/update-attribute-for-user.html","searchKeys":["updateAttributeForUser","open suspend override fun updateAttributeForUser(user: ExamerUser, updateAttribute: AuthenticationService.UpdateAttribute): AuthenticationResult","com.example.examer.auth.FirebaseAuthenticationService.updateAttributeForUser"]},{"name":"sealed class AuthenticationResult","description":"com.example.examer.auth.AuthenticationResult","location":"app/com.example.examer.auth/-authentication-result/index.html","searchKeys":["AuthenticationResult","sealed class AuthenticationResult","com.example.examer.auth.AuthenticationResult"]},{"name":"sealed class ExamerDestinations","description":"com.example.examer.ui.navigation.ExamerDestinations","location":"app/com.example.examer.ui.navigation/-examer-destinations/index.html","searchKeys":["ExamerDestinations","sealed class ExamerDestinations","com.example.examer.ui.navigation.ExamerDestinations"]},{"name":"sealed class OnBoardingDestinations","description":"com.example.examer.ui.navigation.OnBoardingDestinations","location":"app/com.example.examer.ui.navigation/-on-boarding-destinations/index.html","searchKeys":["OnBoardingDestinations","sealed class OnBoardingDestinations","com.example.examer.ui.navigation.OnBoardingDestinations"]},{"name":"sealed class SignUpUiState","description":"com.example.examer.viewmodels.SignUpUiState","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/index.html","searchKeys":["SignUpUiState","sealed class SignUpUiState","com.example.examer.viewmodels.SignUpUiState"]},{"name":"sealed class TakeTestScreenDestinations","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/index.html","searchKeys":["TakeTestScreenDestinations","sealed class TakeTestScreenDestinations","com.example.examer.ui.navigation.TakeTestScreenDestinations"]},{"name":"sealed class UpdateAttribute","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/index.html","searchKeys":["UpdateAttribute","sealed class UpdateAttribute","com.example.examer.auth.AuthenticationService.UpdateAttribute"]},{"name":"suspend fun FirebaseAuth.createUser(name: String, email: String, password: String, profilePhotoUri: Uri?): FirebaseUser","description":"com.example.examer.auth.createUser","location":"app/com.example.examer.auth/create-user.html","searchKeys":["createUser","suspend fun FirebaseAuth.createUser(name: String, email: String, password: String, profilePhotoUri: Uri?): FirebaseUser","com.example.examer.auth.createUser"]},{"name":"suspend fun FirebaseUser.changeEmail(newEmail: String, password: String)","description":"com.example.examer.auth.changeEmail","location":"app/com.example.examer.auth/change-email.html","searchKeys":["changeEmail","suspend fun FirebaseUser.changeEmail(newEmail: String, password: String)","com.example.examer.auth.changeEmail"]},{"name":"suspend fun FirebaseUser.changePassword(newPassword: String, oldPassword: String)","description":"com.example.examer.auth.changePassword","location":"app/com.example.examer.auth/change-password.html","searchKeys":["changePassword","suspend fun FirebaseUser.changePassword(newPassword: String, oldPassword: String)","com.example.examer.auth.changePassword"]},{"name":"suspend fun FirebaseUser.changePhotoUri(uri: Uri)","description":"com.example.examer.auth.changePhotoUri","location":"app/com.example.examer.auth/change-photo-uri.html","searchKeys":["changePhotoUri","suspend fun FirebaseUser.changePhotoUri(uri: Uri)","com.example.examer.auth.changePhotoUri"]},{"name":"suspend fun FirebaseUser.changeUserName(newName: String)","description":"com.example.examer.auth.changeUserName","location":"app/com.example.examer.auth/change-user-name.html","searchKeys":["changeUserName","suspend fun FirebaseUser.changeUserName(newName: String)","com.example.examer.auth.changeUserName"]},{"name":"suspend fun FirebaseUser.runCatchingRecentLoginException(password: String, updateBlock: suspend () -> Unit)","description":"com.example.examer.auth.runCatchingRecentLoginException","location":"app/com.example.examer.auth/run-catching-recent-login-exception.html","searchKeys":["runCatchingRecentLoginException","suspend fun FirebaseUser.runCatchingRecentLoginException(password: String, updateBlock: suspend () -> Unit)","com.example.examer.auth.runCatchingRecentLoginException"]},{"name":"val Black800: Color","description":"com.example.examer.ui.theme.Black800","location":"app/com.example.examer.ui.theme/-black800.html","searchKeys":["Black800","val Black800: Color","com.example.examer.ui.theme.Black800"]},{"name":"val Black900: Color","description":"com.example.examer.ui.theme.Black900","location":"app/com.example.examer.ui.theme/-black900.html","searchKeys":["Black900","val Black900: Color","com.example.examer.ui.theme.Black900"]},{"name":"val Blue200: Color","description":"com.example.examer.ui.theme.Blue200","location":"app/com.example.examer.ui.theme/-blue200.html","searchKeys":["Blue200","val Blue200: Color","com.example.examer.ui.theme.Blue200"]},{"name":"val Blue300: Color","description":"com.example.examer.ui.theme.Blue300","location":"app/com.example.examer.ui.theme/-blue300.html","searchKeys":["Blue300","val Blue300: Color","com.example.examer.ui.theme.Blue300"]},{"name":"val Blue50: Color","description":"com.example.examer.ui.theme.Blue50","location":"app/com.example.examer.ui.theme/-blue50.html","searchKeys":["Blue50","val Blue50: Color","com.example.examer.ui.theme.Blue50"]},{"name":"val Blue700: Color","description":"com.example.examer.ui.theme.Blue700","location":"app/com.example.examer.ui.theme/-blue700.html","searchKeys":["Blue700","val Blue700: Color","com.example.examer.ui.theme.Blue700"]},{"name":"val Blue800: Color","description":"com.example.examer.ui.theme.Blue800","location":"app/com.example.examer.ui.theme/-blue800.html","searchKeys":["Blue800","val Blue800: Color","com.example.examer.ui.theme.Blue800"]},{"name":"val Green200: Color","description":"com.example.examer.ui.theme.Green200","location":"app/com.example.examer.ui.theme/-green200.html","searchKeys":["Green200","val Green200: Color","com.example.examer.ui.theme.Green200"]},{"name":"val Green600: Color","description":"com.example.examer.ui.theme.Green600","location":"app/com.example.examer.ui.theme/-green600.html","searchKeys":["Green600","val Green600: Color","com.example.examer.ui.theme.Green600"]},{"name":"val Orange300: Color","description":"com.example.examer.ui.theme.Orange300","location":"app/com.example.examer.ui.theme/-orange300.html","searchKeys":["Orange300","val Orange300: Color","com.example.examer.ui.theme.Orange300"]},{"name":"val Orange400: Color","description":"com.example.examer.ui.theme.Orange400","location":"app/com.example.examer.ui.theme/-orange400.html","searchKeys":["Orange400","val Orange400: Color","com.example.examer.ui.theme.Orange400"]},{"name":"val Orange500: Color","description":"com.example.examer.ui.theme.Orange500","location":"app/com.example.examer.ui.theme/-orange500.html","searchKeys":["Orange500","val Orange500: Color","com.example.examer.ui.theme.Orange500"]},{"name":"val Red200: Color","description":"com.example.examer.ui.theme.Red200","location":"app/com.example.examer.ui.theme/-red200.html","searchKeys":["Red200","val Red200: Color","com.example.examer.ui.theme.Red200"]},{"name":"val Red400: Color","description":"com.example.examer.ui.theme.Red400","location":"app/com.example.examer.ui.theme/-red400.html","searchKeys":["Red400","val Red400: Color","com.example.examer.ui.theme.Red400"]},{"name":"val Shapes: Shapes","description":"com.example.examer.ui.theme.Shapes","location":"app/com.example.examer.ui.theme/-shapes.html","searchKeys":["Shapes","val Shapes: Shapes","com.example.examer.ui.theme.Shapes"]},{"name":"val Typography: Typography","description":"com.example.examer.ui.theme.Typography","location":"app/com.example.examer.ui.theme/-typography.html","searchKeys":["Typography","val Typography: Typography","com.example.examer.ui.theme.Typography"]},{"name":"val activeColors: NavigationDrawerItemColors","description":"com.example.examer.ui.components.NavigationDrawerItemDefaults.activeColors","location":"app/com.example.examer.ui.components/-navigation-drawer-item-defaults/active-colors.html","searchKeys":["activeColors","val activeColors: NavigationDrawerItemColors","com.example.examer.ui.components.NavigationDrawerItemDefaults.activeColors"]},{"name":"val answers: Map<MultiChoiceQuestion, IndexOfChosenOption>","description":"com.example.examer.data.domain.UserAnswers.answers","location":"app/com.example.examer.data.domain/-user-answers/answers.html","searchKeys":["answers","val answers: Map<MultiChoiceQuestion, IndexOfChosenOption>","com.example.examer.data.domain.UserAnswers.answers"]},{"name":"val answersDetailsMap: List<Map<String, String>>","description":"com.example.examer.data.dto.UserAnswersDTO.answersDetailsMap","location":"app/com.example.examer.data.dto/-user-answers-d-t-o/answers-details-map.html","searchKeys":["answersDetailsMap","val answersDetailsMap: List<Map<String, String>>","com.example.examer.data.dto.UserAnswersDTO.answersDetailsMap"]},{"name":"val associatedWorkBookId: String","description":"com.example.examer.data.domain.UserAnswers.associatedWorkBookId","location":"app/com.example.examer.data.domain/-user-answers/associated-work-book-id.html","searchKeys":["associatedWorkBookId","val associatedWorkBookId: String","com.example.examer.data.domain.UserAnswers.associatedWorkBookId"]},{"name":"val associatedWorkBookId: String","description":"com.example.examer.data.dto.UserAnswersDTO.associatedWorkBookId","location":"app/com.example.examer.data.dto/-user-answers-d-t-o/associated-work-book-id.html","searchKeys":["associatedWorkBookId","val associatedWorkBookId: String","com.example.examer.data.dto.UserAnswersDTO.associatedWorkBookId"]},{"name":"val audioFile: AudioFileDTO","description":"com.example.examer.data.dto.WorkBookDTO.audioFile","location":"app/com.example.examer.data.dto/-work-book-d-t-o/audio-file.html","searchKeys":["audioFile","val audioFile: AudioFileDTO","com.example.examer.data.dto.WorkBookDTO.audioFile"]},{"name":"val audioFile: ExamerAudioFile","description":"com.example.examer.data.domain.WorkBook.audioFile","location":"app/com.example.examer.data.domain/-work-book/audio-file.html","searchKeys":["audioFile","val audioFile: ExamerAudioFile","com.example.examer.data.domain.WorkBook.audioFile"]},{"name":"val audioFileUrl: URL","description":"com.example.examer.data.dto.AudioFileDTO.audioFileUrl","location":"app/com.example.examer.data.dto/-audio-file-d-t-o/audio-file-url.html","searchKeys":["audioFileUrl","val audioFileUrl: URL","com.example.examer.data.dto.AudioFileDTO.audioFileUrl"]},{"name":"val authenticationService: FirebaseAuthenticationService","description":"com.example.examer.di.AppContainer.authenticationService","location":"app/com.example.examer.di/-app-container/authentication-service.html","searchKeys":["authenticationService","val authenticationService: FirebaseAuthenticationService","com.example.examer.di.AppContainer.authenticationService"]},{"name":"val backgroundColor: Color","description":"com.example.examer.ui.components.NavigationDrawerItemColors.backgroundColor","location":"app/com.example.examer.ui.components/-navigation-drawer-item-colors/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Color","com.example.examer.ui.components.NavigationDrawerItemColors.backgroundColor"]},{"name":"val cause: SignUpUiFailureType","description":"com.example.examer.viewmodels.SignUpUiState.Failed.cause","location":"app/com.example.examer.viewmodels/-sign-up-ui-state/-failed/cause.html","searchKeys":["cause","val cause: SignUpUiFailureType","com.example.examer.viewmodels.SignUpUiState.Failed.cause"]},{"name":"val completed: Color","description":"com.example.examer.ui.components.examerTestCard.StatusColors.completed","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/completed.html","searchKeys":["completed","val completed: Color","com.example.examer.ui.components.examerTestCard.StatusColors.completed"]},{"name":"val contentColor: Color","description":"com.example.examer.ui.components.NavigationDrawerItemColors.contentColor","location":"app/com.example.examer.ui.components/-navigation-drawer-item-colors/content-color.html","searchKeys":["contentColor","val contentColor: Color","com.example.examer.ui.components.NavigationDrawerItemColors.contentColor"]},{"name":"val darkExamerTestCardColors: ExamerTestCardColors","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion.darkExamerTestCardColors","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/-companion/dark-examer-test-card-colors.html","searchKeys":["darkExamerTestCardColors","val darkExamerTestCardColors: ExamerTestCardColors","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion.darkExamerTestCardColors"]},{"name":"val defaultExamerVectorArtCards: List<VectorArtCard>","description":"com.example.examer.ui.screens.onboarding.defaultExamerVectorArtCards","location":"app/com.example.examer.ui.screens.onboarding/default-examer-vector-art-cards.html","searchKeys":["defaultExamerVectorArtCards","val defaultExamerVectorArtCards: List<VectorArtCard>","com.example.examer.ui.screens.onboarding.defaultExamerVectorArtCards"]},{"name":"val description: String","description":"com.example.examer.data.domain.TestDetails.description","location":"app/com.example.examer.data.domain/-test-details/description.html","searchKeys":["description","val description: String","com.example.examer.data.domain.TestDetails.description"]},{"name":"val description: String","description":"com.example.examer.data.dto.TestDetailsDTO.description","location":"app/com.example.examer.data.dto/-test-details-d-t-o/description.html","searchKeys":["description","val description: String","com.example.examer.data.dto.TestDetailsDTO.description"]},{"name":"val description: String","description":"com.example.examer.ui.screens.onboarding.VectorArtCard.description","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/description.html","searchKeys":["description","val description: String","com.example.examer.ui.screens.onboarding.VectorArtCard.description"]},{"name":"val email: String","description":"com.example.examer.data.domain.ExamerUser.email","location":"app/com.example.examer.data.domain/-examer-user/email.html","searchKeys":["email","val email: String","com.example.examer.data.domain.ExamerUser.email"]},{"name":"val failureType: AuthenticationResult.FailureType","description":"com.example.examer.auth.AuthenticationResult.Failure.failureType","location":"app/com.example.examer.auth/-authentication-result/-failure/failure-type.html","searchKeys":["failureType","val failureType: AuthenticationResult.FailureType","com.example.examer.auth.AuthenticationResult.Failure.failureType"]},{"name":"val icon: ImageVector","description":"com.example.examer.ui.components.NavigationDrawerDestination.icon","location":"app/com.example.examer.ui.components/-navigation-drawer-destination/icon.html","searchKeys":["icon","val icon: ImageVector","com.example.examer.ui.components.NavigationDrawerDestination.icon"]},{"name":"val id: Int","description":"com.example.examer.ui.screens.onboarding.VectorArtCard.id","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/id.html","searchKeys":["id","val id: Int","com.example.examer.ui.screens.onboarding.VectorArtCard.id"]},{"name":"val id: String","description":"com.example.examer.data.domain.ExamerUser.id","location":"app/com.example.examer.data.domain/-examer-user/id.html","searchKeys":["id","val id: String","com.example.examer.data.domain.ExamerUser.id"]},{"name":"val id: String","description":"com.example.examer.data.domain.MultiChoiceQuestion.id","location":"app/com.example.examer.data.domain/-multi-choice-question/id.html","searchKeys":["id","val id: String","com.example.examer.data.domain.MultiChoiceQuestion.id"]},{"name":"val id: String","description":"com.example.examer.data.domain.TestDetails.id","location":"app/com.example.examer.data.domain/-test-details/id.html","searchKeys":["id","val id: String","com.example.examer.data.domain.TestDetails.id"]},{"name":"val id: String","description":"com.example.examer.data.domain.WorkBook.id","location":"app/com.example.examer.data.domain/-work-book/id.html","searchKeys":["id","val id: String","com.example.examer.data.domain.WorkBook.id"]},{"name":"val id: String","description":"com.example.examer.data.dto.TestDetailsDTO.id","location":"app/com.example.examer.data.dto/-test-details-d-t-o/id.html","searchKeys":["id","val id: String","com.example.examer.data.dto.TestDetailsDTO.id"]},{"name":"val id: String","description":"com.example.examer.data.dto.WorkBookDTO.id","location":"app/com.example.examer.data.dto/-work-book-d-t-o/id.html","searchKeys":["id","val id: String","com.example.examer.data.dto.WorkBookDTO.id"]},{"name":"val imageDescription: String","description":"com.example.examer.ui.screens.onboarding.VectorArtCard.imageDescription","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/image-description.html","searchKeys":["imageDescription","val imageDescription: String","com.example.examer.ui.screens.onboarding.VectorArtCard.imageDescription"]},{"name":"val inactiveColors: NavigationDrawerItemColors","description":"com.example.examer.ui.components.NavigationDrawerItemDefaults.inactiveColors","location":"app/com.example.examer.ui.components/-navigation-drawer-item-defaults/inactive-colors.html","searchKeys":["inactiveColors","val inactiveColors: NavigationDrawerItemColors","com.example.examer.ui.components.NavigationDrawerItemDefaults.inactiveColors"]},{"name":"val indexOfCorrectOption: Int","description":"com.example.examer.data.domain.MultiChoiceQuestion.indexOfCorrectOption","location":"app/com.example.examer.data.domain/-multi-choice-question/index-of-correct-option.html","searchKeys":["indexOfCorrectOption","val indexOfCorrectOption: Int","com.example.examer.data.domain.MultiChoiceQuestion.indexOfCorrectOption"]},{"name":"val indexOfCorrectOption: Int","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.indexOfCorrectOption","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/index-of-correct-option.html","searchKeys":["indexOfCorrectOption","val indexOfCorrectOption: Int","com.example.examer.data.dto.MultiChoiceQuestionDTO.indexOfCorrectOption"]},{"name":"val label: String","description":"com.example.examer.ui.screens.UserAttribute.label","location":"app/com.example.examer.ui.screens/-user-attribute/label.html","searchKeys":["label","val label: String","com.example.examer.ui.screens.UserAttribute.label"]},{"name":"val language: String","description":"com.example.examer.data.domain.TestDetails.language","location":"app/com.example.examer.data.domain/-test-details/language.html","searchKeys":["language","val language: String","com.example.examer.data.domain.TestDetails.language"]},{"name":"val language: String","description":"com.example.examer.data.dto.TestDetailsDTO.language","location":"app/com.example.examer.data.dto/-test-details-d-t-o/language.html","searchKeys":["language","val language: String","com.example.examer.data.dto.TestDetailsDTO.language"]},{"name":"val lightExamerTestCardColors: ExamerTestCardColors","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion.lightExamerTestCardColors","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/-companion/light-examer-test-card-colors.html","searchKeys":["lightExamerTestCardColors","val lightExamerTestCardColors: ExamerTestCardColors","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.Companion.lightExamerTestCardColors"]},{"name":"val localAudioFileUri: Uri","description":"com.example.examer.data.domain.ExamerAudioFile.localAudioFileUri","location":"app/com.example.examer.data.domain/-examer-audio-file/local-audio-file-uri.html","searchKeys":["localAudioFileUri","val localAudioFileUri: Uri","com.example.examer.data.domain.ExamerAudioFile.localAudioFileUri"]},{"name":"val localDateTime: LocalDateTime","description":"com.example.examer.data.domain.TestDetails.localDateTime","location":"app/com.example.examer.data.domain/-test-details/local-date-time.html","searchKeys":["localDateTime","val localDateTime: LocalDateTime","com.example.examer.data.domain.TestDetails.localDateTime"]},{"name":"val logInViewModelFactory: LogInViewModelFactory","description":"com.example.examer.di.AppContainer.logInViewModelFactory","location":"app/com.example.examer.di/-app-container/log-in-view-model-factory.html","searchKeys":["logInViewModelFactory","val logInViewModelFactory: LogInViewModelFactory","com.example.examer.di.AppContainer.logInViewModelFactory"]},{"name":"val mark: Int","description":"com.example.examer.data.domain.MultiChoiceQuestion.mark","location":"app/com.example.examer.data.domain/-multi-choice-question/mark.html","searchKeys":["mark","val mark: Int","com.example.examer.data.domain.MultiChoiceQuestion.mark"]},{"name":"val markForQuestion: Int","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.markForQuestion","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/mark-for-question.html","searchKeys":["markForQuestion","val markForQuestion: Int","com.example.examer.data.dto.MultiChoiceQuestionDTO.markForQuestion"]},{"name":"val marksObtained: Int","description":"com.example.examer.data.domain.TestResult.marksObtained","location":"app/com.example.examer.data.domain/-test-result/marks-obtained.html","searchKeys":["marksObtained","val marksObtained: Int","com.example.examer.data.domain.TestResult.marksObtained"]},{"name":"val marksObtainedForWorkBook: Int","description":"com.example.examer.data.domain.UserAnswers.marksObtainedForWorkBook","location":"app/com.example.examer.data.domain/-user-answers/marks-obtained-for-work-book.html","searchKeys":["marksObtainedForWorkBook","val marksObtainedForWorkBook: Int","com.example.examer.data.domain.UserAnswers.marksObtainedForWorkBook"]},{"name":"val marksObtainedForWorkBook: String","description":"com.example.examer.data.dto.UserAnswersDTO.marksObtainedForWorkBook","location":"app/com.example.examer.data.dto/-user-answers-d-t-o/marks-obtained-for-work-book.html","searchKeys":["marksObtainedForWorkBook","val marksObtainedForWorkBook: String","com.example.examer.data.dto.UserAnswersDTO.marksObtainedForWorkBook"]},{"name":"val maximumMarks: Int","description":"com.example.examer.data.domain.TestResult.maximumMarks","location":"app/com.example.examer.data.domain/-test-result/maximum-marks.html","searchKeys":["maximumMarks","val maximumMarks: Int","com.example.examer.data.domain.TestResult.maximumMarks"]},{"name":"val maximumMarks: String","description":"com.example.examer.data.dto.TestDetailsDTO.maximumMarks","location":"app/com.example.examer.data.dto/-test-details-d-t-o/maximum-marks.html","searchKeys":["maximumMarks","val maximumMarks: String","com.example.examer.data.dto.TestDetailsDTO.maximumMarks"]},{"name":"val missed: Color","description":"com.example.examer.ui.components.examerTestCard.StatusColors.missed","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/missed.html","searchKeys":["missed","val missed: Color","com.example.examer.ui.components.examerTestCard.StatusColors.missed"]},{"name":"val name: String","description":"com.example.examer.data.domain.ExamerUser.name","location":"app/com.example.examer.data.domain/-examer-user/name.html","searchKeys":["name","val name: String","com.example.examer.data.domain.ExamerUser.name"]},{"name":"val name: String","description":"com.example.examer.ui.components.NavigationDrawerDestination.name","location":"app/com.example.examer.ui.components/-navigation-drawer-destination/name.html","searchKeys":["name","val name: String","com.example.examer.ui.components.NavigationDrawerDestination.name"]},{"name":"val newEmail: String","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.newEmail","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-email/new-email.html","searchKeys":["newEmail","val newEmail: String","com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.newEmail"]},{"name":"val newName: String","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Name.newName","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-name/new-name.html","searchKeys":["newName","val newName: String","com.example.examer.auth.AuthenticationService.UpdateAttribute.Name.newName"]},{"name":"val newPassword: String","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.newPassword","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-password/new-password.html","searchKeys":["newPassword","val newPassword: String","com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.newPassword"]},{"name":"val newPhotoUri: Uri","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri.newPhotoUri","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-profile-photo-uri/new-photo-uri.html","searchKeys":["newPhotoUri","val newPhotoUri: Uri","com.example.examer.auth.AuthenticationService.UpdateAttribute.ProfilePhotoUri.newPhotoUri"]},{"name":"val numberOfRepeatsAllowedForAudioFile: Int","description":"com.example.examer.data.domain.ExamerAudioFile.numberOfRepeatsAllowedForAudioFile","location":"app/com.example.examer.data.domain/-examer-audio-file/number-of-repeats-allowed-for-audio-file.html","searchKeys":["numberOfRepeatsAllowedForAudioFile","val numberOfRepeatsAllowedForAudioFile: Int","com.example.examer.data.domain.ExamerAudioFile.numberOfRepeatsAllowedForAudioFile"]},{"name":"val numberOfRepeatsAllowedForAudioFile: Int","description":"com.example.examer.data.dto.AudioFileDTO.numberOfRepeatsAllowedForAudioFile","location":"app/com.example.examer.data.dto/-audio-file-d-t-o/number-of-repeats-allowed-for-audio-file.html","searchKeys":["numberOfRepeatsAllowedForAudioFile","val numberOfRepeatsAllowedForAudioFile: Int","com.example.examer.data.dto.AudioFileDTO.numberOfRepeatsAllowedForAudioFile"]},{"name":"val oldPassword: String","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.oldPassword","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-password/old-password.html","searchKeys":["oldPassword","val oldPassword: String","com.example.examer.auth.AuthenticationService.UpdateAttribute.Password.oldPassword"]},{"name":"val onClick: () -> Unit","description":"com.example.examer.ui.components.NavigationDrawerDestination.onClick","location":"app/com.example.examer.ui.components/-navigation-drawer-destination/on-click.html","searchKeys":["onClick","val onClick: () -> Unit","com.example.examer.ui.components.NavigationDrawerDestination.onClick"]},{"name":"val onClick: () -> Unit","description":"com.example.examer.ui.screens.UserAttribute.onClick","location":"app/com.example.examer.ui.screens/-user-attribute/on-click.html","searchKeys":["onClick","val onClick: () -> Unit","com.example.examer.ui.screens.UserAttribute.onClick"]},{"name":"val open: Color","description":"com.example.examer.ui.components.examerTestCard.StatusColors.open","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/open.html","searchKeys":["open","val open: Color","com.example.examer.ui.components.examerTestCard.StatusColors.open"]},{"name":"val options: Array<String>","description":"com.example.examer.data.domain.MultiChoiceQuestion.options","location":"app/com.example.examer.data.domain/-multi-choice-question/options.html","searchKeys":["options","val options: Array<String>","com.example.examer.data.domain.MultiChoiceQuestion.options"]},{"name":"val options: Array<String>","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.options","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/options.html","searchKeys":["options","val options: Array<String>","com.example.examer.data.dto.MultiChoiceQuestionDTO.options"]},{"name":"val password: String","description":"com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.password","location":"app/com.example.examer.auth/-authentication-service/-update-attribute/-email/password.html","searchKeys":["password","val password: String","com.example.examer.auth.AuthenticationService.UpdateAttribute.Email.password"]},{"name":"val phoneNumber: String?","description":"com.example.examer.data.domain.ExamerUser.phoneNumber","location":"app/com.example.examer.data.domain/-examer-user/phone-number.html","searchKeys":["phoneNumber","val phoneNumber: String?","com.example.examer.data.domain.ExamerUser.phoneNumber"]},{"name":"val photoUrl: Uri? = null","description":"com.example.examer.data.domain.ExamerUser.photoUrl","location":"app/com.example.examer.data.domain/-examer-user/photo-url.html","searchKeys":["photoUrl","val photoUrl: Uri? = null","com.example.examer.data.domain.ExamerUser.photoUrl"]},{"name":"val previousTestsViewModelFactory: PreviousTestsViewModelFactory","description":"com.example.examer.di.AppContainer.previousTestsViewModelFactory","location":"app/com.example.examer.di/-app-container/previous-tests-view-model-factory.html","searchKeys":["previousTestsViewModelFactory","val previousTestsViewModelFactory: PreviousTestsViewModelFactory","com.example.examer.di.AppContainer.previousTestsViewModelFactory"]},{"name":"val profileScreenViewModelFactory: ProfileScreenViewModelFactory","description":"com.example.examer.di.AppContainer.profileScreenViewModelFactory","location":"app/com.example.examer.di/-app-container/profile-screen-view-model-factory.html","searchKeys":["profileScreenViewModelFactory","val profileScreenViewModelFactory: ProfileScreenViewModelFactory","com.example.examer.di.AppContainer.profileScreenViewModelFactory"]},{"name":"val question: String","description":"com.example.examer.data.domain.MultiChoiceQuestion.question","location":"app/com.example.examer.data.domain/-multi-choice-question/question.html","searchKeys":["question","val question: String","com.example.examer.data.domain.MultiChoiceQuestion.question"]},{"name":"val question: String","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.question","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/question.html","searchKeys":["question","val question: String","com.example.examer.data.dto.MultiChoiceQuestionDTO.question"]},{"name":"val questionNumber: Int","description":"com.example.examer.data.dto.MultiChoiceQuestionDTO.questionNumber","location":"app/com.example.examer.data.dto/-multi-choice-question-d-t-o/question-number.html","searchKeys":["questionNumber","val questionNumber: Int","com.example.examer.data.dto.MultiChoiceQuestionDTO.questionNumber"]},{"name":"val questions: List<MultiChoiceQuestion>","description":"com.example.examer.data.domain.WorkBook.questions","location":"app/com.example.examer.data.domain/-work-book/questions.html","searchKeys":["questions","val questions: List<MultiChoiceQuestion>","com.example.examer.data.domain.WorkBook.questions"]},{"name":"val questions: List<MultiChoiceQuestionDTO>","description":"com.example.examer.data.dto.MultiChoiceQuestionListDTO.questions","location":"app/com.example.examer.data.dto/-multi-choice-question-list-d-t-o/questions.html","searchKeys":["questions","val questions: List<MultiChoiceQuestionDTO>","com.example.examer.data.dto.MultiChoiceQuestionListDTO.questions"]},{"name":"val questions: List<MultiChoiceQuestionDTO>","description":"com.example.examer.data.dto.WorkBookDTO.questions","location":"app/com.example.examer.data.dto/-work-book-d-t-o/questions.html","searchKeys":["questions","val questions: List<MultiChoiceQuestionDTO>","com.example.examer.data.dto.WorkBookDTO.questions"]},{"name":"val repository: Repository","description":"com.example.examer.di.AppContainer.repository","location":"app/com.example.examer.di/-app-container/repository.html","searchKeys":["repository","val repository: Repository","com.example.examer.di.AppContainer.repository"]},{"name":"val route: String","description":"com.example.examer.ui.navigation.ExamerDestinations.route","location":"app/com.example.examer.ui.navigation/-examer-destinations/route.html","searchKeys":["route","val route: String","com.example.examer.ui.navigation.ExamerDestinations.route"]},{"name":"val route: String","description":"com.example.examer.ui.navigation.OnBoardingDestinations.route","location":"app/com.example.examer.ui.navigation/-on-boarding-destinations/route.html","searchKeys":["route","val route: String","com.example.examer.ui.navigation.OnBoardingDestinations.route"]},{"name":"val route: String","description":"com.example.examer.ui.navigation.TakeTestScreenDestinations.route","location":"app/com.example.examer.ui.navigation/-take-test-screen-destinations/route.html","searchKeys":["route","val route: String","com.example.examer.ui.navigation.TakeTestScreenDestinations.route"]},{"name":"val scheduled: Color","description":"com.example.examer.ui.components.examerTestCard.StatusColors.scheduled","location":"app/com.example.examer.ui.components.examerTestCard/-status-colors/scheduled.html","searchKeys":["scheduled","val scheduled: Color","com.example.examer.ui.components.examerTestCard.StatusColors.scheduled"]},{"name":"val scheduledTestsViewModelFactory: TestsViewModelFactory","description":"com.example.examer.di.AppContainer.scheduledTestsViewModelFactory","location":"app/com.example.examer.di/-app-container/scheduled-tests-view-model-factory.html","searchKeys":["scheduledTestsViewModelFactory","val scheduledTestsViewModelFactory: TestsViewModelFactory","com.example.examer.di.AppContainer.scheduledTestsViewModelFactory"]},{"name":"val shape: RoundedCornerShape","description":"com.example.examer.ui.components.NavigationDrawerItemDefaults.shape","location":"app/com.example.examer.ui.components/-navigation-drawer-item-defaults/shape.html","searchKeys":["shape","val shape: RoundedCornerShape","com.example.examer.ui.components.NavigationDrawerItemDefaults.shape"]},{"name":"val signUpViewModelFactory: SignUpViewModelFactory","description":"com.example.examer.di.AppContainer.signUpViewModelFactory","location":"app/com.example.examer.di/-app-container/sign-up-view-model-factory.html","searchKeys":["signUpViewModelFactory","val signUpViewModelFactory: SignUpViewModelFactory","com.example.examer.di.AppContainer.signUpViewModelFactory"]},{"name":"val statusColors: StatusColors","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.statusColors","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/status-colors.html","searchKeys":["statusColors","val statusColors: StatusColors","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.statusColors"]},{"name":"val takeTestButtonColor: Color","description":"com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.takeTestButtonColor","location":"app/com.example.examer.ui.components.examerTestCard/-examer-test-card-colors/take-test-button-color.html","searchKeys":["takeTestButtonColor","val takeTestButtonColor: Color","com.example.examer.ui.components.examerTestCard.ExamerTestCardColors.takeTestButtonColor"]},{"name":"val testDetailsId: String","description":"com.example.examer.data.domain.TestResult.testDetailsId","location":"app/com.example.examer.data.domain/-test-result/test-details-id.html","searchKeys":["testDetailsId","val testDetailsId: String","com.example.examer.data.domain.TestResult.testDetailsId"]},{"name":"val testDurationInMinutes: Int","description":"com.example.examer.data.domain.TestDetails.testDurationInMinutes","location":"app/com.example.examer.data.domain/-test-details/test-duration-in-minutes.html","searchKeys":["testDurationInMinutes","val testDurationInMinutes: Int","com.example.examer.data.domain.TestDetails.testDurationInMinutes"]},{"name":"val testDurationInMinutes: String","description":"com.example.examer.data.dto.TestDetailsDTO.testDurationInMinutes","location":"app/com.example.examer.data.dto/-test-details-d-t-o/test-duration-in-minutes.html","searchKeys":["testDurationInMinutes","val testDurationInMinutes: String","com.example.examer.data.dto.TestDetailsDTO.testDurationInMinutes"]},{"name":"val testStatus: Status","description":"com.example.examer.data.domain.TestDetails.testStatus","location":"app/com.example.examer.data.domain/-test-details/test-status.html","searchKeys":["testStatus","val testStatus: Status","com.example.examer.data.domain.TestDetails.testStatus"]},{"name":"val testStatus: String","description":"com.example.examer.data.dto.TestDetailsDTO.testStatus","location":"app/com.example.examer.data.dto/-test-details-d-t-o/test-status.html","searchKeys":["testStatus","val testStatus: String","com.example.examer.data.dto.TestDetailsDTO.testStatus"]},{"name":"val timeStamp: String","description":"com.example.examer.data.dto.TestDetailsDTO.timeStamp","location":"app/com.example.examer.data.dto/-test-details-d-t-o/time-stamp.html","searchKeys":["timeStamp","val timeStamp: String","com.example.examer.data.dto.TestDetailsDTO.timeStamp"]},{"name":"val title: String","description":"com.example.examer.data.domain.TestDetails.title","location":"app/com.example.examer.data.domain/-test-details/title.html","searchKeys":["title","val title: String","com.example.examer.data.domain.TestDetails.title"]},{"name":"val title: String","description":"com.example.examer.data.dto.TestDetailsDTO.title","location":"app/com.example.examer.data.dto/-test-details-d-t-o/title.html","searchKeys":["title","val title: String","com.example.examer.data.dto.TestDetailsDTO.title"]},{"name":"val title: String","description":"com.example.examer.ui.screens.onboarding.VectorArtCard.title","location":"app/com.example.examer.ui.screens.onboarding/-vector-art-card/title.html","searchKeys":["title","val title: String","com.example.examer.ui.screens.onboarding.VectorArtCard.title"]},{"name":"val totalNumberOfWorkBooks: Int","description":"com.example.examer.data.domain.TestDetails.totalNumberOfWorkBooks","location":"app/com.example.examer.data.domain/-test-details/total-number-of-work-books.html","searchKeys":["totalNumberOfWorkBooks","val totalNumberOfWorkBooks: Int","com.example.examer.data.domain.TestDetails.totalNumberOfWorkBooks"]},{"name":"val totalNumberOfWorkBooks: String","description":"com.example.examer.data.dto.TestDetailsDTO.totalNumberOfWorkBooks","location":"app/com.example.examer.data.dto/-test-details-d-t-o/total-number-of-work-books.html","searchKeys":["totalNumberOfWorkBooks","val totalNumberOfWorkBooks: String","com.example.examer.data.dto.TestDetailsDTO.totalNumberOfWorkBooks"]},{"name":"val user: ExamerUser","description":"com.example.examer.auth.AuthenticationResult.Success.user","location":"app/com.example.examer.auth/-authentication-result/-success/user.html","searchKeys":["user","val user: ExamerUser","com.example.examer.auth.AuthenticationResult.Success.user"]},{"name":"val value: Int","description":"com.example.examer.data.domain.IndexOfChosenOption.value","location":"app/com.example.examer.data.domain/-index-of-chosen-option/value.html","searchKeys":["value","val value: Int","com.example.examer.data.domain.IndexOfChosenOption.value"]},{"name":"val value: String","description":"com.example.examer.ui.screens.UserAttribute.value","location":"app/com.example.examer.ui.screens/-user-attribute/value.html","searchKeys":["value","val value: String","com.example.examer.ui.screens.UserAttribute.value"]},{"name":"val workBookViewModelFactory: WorkBookViewModelFactory","description":"com.example.examer.di.AppContainer.workBookViewModelFactory","location":"app/com.example.examer.di/-app-container/work-book-view-model-factory.html","searchKeys":["workBookViewModelFactory","val workBookViewModelFactory: WorkBookViewModelFactory","com.example.examer.di.AppContainer.workBookViewModelFactory"]},{"name":"value class IndexOfChosenOption(val value: Int)","description":"com.example.examer.data.domain.IndexOfChosenOption","location":"app/com.example.examer.data.domain/-index-of-chosen-option/index.html","searchKeys":["IndexOfChosenOption","value class IndexOfChosenOption(val value: Int)","com.example.examer.data.domain.IndexOfChosenOption"]},{"name":"value class MultiChoiceQuestionListDTO(val questions: List<MultiChoiceQuestionDTO>)","description":"com.example.examer.data.dto.MultiChoiceQuestionListDTO","location":"app/com.example.examer.data.dto/-multi-choice-question-list-d-t-o/index.html","searchKeys":["MultiChoiceQuestionListDTO","value class MultiChoiceQuestionListDTO(val questions: List<MultiChoiceQuestionDTO>)","com.example.examer.data.dto.MultiChoiceQuestionListDTO"]},{"name":"var currentProgress: Float","description":"com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.currentProgress","location":"app/com.example.examer.ui.screens.listenToAudioScreen/-playback-state/current-progress.html","searchKeys":["currentProgress","var currentProgress: Float","com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.currentProgress"]},{"name":"var isPlaybackEnabled: Boolean","description":"com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.isPlaybackEnabled","location":"app/com.example.examer.ui.screens.listenToAudioScreen/-playback-state/is-playback-enabled.html","searchKeys":["isPlaybackEnabled","var isPlaybackEnabled: Boolean","com.example.examer.ui.screens.listenToAudioScreen.PlaybackState.isPlaybackEnabled"]}]
